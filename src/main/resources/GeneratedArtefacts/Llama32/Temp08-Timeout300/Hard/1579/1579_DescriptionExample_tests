package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.1579;

import it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.1579.Solution;

public class 1579_DescriptionExample_testsTest {
    Solution solution = new Solution();

    @Test
    public void test1() {
        int n = 4;
        int[][] edges = {{3,1,2},{3,2,3},{1,1,3},{1,2,4},{1,1,2},{2,3,4}};
        int expectedOutput = 2;
        assertEquals(expectedOutput, solution.maxNumEdges(n, edges));
    }

    @Test
    public void test2() {
        int n = 4;
        int[][] edges = {{3,1,2},{3,2,3},{1,1,4},{2,1,4}};
        int expectedOutput = 0;
        assertEquals(expectedOutput, solution.maxNumEdges(n, edges));
    }

    @Test
    public void test3() {
        int n = 4;
        int[][] edges = {{3,2,3},{1,1,2},{2,3,4}};
        int expectedOutput = -1;
        assertEquals(expectedOutput, solution.maxNumEdges(n, edges));
    }

    @Test
    public void test4() {
        int n = 5;
        int[][] edges = {{2,0,1},{2,1,2},{1,3,1},{2,4,2},{1,5,1}};
        int expectedOutput = 0;
        assertEquals(expectedOutput, solution.maxNumEdges(n, edges));
    }

    @Test
    public void test5() {
        int n = 6;
        int[][] edges = {{4,1,1},{3,1,2},{2,1,3},{2,3,3},{1,2,3},{1,1,2}};
        int expectedOutput = -1;
        assertEquals(expectedOutput, solution.maxNumEdges(n, edges));
    }
}