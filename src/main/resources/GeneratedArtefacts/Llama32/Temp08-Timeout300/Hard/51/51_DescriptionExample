```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import java.util.Arrays;
import java.util.List;

public class Saks_nQueens {

    @Test
    public void test_nQueens_4x4() {
        int[][] board = {{'.', '.', '.', '.'}, {'.', '.', '.', '.'}, {'.', '.', '.', '.'}, {'.', '.', '.', '.'}};
        List<String[]> result = solution(4, board);
        String[] expected1 = {".Q..", "...Q", "Q...", "..Q."};
        String[] expected2 = {".Q..", "...Q", "Q...", "..Q."};
        assert Arrays.deepEquals(result.get(0), expected1);
        assert Arrays.deepEquals(result.get(1), expected2);
    }

    @Test
    public void test_nQueens_1x1() {
        String[][] board = {{"Q"}};
        List<String[]> result = solution(1, board);
        String[] expected = {"Q"};
        assert Arrays.equals(result.toArray(new String[0]), expected);
    }

    @Test
    public void test_nQueens_2x2() {
        int[][] board = {{'.', '.'}, {'.', '.'}};
        List<String[]> result = solution(2, board);
        String[] expected1 = {".Q.", "..."};
        String[] expected2 = {"..", ".Q."};
        assert Arrays.deepEquals(result.get(0), expected1);
        assert Arrays.deepEquals(result.get(1), expected2);
    }

    @Test
    public void test_nQueens_3x3() {
        int[][] board = {{'.', '.', '.'}, {'.', '.', '.'}, {'.', '.', '.'}};
        List<String[]> result = solution(3, board);
        String[] expected1 = {".Q..", "...Q", "Q...", "..Q."};
        String[] expected2 = {"..Q.", "Q...", "...Q", ".Q.."};
        assert Arrays.deepEquals(result.get(0), expected1);
        assert Arrays.deepEquals(result.get(1), expected2);
    }

    @Test
    public void test_nQueens_5x5() {
        int[][] board = {{'.', '.', '.', '.', '.'}, {'.', '.', '.', '.', '.'}, {'.', '.', '.', '.', '.'}, {'.', '.', '.', '.', '.'}, {'.', '.', '.', '.', '.'}};
        List<String[]> result = solution(5, board);
    }

    public List<String[]> solution(int n, int[][] board) {
        List<String[]> result = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                if (isSafe(board, i, j)) {
                    String[] strBoard = new String[n];
                    for (int k = 0; k < n; k++) {
                        if (k == i) {
                            strBoard[k] = "Q";
                        } else if (j - k == i - k || j + k == i + k) {
                            strBoard[k] = ".Q.";
                        } else {
                            strBoard[k] = ".";
                        }
                    }
                    result.add(strBoard);
                }
            }
        }
        return result;
    }

    public boolean isSafe(int[][] board, int row, int col) {
        for (int i = 0; i < row; i++) {
            if (board[i][col] == 'Q') {
                return false;
            }
        }
        for (int i = row - 1, j = col; j >= 0 && j + 1 < n; i--, j--) {
            if (board[i][j] == 'Q') {
                return false;
            }
        }
        for (int i = row - 1, j = col; j < n && j + 1 < n; i--, j++) {
            if (board[i][j] == 'Q') {
                return false;
            }
        }
        return true;
    }

    public static final int n = 5;
}
```