package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.1312;

public class Solution {
    public int minInsertions(String s) {
        int n = s.length();
        boolean[][] dp = new boolean[n][n];

        for (int i = 0; i < n; i++) {
            dp[i][i] = true;
        }

        for (int cl = 1; cl < n; cl++) {
            for (int i = 0, j = cl; j < n; i++, j++) {
                if (s.charAt(i) == s.charAt(j - 1)) {
                    dp[i][j] = dp[i + 1][j - 1];
                } else {
                    dp[i][j] = dp[i][j - 1] || dp[i + 1][j];
                }
            }
        }

        int steps = 0;
        for (int i = 0; i < n / 2; i++) {
            if (!dp[i][n - i - 1]) {
                steps++;
            }
        }

        return steps * 2;
    }
}