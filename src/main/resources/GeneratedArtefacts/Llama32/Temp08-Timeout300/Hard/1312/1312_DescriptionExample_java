```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.1312;

public class Solution {
    public int minInsertionsToMakePalindrome(String s) {
        int len = s.length();
        int[][] dp = new int[len + 1][len + 1];
        for (int i = 0; i <= len; i++) {
            dp[i][0] = i;
            dp[0][i] = i;
        }
        for (int i = 1; i <= len; i++) {
            for (int j = 1; j <= len; j++) {
                if (s.charAt(i - 1) == s.charAt(len - j)) {
                    dp[i][j] = dp[i - 1][j - 1];
                } else {
                    dp[i][j] = Math.min(dp[i - 1][j], dp[i][j - 1]) + 1;
                }
            }
        }
        return dp[len][len];
    }
}
```