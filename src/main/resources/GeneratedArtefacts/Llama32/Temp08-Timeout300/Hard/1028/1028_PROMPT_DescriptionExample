As a professional Software Tester, generate a complete Junit class test file (name the class as :'1028_DescriptionExample', and use as first line the declaration: 'package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen') with 5 different JUnit tests for the following description in natural language with examples. Specifically below the description, each example is introduced by the keyword [--Example XX--] (where XX is a number), and it is composed by an input tuple and an expected output. Emit only the Java code, without any other tag or text.  Here is the description: 
We run a preorder depth-first search (DFS) on the "root" of a binary tree.
At each node in this traversal, we output "D" dashes (where "D" is the depth of this node), then we output the value of this node. If the depth of a node is "D", the depth of its immediate child is "D + 1". The depth of the "root" node is "0".
If a node has only one child, that child is guaranteed to be the left child.
Given the output "traversal" of this traversal, recover the tree and return its "root".
Constraints:
- The number of nodes in the original tree is in the range "[1, 1000]".
- "1 <= Node.val <= 10^9"

[--Example 1--]
Input: traversal = "1-2--3--4-5--6--7"
Output: [1,2,5,3,4,6,7]

[--Example 2--]
Input: traversal = "1-2--3---4-5--6---7"
Output: [1,2,5,3,null,6,null,4,null,7]

[--Example 3--]
Input: traversal = "1-401--349---90--88"
Output: [1,401,null,349,88,90]

