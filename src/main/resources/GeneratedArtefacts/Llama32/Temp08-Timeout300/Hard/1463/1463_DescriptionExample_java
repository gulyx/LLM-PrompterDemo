package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.1463;

public class Solution {
    public int maxRobotCherries(int[][] grid) {
        if (grid == null || grid.length == 0) {
            return 0;
        }
        int m = grid.length, n = grid[0].length;
        long[][] dp1 = new long[m][n];
        long[][] dp2 = new long[m][n];

        for (int i = 0; i < m; i++) {
            dp1[i][0] = dp2[i][n - 1] = grid[i][0];
        }
        for (int j = 0; j < n; j++) {
            dp1[0][j] = dp2[m - 1][j] = grid[0][j];
        }

        for (int i = 1; i < m; i++) {
            for (int j = 1; j < n - 1; j++) {

                dp1[i][j] = Math.max(dp1[i-1][j], dp2[i][j + 1]) + grid[i][j];
                dp2[i][j] = Math.max(dp1[i - 1][j+1],dp2[i+1][j])+grid[i][j];

            }
        }

        long ans = Math.max(dp1[m-1][0],dp2[0][n-1]);
        return (int)ans;
    }

}