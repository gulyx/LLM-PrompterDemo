```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;

public class 1944_DescriptionExampleTest {

    @Test
    public void testFirstCase() {
        int[] heights = {10,6,8,5,11,9};
        int[] expectedOutput = {3,1,2,1,1,0};
        int[] output = new int[heights.length];
        for(int i=0; i<heights.length;i++){
            output[i] = findNumberOfPeople(heights,i);
        }
        assertArrayEquals(expectedOutput, output);
    }

    @Test
    public void testSecondCase() {
        int[] heights = {5,1,2,3,10};
        int[] expectedOutput = {4,1,1,1,0};
        int[] output = new int[heights.length];
        for(int i=0; i<heights.length;i++){
            output[i] = findNumberOfPeople(heights,i);
        }
        assertArrayEquals(expectedOutput, output);
    }

    @Test
    public void testThirdCase() {
        int[] heights = {1,2,3,4,5};
        int[] expectedOutput = {0,0,0,0,0};
        int[] output = new int[heights.length];
        for(int i=0; i<heights.length;i++){
            output[i] = findNumberOfPeople(heights,i);
        }
        assertArrayEquals(expectedOutput, output);
    }

    @Test
    public void testFourthCase() {
        int[] heights = {5,1,2,3};
        int[] expectedOutput = {0,0,0,0};
        int[] output = new int[heights.length];
        for(int i=0; i<heights.length;i++){
            output[i] = findNumberOfPeople(heights,i);
        }
        assertArrayEquals(expectedOutput, output);
    }

    @Test
    public void testFifthCase() {
        int[] heights = {1};
        int[] expectedOutput = {0};
        int[] output = new int[heights.length];
        for(int i=0; i<heights.length;i++){
            output[i] = findNumberOfPeople(heights,i);
        }
        assertArrayEquals(expectedOutput, output);
    }

    public int findNumberOfPeople(int[] heights, int i){
       int maxHeight = heights[i];
       for(int j=i+1;j<heights.length;j++){
           if(heights[j]>maxHeight){
               return j-i-1;
           }
       }
       return 0;
    }
}
```