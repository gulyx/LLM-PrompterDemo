As a professional Software Tester, generate a complete Junit test-class (name the test-class as: '1074_DescriptionOnly_testsTest', and use as first line the declaration: 'package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.1074;') with 5 different JUnit tests for a Java class-under-test (you can assume the class-under-test is named: Solution, and import it as: 'import it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.1074.Solution;'). The class-under-test implements the following description in natural language. Emit only the Java code, without any other tag or text. Here is the description for the class-under-test: 
Given a "matrix" and a "target", return the number of non-empty submatrices that sum to target.

A submatrix "x1, y1, x2, y2" is the set of all cells "matrix[x][y]" with "x1 <= x <= x2" and "y1 <= y <= y2".

Two submatrices "(x1, y1, x2, y2)" and "(x1', y1', x2', y2')" are different if they have some coordinate that is different: for example, if "x1 != x1'".

Constraints:

* "1 <= matrix.length <= 100"
* "1 <= matrix[0].length <= 100"
* "-1000 <= matrix[i][j] <= 1000"
* "-10^8 <= target <= 10^8"