package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.2392;

import it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.2392.Solution;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

public class 2392_DescriptionOnly_testsTest {

    @Test
    public void test1() {
        Solution solution = new Solution();
        int[][] rowConditions = {{2,1},{4,3}};
        int[][] colConditions = {{1,2}};
        assertArrayEquals(solution.descriptionOnly(rowConditions, colConditions), new int[][]{{0, 1, 2}, {3, 4, 0}});
    }

    @Test
    public void test2() {
        Solution solution = new Solution();
        int[][] rowConditions = {{3,2},{4,5}};
        int[][] colConditions = {{1,2}};
        assertArrayEquals(solution.descriptionOnly(rowConditions, colConditions), new int[][]{{0, 1, 2}, {3, 4, 0}});
    }

    @Test
    public void test3() {
        Solution solution = new Solution();
        int[][] rowConditions = {{3,2},{4,5}};
        int[][] colConditions = {{1,3}};
        assertArrayEquals(solution.descriptionOnly(rowConditions, colConditions), new int[][]{{0, 2}, {1, 3, 4}});
    }

    @Test
    public void test4() {
        Solution solution = new Solution();
        int[][] rowConditions = {{3,2},{4,5}};
        int[][] colConditions = {{2,1}};
        assertArrayEquals(solution.descriptionOnly(rowConditions, colConditions), new int[][]{{0, 2}, {3, 1}});
    }

    @Test
    public void test5() {
        Solution solution = new Solution();
        int[][] rowConditions = {};
        int[][] colConditions = {{1,2}};
        assertArrayEquals(solution.descriptionOnly(rowConditions, colConditions), new int[][]{{0, 1}, {2, 3}});
    }
}