package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;
public class 2392_DescriptionOnlyTest {

    @Test
    public void test1() {
        int k = 3;
        int[][] rowConditions = {{1, 2}, {2, 1}};
        int[][] colConditions = {{1, 3}, {3, 1}};
        int[][] expected = {{1, 0, 2}, {0, 3, 1}};
        int[][] result = new Solution().constructMatrix(k, rowConditions, colConditions);
        assertArrayEquals(expected, result);
    }

    @Test
    public void test2() {
        int k = 4;
        int[][] rowConditions = {{1, 2}, {3, 4}};
        int[][] colConditions = {{1, 5}, {6, 2}};
        int[][] expected = {{1, 0, 0, 5}, {2, 0, 0, 0}, {3, 0, 0, 4}, {0, 0, 0, 0}};
        int[][] result = new Solution().constructMatrix(k, rowConditions, colConditions);
        assertArrayEquals(expected, result);
    }

    @Test
    public void test3() {
        int k = 5;
        int[][] rowConditions = {{1, 2}, {4, 5}};
        int[][] colConditions = {{1, 6}, {7, 2}};
        int[][] expected = {{1, 0, 0, 0, 6}, {0, 3, 0, 0, 0}, {2, 0, 4, 0, 0}, {0, 0, 0, 5, 0}, {0, 0, 0, 0, 0}};
        int[][] result = new Solution().constructMatrix(k, rowConditions, colConditions);
        assertArrayEquals(expected, result);
    }

    @Test
    public void test4() {
        int k = 1;
        int[][] rowConditions = {{1, 1}};
        int[][] colConditions = {{1, 1}};
        int[][] expected = {{1, 0}};
        int[][] result = new Solution().constructMatrix(k, rowConditions, colConditions);
        assertArrayEquals(expected, result);
    }

    @Test
    public void test5() {
        int k = 10;
        int[][] rowConditions = {};
        int[][] colConditions = {};
        int[][] expected = {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0}};
        int[][] result = new Solution().constructMatrix(k, rowConditions, colConditions);
        assertArrayEquals(expected, result);
    }
}