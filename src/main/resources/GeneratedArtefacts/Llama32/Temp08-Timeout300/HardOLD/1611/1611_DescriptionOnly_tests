package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertThrows;
import static org.junit.Test;

public class1611_DescriptionOnlyTest {

    @Test
    public void testBitManipulation() {
        int n = 2; // binary: 10
        assertEquals(1, getMinimumBits(n));
    }

    @Test
    public void testTwoConsecutiveOnes() {
        int n = 3; // binary: 11
        assertEquals(2, getMinimumBits(n));
    }

    @Test
    public void testConsecutiveZeros() {
        int n = 4; // binary: 100
        assertEquals(0, getMinimumBits(n));
    }

    @Test
    public void testConsecutiveOnesAndZeros() {
        int n = 5; // binary: 101
        assertEquals(1, getMinimumBits(n));
    }

    @Test
    public void testAllConsecutiveOnes() {
        int n = 8; // binary: 1000
        assertEquals(4, getMinimumBits(n));
    }
}

int getMinimumBits(int n) {
    int count = 0;
    while (n > 0) {
        if ((n & 1) == 1) { // rightmost bit is set to "1"
            if (count < 2) {
                continue;
            } else {
                return Integer.bitCount(n);
            }
        }
        count++;
        n >>= 1; // move the bits to the right
    }
    return 0;
}