package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;
public class 2136_DescriptionOnly {

    @Test
    public void test1() {
        int[] plantTime = {1, 2};
        int[] growTime = {3, 4};
        assertEquals(10, solve(plantTime, growTime));
    }

    @Test
    public void test2() {
        int[] plantTime = {3, 2, 1};
        int[] growTime = {2, 5, 8};
        assertEquals(17, solve(plantTime, growTime));
    }

    @Test
    public void test3() {
        int[] plantTime = {1, 2};
        int[] growTime = {4, 6};
        assertEquals(7, solve(plantTime, growTime));
    }

    @Test
    public void test4() {
        int[] plantTime = {2, 1, 3};
        int[] growTime = {5, 8, 4};
        assertEquals(15, solve(plantTime, growTime));
    }

    @Test
    public void test5() {
        int[] plantTime = {5, 4, 6, 2, 1, 3};
        int[] growTime = {1000000, 1000000, 1, 999, 998, 997};
        assertEquals(30001, solve(plantTime, growTime));
    }

    public int solve(int[] plantTime, int[] growTime) {
        int n = plantTime.length;
        long[] days = new long[n];
        long curDay = 0;
        for (int i = 0; i < n; i++) {
            days[i] = -1;
        }
        while (true) {
            boolean canGrowAll = true;
            for (int i = 0; i < n; i++) {
                if (days[i] == -1) {
                    days[i] = curDay + plantTime[i];
                    if (days[i] > curDay)
                        continue;
                    else
                        canGrowAll = false;

                } else {

                    if (curDay >= days[i])
                        days[i] = curDay + growTime[i];

                    if (curDay + growTime[i] > curDay) {
                        canGrowAll = false;
                        break;
                    }
                }
            }
            if (canGrowAll)
                return curDay + 1;

            for (int i = 0; i < n; i++) {

                days[i] += 2;
                if (days[i] > curDay + growTime[i])
                    days[i] = curDay + growTime[i];

            }
            curDay++;
        }
    }

}