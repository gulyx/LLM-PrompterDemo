```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.assertArrayEquals;

public class DescriptionExample {

    @Test
    public void test_2149_DescriptionExample() {
        int[] nums = {3,1,-2,-5,2,-4};
        int[] result = rearrangeArray(nums);
        assertArrayEquals(result, new int[]{3,-2,1,-5,2,-4});
    }

    @Test
    public void test_2149_DescriptionExample_2() {
        int[] nums = {-1, 1};
        int[] result = rearrangeArray(nums);
        assertArrayEquals(result, new int[]{1, -1});
    }

    @Test
    public void test_2149_DescriptionExample_3() {
        int[] nums = {1, 2, 3, 4, 5, 6};
        int[] result = rearrangeArray(nums);
        assertArrayEquals(result, new int[]{1, -1, 2, -2, 3, -3});
    }

    @Test
    public void test_2149_DescriptionExample_4() {
        int[] nums = {0, 1, 0, -1};
        int[] result = rearrangeArray(nums);
        assertArrayEquals(result, new int[]{0, -1, 0, 1});
    }

    @Test
    public void test_2149_DescriptionExample_5() {
        int[] nums = {-10, 20, -30, 40};
        int[] result = rearrangeArray(nums);
        assertArrayEquals(result, new int[]{20, -10, 40, -30});
    }

    private int[] rearrangeArray(int[] nums) {
        int left = 0;
        int right = nums.length - 1;

        while (left < right) {
            while (nums[left] > 0) {
                left++;
            }
            while (nums[right] < 0) {
                right--;
            }

            // swap elements
            int temp = nums[left];
            nums[left] = nums[right];
            nums[right] = temp;

            left++;
            right--;
        }

        return nums;
    }
}
```