package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import java.util.Arrays;
import static org.junit.Assert.*;

public class 2545_DescriptionOnly {

    @Test
    public void testSorting() {
        int[][] score = {{3,2,8},{1,4,7},{10,11,13}};
        int k=0;
        int[][] result = sortStudents(score, k);
        assertEquals( Arrays.deepToString(Arrays.asList(new int[]{3, 1, 10})), Arrays.toString(result[0]));
    }

    @Test
    public void testSorting_2() {
        int[][] score = {{9,8},{4,7}};
        int k=0;
        int[][] result = sortStudents(score, k);
        assertEquals( Arrays.deepToString(Arrays.asList(new int[]{4, 9})), Arrays.toString(result[0]));
    }

    @Test
    public void testSorting_3() {
        int[][] score = {{-1,-2},{0,1}};
        int k=0;
        int[][] result = sortStudents(score, k);
        assertEquals( Arrays.deepToString(Arrays.asList(new int[]{0, -1})), Arrays.toString(result[0]));
    }

    @Test
    public void testSorting_4() {
        int[][] score = {{3,2},{1,2}};
        int k=1;
        int[][] result = sortStudents(score, k);
        assertEquals( Arrays.deepToString(Arrays.asList(new int[]{2, 1})), Arrays.toString(result[0]));
    }

    @Test
    public void testSorting_5() {
        int[][] score = {{3},{4}};
        int k=0;
        int[][] result = sortStudents(score, k);
        assertEquals( Arrays.deepToString(Arrays.asList(new int[]{3})), Arrays.toString(result[0]));
    }
}

public class Solution {

    public int[][] sortStudents(int[][] score, int k) {
        if (score.length == 1 || k==0) {
            return score;
        }

        Integer[] studentScore = new Integer[score.length];
        for (int i=0; i<score.length;i++) {
            studentScore[i] = score[i][k];
        }
        Arrays.sort(studentScore);
        for (int i=0; i<score.length;i++) {
           int index=i;
            if(studentScore[i]!=studentScore[index])
                break;

            else
                index++;

        }

        int[][] result = new int[score.length][score[0].length];
        for(int i=0; i<score.length;i++) {
        	for(int j=0;j<scores[i].length;j++){
        		result[i][j]=scores[index][j];
        	}
        }
        return result;
    }

}