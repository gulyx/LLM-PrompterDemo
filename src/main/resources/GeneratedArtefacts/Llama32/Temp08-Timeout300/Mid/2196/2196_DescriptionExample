```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;

public class DescriptionExampleTest {

    public Node buildTree(int[][] descriptions) {
        Node node = new Node();
        for (int[] description : descriptions) {
            int parent = description[0], child = description[1], isLeft = description[2];
            if (node == null || node.val != parent) {
                node = new Node(parent, child);
            } else {
                Node newNode = new Node(child);
                if (isLeft == 1) {
                    newNode.left = node;
                } else {
                    newNode.right = node;
                }
                newNode.left = newNode;
                node = newNode;
            }
        }
        return node;
    }

    @Test
    public void test_0() {
        int[][] descriptions = {{20,15,1},{20,17,0},{50,20,1},{50,80,0},{80,19,1}};
        Node tree = buildTree(descriptions);
        // printInOrder(tree); // commented out for brevity
    }

    @Test
    public void test_1() {
        int[][] descriptions = {{1,2,1},{2,3,0},{3,4,1}};
        Node tree = buildTree(descriptions);
        // printInOrder(tree); // commented out for brevity
    }

    static class Node {
        int val;
        Node left;
        Node right;

        public Node(int val) {
            this.val = val;
        }

        public Node(int val, int child) {
            this(val);
            this.left = new Node(child);
        }
    }

    private void printInOrder(Node root) { // helper method
        if (root == null)
            return;

        printInOrder(root.left);

        System.out.print(root.val + " ");

        printInOrder(root.right);
    }
}
```