```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class Solution {

    @Test
    public void testLaserBeams() {
        String[][] bank = {{"011001","000000","010100","001000"}};
        int expectedOutput = 8;
        assertEquals(expectedOutput, laserBeams(bank));
    }

    @Test
    public void testNoBeams() {
        String[][] bank = {{"000","111","000"}};
        int expectedOutput = 0;
        assertEquals(expectedOutput, laserBeams(bank));
    }

    @Test
    public void testSingleRow() {
        String[][] bank = {{"011001"}};
        int expectedOutput = 0;
        assertEquals(expectedOutput, laserBeams(bank));
    }

    @Test
    public void testAllOnes() {
        String[][] bank = {{"111111"}};
        int expectedOutput = 0;
        assertEquals(expectedOutput, laserBeams(bank));
    }

    @Test
    public void testEmptyBank() {
        String[][] bank = {};
        int expectedOutput = 0;
        assertEquals(expectedOutput, laserBeams(bank));
    }
}

public class Solution {

    public int laserBeams(String[][] bank) {
        int rows = bank.length;
        int cols = bank[0].length;

        int[] rowWithSecurityDevices = new int[rows];

        for (int i = 0; i < rows; i++) {
            for (char c : bank[i]) {
                if (c == '1') {
                    rowWithSecurityDevices[i] = 1;
                    break;
                }
            }
        }

        long totalBeams = 0;

        for (int i = 0; i < rows - 1; i++) {
            boolean hasDeviceInBetween = false;
            for (int j = i + 1; j < rows; j++) {
                if (rowWithSecurityDevices[j] == 1) {
                    hasDeviceInBetween = true;
                    break;
                }
            }
            if (!hasDeviceInBetween) {
                totalBeams += rows - i - 1;
            }
        }

        return (int)totalBeams;

    }
}
```