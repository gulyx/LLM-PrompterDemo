package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import java.util.ArrayList;
import java.util.List;

public class1441_DescriptionExampleTest {

    @Test
    public void testPushOnStreamThenPop() {
        int[] target = {1,3};
        int n = 3;
        String[] result = buildArrayWithStack(target,n);
        assertArrayEquals(new String[]{"Push","Push","Pop","Push"},result);
    }

    @Test
    public void testPushOnStreamAndPushToTarget() {
        int[] target = {1,2,3};
        int n = 3;
        String[] result = buildArrayWithStack(target,n);
        assertArrayEquals(new String[]{"Push","Push","Push"},result);
    }

    @Test
    public void testTwoNumberInTarget() {
        int[] target = {1,2};
        int n = 4;
        String[] result = buildArrayWithStack(target,n);
        assertArrayEquals(new String[]{"Push","Push"},result);
    }

    @Test
    public void testOneNumberInTarget() {
        int[] target = {1};
        int n = 1;
        String[] result = buildArrayWithStack(target,n);
        assertArrayEquals(new String[]{"Push"},result);
    }
}

private String[] buildArrayWithStack(int[] target, int n) {
    List<String> result = new ArrayList<>();
    for (int num : target) {
        result.add("Push");
    }
    for (int i = 1; i <= n; i++) {
        if (!result.isEmpty()) {
            result.remove(result.size()-1);
            result.add("Pop");
        } else {
            result.add("Push");
        }
    }

    return result.toArray(new String[0]);
}

private void assertArrayEquals(String[] expected, String[] actual) {
    assert Arrays.equals(expected, actual);
}