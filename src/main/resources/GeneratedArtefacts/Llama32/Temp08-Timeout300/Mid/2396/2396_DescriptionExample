```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;

public class DescriptionExample {

    @Test
    public void testIsStrictlyPalindromicFalse() {
        int n = 9;
        boolean result = isStrictlyPalindromic(n);
        assertFalse(result);
    }

    @Test
    public void testIsStrictlyPalindromicTrue() {
        int n = 4;
        boolean result = isStrictlyPalindromic(n);
        assertTrue(result);
    }

    @Test
    public void testIsStrictlyPalindromicSingleDigit() {
        int n = 5;
        boolean result = isStrictlyPalindromic(n);
        assertTrue(result);
    }

    @Test
    public void testIsStrictlyPalindromicTwoDigits() {
        int n = 11;
        boolean result = isStrictlyPalindromic(n);
        assertTrue(result);
    }

    @Test
    public void testIsStrictlyPalindromicLargeNumber() {
        int n = 1001;
        boolean result = isStrictlyPalindromic(n);
        assertTrue(result);
    }
}

public class Solution {

    public boolean isStrictlyPalindromic(int n) {
        for (int base = 2; base < n - 1; base++) {
            if (!isPalindromeInBase(n, base)) {
                return false;
            }
        }
        return true;
    }

    private boolean isPalindromeInBase(int n, int base) {
        String str = Integer.toString(n, base);
        int left = 0;
        int right = str.length() - 1;

        while (left < right) {
            if (str.charAt(left) != str.charAt(right)) {
                return false;
            }
            left++;
            right--;
        }

        return true;
    }
}
```