package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.1557;

import it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.1557.Solution;
import org.junit.Test;
import static org.junit.Assert.*;

public class 1557_DescriptionOnly_testsTest {

    @Test
    public void test1() {
        Solution solution = new Solution();
        int n = 5;
        int[][] edges = {{0,1},{1,2},{2,3},{3,4}};
        int[] actual = solution.findSmallestSetOfVertices(n, edges);
        int[] expected = {0,1,2,3,4};
        assertArrayEquals(expected, actual);
    }

    @Test
    public void test2() {
        Solution solution = new Solution();
        int n = 5;
        int[][] edges = {{0,1},{1,2},{2,3},{3,4}};
        int[] actual = solution.findSmallestSetOfVertices(n, edges);
        int[] expected = {0,1,2,3,4};
        assertArrayEquals(expected, actual);
    }

    @Test
    public void test3() {
        Solution solution = new Solution();
        int n = 5;
        int[][] edges = {{0,1},{1,2}};
        int[] actual = solution.findSmallestSetOfVertices(n, edges);
        int[] expected = {0};
        assertArrayEquals(expected, actual);
    }

    @Test
    public void test4() {
        Solution solution = new Solution();
        int n = 5;
        int[][] edges = {};
        int[] actual = solution.findSmallestSetOfVertices(n, edges);
        int[] expected = {0,1,2,3,4};
        assertArrayEquals(expected, actual);
    }

    @Test
    public void test5() {
        Solution solution = new Solution();
        int n = 3;
        int[][] edges = {{0,1},{1,2}};
        int[] actual = solution.findSmallestSetOfVertices(n, edges);
        int[] expected = {0};
        assertArrayEquals(expected, actual);
    }
}