```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;
public class DescriptionExampleTest {

    @Test
    public void example1() {
        int[][] points = {{1,3},{3,3},{5,3},{2,2}};
        int[][] queries = {{2,3,1},{4,3,1},{1,1,2}};

        int[] answer = new int[queries.length];
        for (int i=0; i<queries.length; i++) {
            int pointsInCircle = 0;
            for (int[] point : points) {
                if (Math.hypot(point[0] - queries[i][0]) <= queries[i][2])
                    pointsInCircle++;
            }
            answer[i] = pointsInCircle;
        }

        assertArrayEquals(new int[]{3,2,2},answer);
    }

    @Test
    public void example2() {
        int[][] points = {{1,1},{2,2},{3,3},{4,4},{5,5}};
        int[][] queries = {{1,2,2},{2,2,2},{4,3,2},{4,3,3}};

        int[] answer = new int[queries.length];
        for (int i=0; i<queries.length; i++) {
            int pointsInCircle = 0;
            for (int[] point : points) {
                if (Math.hypot(point[0] - queries[i][0]) <= queries[i][2])
                    pointsInCircle++;
            }
            answer[i] = pointsInCircle;
        }

        assertArrayEquals(new int[]{2,3,2,4},answer);
    }

}
```