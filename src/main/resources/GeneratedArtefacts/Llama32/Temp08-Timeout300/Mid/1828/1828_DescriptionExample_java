```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.1828;

import java.util.*;

public class Solution {
    public List<Integer> countPoints(int[][] points, int[][] queries) {
        List<Integer> answer = new ArrayList<>();
        for (int[] query : queries) {
            int circleSize = 0;
            for (int[] point : points) {
                if (Math.sqrt((point[0] - query[0]) * (point[0] - query[0]) + (point[1] - query[1]) * (point[1] - query[1])) <= query[2]) {
                    circleSize++;
                }
            }
            answer.add(circleSize);
        }
        return answer;
    }

    public static void main(String[] args) {
        Solution solution = new Solution();
        int[][] points1 = {{1,3},{3,3},{5,3},{2,2}};
        int[][] queries1 = {{2,3,1},{4,3,1},{1,1,2}};
        System.out.println(Arrays.toString(solution.countPoints(points1, queries1)));

        int[][] points2 = {{1,1},{2,2},{3,3},{4,4},{5,5}};
        int[][] queries2 = {{1,2,2},{2,2,2},{4,3,2},{4,3,3}};
        System.out.println(Arrays.toString(solution.countPoints(points2, queries2)));
    }
}
```