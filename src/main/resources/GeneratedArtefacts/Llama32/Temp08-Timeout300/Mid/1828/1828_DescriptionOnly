package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;
public class 1828_DescriptionOnlyTest {

    @Test
    public void testCountPointsInsideCircle() {
        int[][] points = {{1,1},{2,2},{3,3}};
        int[][] queries = {{1,1,1},{2,2,1},{3,3,1},{1,1,2},{2,2,3}};
        int[] answer = countPointsInsideCircle(points, queries);
        assertArrayEquals(new int[]{4, 3, 2, 1}, answer);
    }

    @Test
    public void testEdgeCase() {
        int[][] points = {{0,0},{1,0},{0,1}};
        int[][] queries = {{0,0,1},{1,0,1},{0,1,1}};
        int[] answer = countPointsInsideCircle(points, queries);
        assertArrayEquals(new int[]{2, 1, 1}, answer);
    }

    @Test
    public void testPointAtCenter() {
        int[][] points = {{0,0}};
        int[][] queries = {{0,0,1},{1,0,1}};
        int[] answer = countPointsInsideCircle(points, queries);
        assertArrayEquals(new int[]{2, 0}, answer);
    }

    @Test
    public void testEdgeCaseEmptyQueries() {
        int[][] points = {{1,1},{2,2},{3,3}};
        int[][] queries = {};
        int[] answer = countPointsInsideCircle(points, queries);
        assertArrayEquals(new int[]{0}, answer);
    }

    @Test
    public void testPointNoQuery() {
        int[][] points = {{1,1},{2,2},{3,3}};
        int[][] queries = {{1,1,1},{1,1,2}};
        int[] answer = countPointsInsideCircle(points, queries);
        assertArrayEquals(new int[]{4, 1}, answer);
    }

}