package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.assertArrayEquals;
import java.util.Arrays;

public class 1828_DescriptionOnly {

    @Test
    public void test1() {
        int[][] points = {{1,1},{2,2},{3,3}};
        int[][] queries = {{1,1,2},{2,2,2},{3,3,1}};
        int[] answer = new int[queries.length];
        numPointsInside(0, points, 0, queries, answer);
        assertArrayEquals(new int[]{1,1,4},answer);
    }

    @Test
    public void test2() {
        int[][] points = {{1,1},{2,2},{3,3}};
        int[][] queries = {{1,1,1},{2,2,1},{3,3,1}};
        int[] answer = new int[queries.length];
        numPointsInside(0, points, 0, queries, answer);
        assertArrayEquals(new int[]{1,1,1},answer);
    }

    @Test
    public void test3() {
        int[][] points = {{1,1},{2,2}};
        int[][] queries = {{1,1,0.5},{2,2,0.8},{3,3,0.9}};
        int[] answer = new int[queries.length];
        numPointsInside(0, points, 0, queries, answer);
        assertArrayEquals(new int[]{1,1,2},answer);
    }

    @Test
    public void test4() {
        int[][] points = {{-1, -1}};
        int[][] queries = {{-2, -3, 2}};
        int[] answer = new int[queries.length];
        numPointsInside(0, points, 0, queries, answer);
        assertArrayEquals(new int[]{1},answer);
    }

    @Test
    public void test5() {
        int[][] points = {{0,0},{3,4}};
        int[][] queries = {{0,0,2},{3,4,1}};
        int[] answer = new int[queries.length];
        numPointsInside(0, points, 0, queries, answer);
        assertArrayEquals(new int[]{2,3},answer);
    }

}