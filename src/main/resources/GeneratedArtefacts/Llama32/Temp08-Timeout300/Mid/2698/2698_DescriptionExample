```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class DescriptionExample {
 
    @Test
    public void testPunishmentNumber() {
        int n = 10;
        long output = punishmentNumber(n);
        assertEquals(182, output);
    }

    @Test
    public void testPunishmentNumberLargeInput() {
        int n = 37;
        long output = punishmentNumber(n);
        assertEquals(1478L, output);
    }

    @Test
    public void testPunishmentNumberZeroInput() {
        int n = 0;
        long output = punishmentNumber(n);
        assertEquals(0L, output);
    }

    @Test
    public void testPunishmentNumberOneInput() {
        int n = 1;
        long output = punishmentNumber(n);
        assertEquals(1L, output);
    }

    @Test
    public void testPunishmentNumberInvalidInput() {
        int n = -10;
        try {
            punishmentNumber(n);
            assert false;
        } catch (Exception e) {
            // expected
        }
    }

    private long punishmentNumber(int n) {
        long result = 0;
        for (int i = 1; i <= n; ++i) {
            boolean found = true;
            String strI = Integer.toString(i*i);
            for (int j = 1; j < strI.length(); ++j) {
                int sum = 0;
                for (int k = j; k < strI.length(); ++k) {
                    sum += strI.charAt(k) - '0';
                    if (sum != i || k+1 == strI.length() ) {
                        found = false;
                        break;
                    }
                }

            if (!found)
                break;

        result += (long)i*i;

    } return result;
}
```