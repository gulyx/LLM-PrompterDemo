package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.807;

public class Solution {

    public int maxIncreaseKeepingSkyline(int[][] grid) {
        int m = grid.length;
        int n = grid[0].length;
        int[] rowMax = new int[m];
        int[] colMax = new int[n];

        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                rowMax[i] = Math.max(rowMax[i], grid[i][j]);
                colMax[j] = Math.max(colMax[j], grid[i][j]);
            }
        }

        int result = 0;
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                result += Math.min(rowMax[i], colMax[j]) - grid[i][j];
            }
        }

        return result;
    }

 [--Example 1--]
int[][] grid = {{3,0,8,4},{2,4,5,7},{9,2,6,3},{0,3,1,0}};

[--Example 2--]
int[][] grid = {{0,0,0},{0,0,0},{0,0,0}};