```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class FourSumTest {

    @Test
    public void test_FourSumEqual() {
        int[] arr = {2, 3, 1, 6, 7};
        int expected = 4;
        assertEquals(expected, fourSum(arr));
    }

    @Test
    public void test_FourSumAllEqual() {
        int[] arr = {1, 1, 1, 1, 1};
        int expected = 10;
        assertEquals(expected, fourSum(arr));
    }

    @Test
    public void test_FourSumNoSolution() {
        int[] arr = {1, 2, 3, 4};
        int expected = 0;
        assertEquals(expected, fourSum(arr));
    }

    private int fourSum(int[] nums) {
        int n = nums.length;
        long[] count = new long[1 << (n * 32)];
        for (int i = 0; i < n - 2; i++) {
            for (int j = i + 1; j < n - 1; j++) {
                for (int k = j + 1; k < n; k++) {
                    int xorA = 0;
                    int xorB = 0;
                    for (int t = i, u = j; t <= u; t++, u++) {
                        xorA ^= nums[t];
                        xorB ^= nums[u];
                    }
                    for (int t = k + 1, u = n - 1; t <= u; t++, u--) {
                        xorB ^= nums[u];
                    }
                    if (xorA == xorB) count[xorA] += 1;
                }
            }
        }
        int res = 0;
        for (int i = 1; i < (1 << n * 32); i++) {
            res += count[i] * (count[i] - 1) / 2;
        }
        return res;
    }

}
```