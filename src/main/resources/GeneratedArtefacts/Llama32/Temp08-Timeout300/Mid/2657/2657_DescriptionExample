```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;

public class DescExample {
    public int[] countPrefixes(int[] A, int[] B) {
        int n = A.length;
        int[] C = new int[n];
        
        for (int i=0; i<n; ++i)
            if (A[i] == B[i]) C[i]++;
            else C[i] = 1;

        return C;
    }

    @Test
    public void testCountPrefixes() {
        int[] A = {1,3,2,4};
        int[] B = {3,1,2,4};
        int[] result = countPrefixes(A, B);
        assertArrayEquals(new int[]{0, 2, 3, 4}, result);
    }

    @Test
    public void testCountPrefixes_2() {
        int[] A = {2,3,1};
        int[] B = {3,1,2};
        int[] result = countPrefixes(A, B);
        assertArrayEquals(new int[]{0, 1, 3}, result);
    }

    @Test
    public void testCountPrefixes_3() {
        int[] A = {5,4,3,2,1};
        int[] B = {5,1,2,3,4};
        int[] result = countPrefixes(A, B);
        assertArrayEquals(new int[]{0, 0, 0, 0, 0}, result);
    }

    @Test
    public void testCountPrefixes_4() {
        int[] A = {1,2,3,4};
        int[] B = {1,2,3,4};
        int[] result = countPrefixes(A, B);
        assertArrayEquals(new int[]{0, 0, 0, 0}, result);
    }

    @Test
    public void testCountPrefixes_5() {
        int[] A = {1,2,3,4,5};
        int[] B = {1,2,3,4,5};
        int[] result = countPrefixes(A, B);
        assertArrayEquals(new int[]{0, 0, 0, 0, 0}, result);
    }
}
```