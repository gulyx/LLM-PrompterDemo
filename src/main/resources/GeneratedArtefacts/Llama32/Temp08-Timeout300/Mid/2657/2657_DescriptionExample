```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;
public class DescriptionExampleTest {

    public int[] prefixCommonArray(int[] A, int[] B) {
        int n = A.length;
        int[] result = new int[n];
        for (int i = 1; i <= n; ++i) {
            result[i - 1] = A[Arrays.binarySearch(B, i)] * B[Arrays.binarySearch(A, i)];
        }
        return result;
    }

    @Test
    public void testPrefixCommonArray_1() {
        int[] A = {1,3,2,4};
        int[] B = {3,1,2,4};
        int[] expectedOutput = {0,2,3,4};
        assertArrayEquals(expectedOutput, prefixCommonArray(A, B));
    }

    @Test
    public void testPrefixCommonArray_2() {
        int[] A = {2,3,1};
        int[] B = {3,1,2};
        int[] expectedOutput = {0,1,3};
        assertArrayEquals(expectedOutput, prefixCommonArray(A, B));
    }

    @Test
    public void testPrefixCommonArray_3() {
        int[] A = {1, 2, 3, 4, 5};
        int[] B = {5, 4, 3, 2, 1};
        int[] expectedOutput = {0, 0, 0, 0, 0};
        assertArrayEquals(expectedOutput, prefixCommonArray(A, B));
    }

    @Test
    public void testPrefixCommonArray_4() {
        int[] A = {1,2,3,4,5};
        int[] B = {2,1,5,4,3};
        int[] expectedOutput = {0, 0, 0, 0, 0};
        assertArrayEquals(expectedOutput, prefixCommonArray(A, B));
    }

    @Test
    public void testPrefixCommonArray_5() {
        int[] A = {1,2,3,4,5};
        int[] B = {1,2,3,4,5};
        int[] expectedOutput = new int[]{0, 0, 0, 0, 0};
        assertArrayEquals(expectedOutput, prefixCommonArray(A, B));
    }
}
```