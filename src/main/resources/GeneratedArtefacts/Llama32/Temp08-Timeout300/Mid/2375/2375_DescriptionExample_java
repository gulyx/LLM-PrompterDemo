package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.2375;

public class Solution {

    public String smallestNumber(String pattern) {
        int[] digits = new int[9];
        for (int i = 0; i < pattern.length(); i++) {
            if (pattern.charAt(i) == 'I') {
                for (int j = 8; j > digits[i] - 1; j--) {
                    if (digits[j] == 0) {
                        digits[j]++;
                        break;
                    }
                }
            } else {
                for (int j = 0; j < digits[i]; j++) {
                    if (digits[j] == 0) {
                        digits[j]++;
                        break;
                    }
                }
            }
        }

        StringBuilder sb = new StringBuilder();
        for (int digit : digits) {
            sb.append(digit);
        }

        return sb.toString();
    }

    [--Example 1--]
    public void test1() {
        String pattern = "IIIDIDDD";
        String output = smallestNumber(pattern);
        System.out.println("Output: " + output);
        System.out.println("Expected Output: 123549876");
        assert output.equals("123549876");
    }

    [--Example 2--]
    public void test2() {
        String pattern = "DDD";
        String output = smallestNumber(pattern);
        System.out.println("Output: " + output);
        System.out.println("Expected Output: 4321");
        assert output.equals("4321");
    }
}