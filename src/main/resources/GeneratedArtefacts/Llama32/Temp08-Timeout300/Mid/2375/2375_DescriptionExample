package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;

public class DescriptionExampleTest {

    @Test
    public void test_smallestNumber() {
        String pattern = "IIIDIDDD";
        String num = smallestNumber(pattern);
        assertEquals("123549876", num);
    }

    @Test
    public void test_decreasingOnly() {
        String pattern = "DDD";
        String num = smallestNumber(pattern);
        assertEquals("4321", num);
    }

    @Test
    public void test_increasingOnly() {
        String pattern = "IIIII";
        String num = smallestNumber(pattern);
        assertEquals("12345", num);
    }

    @Test
    public void test_mixedPattern() {
        String pattern = "IDIDDII";
        String num = smallestNumber(pattern);
        assertEquals("13579", num);
    }

    @Test
    public void test_invalidPattern() {
        String pattern = "IIDDIDDDI";
        assertThrows(NullPointerException.class, () -> smallestNumber(pattern));
    }
}

public class DescriptionExampleTest {

    public static String smallestNumber(String pattern) {
        if (pattern == null || pattern.isEmpty()) {
            return null;
        }

        char prev = 'A';
        StringBuilder num = new StringBuilder();
        for (char c : pattern.toCharArray()) {
            int digit = c - '0';
            while (digit <= prev) {
                digit++;
            }
            num.append(digit);
            prev = digit;
        }
        return num.toString();
    }
}