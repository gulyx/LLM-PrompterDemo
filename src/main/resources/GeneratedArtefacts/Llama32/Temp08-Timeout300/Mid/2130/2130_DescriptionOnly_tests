package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.assertEquals;
public class DescriptionOnlyTest {
    public ListNode twist(ListNode head) {
        ListNode prev = null;
        ListNode current = head;
        while (current != null && current.next != null) {
            ListNode nextNext = current.next.next;
            current.next.next = current;
            current.next = nextNext;
            current = nextNext;
        }
        return head;
    }

    public int maximumTwinSum(ListNode head) {

        if(head == null || head.next == null){
            return 0;
        }else{
            ListNode start= head;
            ListNode end = head;

            while(end.next != null && end.next.next!= null){

                start = start.next;
                end = end.next.next;

            }

            int maxTwinSum = Integer.MIN_VALUE;
            for(int i = 0; i < (start.next.nodeValue+end.nodeValue)/2; i++){
                int sum = (start.nodeValue+end.nodeValue);
                if(sum > maxTwinSum){
                    maxTwinSum = sum;
                }
                start = start.next;
                end = end.next;
            }

            return maxTwinSum;
        }

    }

}

class ListNode {
     int val;
     ListNode next;
     ListNode() {}
     ListNode(int val) { this.val = val; }
     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
}