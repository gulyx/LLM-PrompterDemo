package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;

public class DescriptionOnlyTest {

    @Test
    public void testXOR() {
        int[] nums = {1, 2, 3};
        int k = 4;
        assertEquals(2, numberOfOperationsToMakeXorOfArrayEqualK(nums, k));
    }

    @Test
    public void testXOR_0() {
        int[] nums = {0, 0, 0};
        int k = 1;
        assertTrue(numberOfOperationsToMakeXorOfArrayEqualK(nums, k) == 2);
    }

    @Test
    public void testXOR_k() {
        int[] nums = {3, 3, 3};
        int k = 4;
        assertEquals(0, numberOfOperationsToMakeXorOfArrayEqualK(nums, k));
    }

    @Test
    public void testXOR_2() {
        int[] nums = {1, 3, 4};
        int k = 6;
        assertTrue(numberOfOperationsToMakeXorOfArrayEqualK(nums, k) == 0);
    }

    @Test
    public void testXOR_LargeArray() {
        int[] nums = new int[100000];
        for (int i = 0; i < 100000; i++) {
            nums[i] = i;
        }
        int k = 25000000;
        assertEquals(60000, numberOfOperationsToMakeXorOfArrayEqualK(nums, k));
    }

    public int numberOfOperationsToMakeXorOfArrayEqualK(int[] nums, int k) {
        int xor = 0;
        for (int num : nums) {
            xor ^= num;
        }
        return Integer.bitCount((xor ^ k));
    }
}