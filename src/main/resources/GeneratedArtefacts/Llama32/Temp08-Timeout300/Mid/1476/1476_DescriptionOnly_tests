package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;

public class SubrectangleQueries_1476_DescriptionOnlyTest {

    @Test
    public void testUpdateSubrectangle() {
        SubrectangleQueries s = new SubrectangleQueries(new int[][]{{1, 2}, {3, 4}});
        s.updateSubrectangle(0, 0, 1, 1, 5);
        assertEquals(5, s.getValue(0, 0));
    }

    @Test
    public void testUpdateSubrectangle_OverRange() {
        SubrectangleQueries s = new SubrectangleQueries(new int[][]{{1, 2}, {3, 4}});
        assertThrows(IndexOutOfBoundsException.class, () -> s.updateSubrectangle(5, 0, 1, 1, 5));
    }

    @Test
    public void testUpdateSubrectangle_InvalidRange() {
        SubrectangleQueries s = new SubrectangleQueries(new int[][]{{1, 2}, {3, 4}});
        assertThrows(IndexOutOfBoundsException.class, () -> s.updateSubrectangle(0, 5, 1, 1, 5));
    }

    @Test
    public void testUpdateSubrectangle_InvalidRangeUpdates() {
        SubrectangleQueries s = new SubrectangleQueries(new int[][]{{1, 2}, {3, 4}});
        s.updateSubrectangle(0, 0, 1, 1, 10);
        assertEquals(10, s.getValue(0, 0));
    }

    @Test
    public void testGetValue_ExistingValue() {
        SubrectangleQueries s = new SubrectangleQueries(new int[][]{{1, 2}, {3, 4}});
        s.updateSubrectangle(0, 0, 1, 1, 5);
        assertEquals(5, s.getValue(0, 0));
    }

    @Test
    public void testGetValue_NonExistingValue() {
        SubrectangleQueries s = new SubrectangleQueries(new int[][]{{1, 2}, {3, 4}});
        assertThrows(IndexOutOfBoundsException.class, () -> s.getValue(5, 5));
    }
}