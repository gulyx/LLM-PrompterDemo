package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;

public class 1008_DescriptionExampleTest {

    public TreeNode buildTree(int[] preorder) {
        if(preorder == null || preorder.length==0) return null;
        TreeNode root = new TreeNode(preorder[0]);
        int i=1;
        root.left = buildTree helper (preorder,i);
        root.right = buildTree helper (preorder, i+1);
        return root;
    }

    private TreeNode buildTree(int[] preorder,int start)
    {
        if(start>=preorder.length) return null;

        TreeNode node = new TreeNode(preorder[start]);
        int right=2*start + 1 ;
        int left=2*start;
        while(left<right && preorder[left]!=-1)
            left++;

        node.left = buildTree(preorder,left);
        node.right = buildTree(preorder,right);

        return node;

    }

     @Test
     public void test_1008_DescriptionExample_Test1()
     {
         int[] preorder = {8,5,1,7,10,12};
         TreeNode root = new 1008_DescriptionExampleTest().buildTree(preorder);
         String  result1 = "[8,5,10,1,7,null,12]";
        assertEquals(result1,root preorderInOrder());
     }

      @Test
     public void test_1008_DescriptionExample_Test2()
     {
          int[] preorder = {1,3};
         TreeNode root = new 1008_DescriptionExampleTest().buildTree(preorder);
        String result2 = "[1,null,3]";
         assertEquals(result2,root preorderInOrder());
      }

       @Test
     public void test_1008_DescriptionExample_Test3()
     {
          int[] preorder = {4,2,5,3,1};
        TreeNode root = new 1008_DescriptionExampleTest().buildTree(preorder);
         String result3 = "[4,2,6,3,1,null,null]";
         assertEquals(result3,root preorderInOrder());
      }

    @Test
     public void test_1008_DescriptionExample_Test4()
     {
          int[] preorder = {1};
        TreeNode root = new 1008_DescriptionExampleTest().buildTree(preorder);
        String result4 = "[1,null]";
         assertEquals(result4,root preorderInOrder());
      }

       @Test
     public void test_1008_DescriptionExample_Test5()
     {
          int[] preorder = {};
        TreeNode root = new 1008_DescriptionExampleTest().buildTree(preorder);
        assert null == root;
      }
 }