package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;

public class 2785_DescriptionOnlyTest {

    @Test
    public void test_emptyString() {
        String s = "";
        String result = permute(s);
        assertTrue(result.isEmpty());
    }

    @Test
    public void test_noVowels() {
        String s = "bcd";
        String result = permute(s);
        assertEquals(s, result);
    }

    @Test
    public void test_oneVowel() {
        String s = "aeiou";
        String result = permute(s);
        String expected = "aeiou";
        for (int i = 0; i < result.length(); i++) {
            char c = result.charAt(i);
            if (i > 0) {
                char prevC = result.charAt(i - 1);
                assertTrue(c >= prevC);
            }
        }
    }

    @Test
    public void test_multipleVowels() {
        String s = "aeiouAEIOU";
        String result = permute(s);
        String expected = "aEoIu";
        for (int i = 0; i < result.length(); i++) {
            char c = result.charAt(i);
            if (i > 0) {
                char prevC = result.charAt(i - 1);
                assertTrue(c >= prevC);
            }
        }
    }

    @Test
    public void test_withConsonants() {
        String s = "bcdfoei";
        String result = permute(s);
        String expected = "bdecfio";
        for (int i = 0; i < result.length(); i++) {
            char c = result.charAt(i);
            if (i > 0) {
                char prevC = result.charAt(i - 1);
                assertTrue(c == prevC || (c >= prevC && !Character.isLetter(c)));
            }
        }
    }

}