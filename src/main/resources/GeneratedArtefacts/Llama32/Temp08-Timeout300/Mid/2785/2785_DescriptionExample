```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class 2785_DescriptionExample {

    public String sortString(String s) {
        char[] consonants = "bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ".toCharArray();
        int[] vowelsCount = countConsonantsAndVowels(s);
        StringBuilder res = new StringBuilder();
        for (char c : consonants) {
            while (vowelsCount[c]-- > 0) {
                res.append(c);
            }
        }
        char[] sArray = s.toCharArray();
        for (int i = 0; i < vowelsCount['a'] + vowelsCount['A']; i++) {
            res.append(sArray[i]);
        }
        return res.toString();
    }

    private int[] countConsonantsAndVowels(String s) {
        int[] vowelCounts = new int[5];
        for (char c : s.toCharArray()) {
            if ("aeiouAEIOU".indexOf(c) != -1) {
                ++vowelCounts["aeiouAEIOU".indexOf(c)];
            }
        }
        return vowelCounts;
    }

    @Test
    public void testSortString_Empty() {
        assertEquals("", sortString(""));
    }

    @Test
    public void testSortString_NoVowels() {
        assertEquals("bcdgfhjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ", sortString("bcdfghjklmnpqrstvwxyz"));
    }

    @Test
    public void testSortString_OnlyVowels() {
        assertEquals("aeiouAEIOU", sortString("aeiouAEIOU"));
    }

    @Test
    public void testSortString_SingleCharacter() {
        assertEquals("abcABC", sortString("aA"));
    }

    @Test
    public void testSortString_TwoCharacters() {
        assertEquals("lEOtcede", sortString("lEetcOde"));
    }
}
```