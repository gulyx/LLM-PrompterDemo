```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import java.util.*;

public class DescriptionOnlyTest {

    public int[][] generateMatrix(int m, int n, ListNode head) {
        List<Integer> vals = new ArrayList<>();
        while (head != null) {
            vals.add(head.val);
            head = head.next;
        }
        if (vals.isEmpty()) return new int[0][0];

        int[][] res = new int[m][n];
        int row = 0, col = 0;
        List<int[]> dir = Arrays.asList(new int[]{0,1}, new int[]{1,0}, new int[]{0,-1}, new int[]{-1,0});
        int dirIdx = 0;

        for (int x : vals) {
            res[row][col] = x;
            int nextRow = row + dir.get(dirIdx)[0];
            int nextCol = col + dir.get(dirIdx)[1];

            if (nextRow < 0 || nextRow >= m || nextCol < 0 || nextCol >= n ||
                    res[nextRow][nextCol] != 0) {
                dirIdx = (dirIdx+1)%4;
                nextRow = row + dir.get(dirIdx)[0];
                nextCol = col + dir.get(dirIdx)[1];
            }
            row = nextRow;
            col = nextCol;
        }

        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                if (res[i][j] == 0) res[i][j] = -1;
            }
        }
        return res;
    }

    public static class ListNode {
        int val;
        ListNode next;
        ListNode(int x) { val = x; }
    }

}
```