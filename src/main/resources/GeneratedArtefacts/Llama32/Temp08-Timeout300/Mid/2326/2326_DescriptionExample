```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import java.util.*;

public class DescriptionExampleTest {

    public static int[][] createSpiral(int m, int n, ListNode head) {
        int[][] res = new int[m][n];
        List<Integer> list = new ArrayList<>();
        while(head != null) {
            list.add(head.val);
            head = head.next;
        }
        int[] dir = {0,1,0,-1};
        int[] curDir = {0,1};
        int posR = 0,posC = 0;
        for (int i = 0; i < list.size(); i++) {
            res[posR][posC] = list.get(i);
            int nR = posR + dir[i];
            int nC = posC + curDir[i];
            if (nR<0 || nR>=m || nC<0 || nC>=n || res[nR][nC]==-1) {
                curDir[i^1]^=1;
            }
            posR += dir[i];
            posC += curDir[i];
        }
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                if (res[i][j]==-1) {
                    res[i][j] = -1;
                } else {
                    res[i][j] *= -1;
                }
            }
        }
        return res;
    }

    public static void main(String[] args) {
        ListNode head = new ListNode(3);
        head.next = new ListNode(0);
        head.next.next = new ListNode(2);
        head.next.next.next = new ListNode(6);
        head.next.next.next.next = new ListNode(8);
        head.next.next.next.next.next = new ListNode(1);
        head.next.next.next.next.next.next = new ListNode(7);
        head.next.next.next.next.next.next.next = new ListNode(9);
        head.next.next.next.next.next.next.next.next = new ListNode(4);
        head.next.next.next.next.next.next.next.next.next = new ListNode(2);
        head.next.next.next.next.next.next.next.next.next.next = new ListNode(5);
        head.next.next.next.next.next.next.next.next.next.next.next = new ListNode(5);

        int[][] result = createSpiral(3, 5, head);
        for (int i = 0; i < result.length; i++) {
            System.out.println(Arrays.toString(result[i]));
        }
    }

}

class ListNode {
    int val;
    ListNode next;
    ListNode() {}
    ListNode(int val) { this.val = val; }
    ListNode(int val, ListNode next) { this.val = val; this.next = next; }
}
```