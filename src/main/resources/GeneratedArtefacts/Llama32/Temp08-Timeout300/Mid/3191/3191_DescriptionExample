```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class DescriptionExample {

    @Test
    public void testMinOperationsToFlip() {
        int[] nums = {0,1,1,1,0,0};
        assertEquals(3, minOperations(nums));
    }

    @Test
    public void testAllOnes() {
        int[] nums = {1,1,1,1};
        assertEquals(-1, minOperations(nums));
    }

    @Test
    public void testNoConsecutiveZeros() {
        int[] nums = {0,0,0,1,1,1};
        assertEquals(3, minOperations(nums));
    }

    @Test
    public void testConsecutiveOnes() {
        int[] nums = {1,1,1,1,0,0};
        assertEquals(-1, minOperations(nums));
    }

    @Test
    public void testAllZeros() {
        int[] nums = {0,0,0,0,0,0};
        assertEquals(-1, minOperations(nums));
    }
    
    private int minOperations(int[] nums) {
        if (nums == null || nums.length == 0) return -1;
        for (int num : nums) if (num == 0) return -1;
        int count = 0;
        boolean allZeros = true;
        for (int i = 0; i < nums.length - 2; i++) {
            if (nums[i] == 1 || nums[i + 1] == 1 || nums[i + 2] == 1) {
                count++;
                if (allZeros && nums[i] == 1 && nums[i + 1] == 1 && nums[i + 2] == 1) {
                    allZeros = false;
                }
            }
        }

        return nums[nums.length - 1] == 1 ? count : -1;
    }
}
```