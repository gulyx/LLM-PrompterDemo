```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class DescriptionExample {

    @Test
    public void testPartitionUniqueChars() {
        String s = "abacaba";
        int expectedOutput = 4;
        assertEquals(expectedOutput, partitionUniqueChars(s));
    }

    @Test
    public void testPartitionNoDuplicateChars() {
        String s = "ssssss";
        int expectedOutput = 6;
        assertEquals(expectedOutput, partitionUniqueChars(s));
    }

    @Test
    public void testPartitionSingleCharString() {
        String s = "a";
        int expectedOutput = 1;
        assertEquals(expectedOutput, partitionUniqueChars(s));
    }

    @Test
    public void testPartitionEmptyString() {
        String s = "";
        int expectedOutput = 0;
        assertEquals(expectedOutput, partitionUniqueChars(s));
    }

    @Test
    public void testPartitionMultipleSubstringsSameChar() {
        String s = "aab";
        int expectedOutput = 2;
        assertEquals(expectedOutput, partitionUniqueChars(s));
    }
}

public class Main {
    public static int partitionUniqueChars(String s) {
        StringBuilder sb = new StringBuilder();
        for (char c : s.toCharArray()) {
            if (!sb.toString().contains(String.valueOf(c))) {
                sb.append(c);
            } else {
                return 1 + partitionUniqueChars(sb.toString() + String.valueOf(c));
            }
        }
        return sb.length();
    }
}
```