```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertThrows;

public class DescriptionOnlyTest {

    @Test
    public void testMinimumNumberOfSubstrings() {
        String s = "aab";
        assertEquals(2, minUniqueChars(s));
    }

    @Test
    public void testMinimumNumberOfSubstringsWithSingleWord() {
        String s = "abc";
        assertEquals(3, minUniqueChars(s));
    }

    @Test
    public void testMinimumNumberOfSubstringsWithAllDuplicateLetters() {
        String s = "aaaaa";
        assertEquals(1, minUniqueChars(s));
    }

    @Test
    public void testMinimumNumberOfSubstringsWithEmptyString() {
        String s = "";
        assertEquals(0, minUniqueChars(s));
    }

    @Test(expected = IllegalArgumentException.class)
    public void testMinimumNumberOfSubstringsWithNullInput() {
        String s = null;
        minUniqueChars(s);
    }
}

public class Main {

    public static int minUniqueChars(String s) {
        if (s == null || s.isEmpty()) {
            throw new IllegalArgumentException("Input string cannot be empty or null");
        }

        int uniqueCharsCount = 0;
        StringBuilder sb = new StringBuilder();

        for (char c : s.toCharArray()) {
            if (!sb.toString().contains(String.valueOf(c))) {
                sb.append(c);
                uniqueCharsCount++;
            }
        }

        return uniqueCharsCount;
    }
}
```