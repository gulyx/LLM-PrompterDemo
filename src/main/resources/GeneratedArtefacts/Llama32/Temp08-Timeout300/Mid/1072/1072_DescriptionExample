```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.assertEquals;
import java.util.Arrays;

public class BinaryMatrixTest {

    @Test
    public void testAllEqual() {
        int[][] matrix = {{0, 1}, {1, 1}};
        int expectedOutput = 1;
        assertEquals(expectedOutput, maxEqualRowsAfterFlips(matrix));
    }

    @Test
    public void testTwoEqualRows() {
        int[][] matrix = {{0, 1}, {1, 0}};
        int expectedOutput = 2;
        assertEquals(expectedOutput, maxEqualRowsAfterFlips(matrix));
    }

    @Test
    public void testThreeEqualRows() {
        int[][] matrix = {{0, 0, 0}, {0, 0, 1}, {1, 1, 0}};
        int expectedOutput = 2;
        assertEquals(expectedOutput, maxEqualRowsAfterFlips(matrix));
    }

    @Test
    public void testNoEqualRows() {
        int[][] matrix = {{0, 1, 1}, {0, 0, 1}, {1, 0, 1}};
        int expectedOutput = 0;
        assertEquals(expectedOutput, maxEqualRowsAfterFlips(matrix));
    }

    @Test
    public void testNoRows() {
        int[][] matrix = {};
        int expectedOutput = 0;
        assertEquals(expectedOutput, maxEqualRowsAfterFlips(matrix));
    }
}
```

Note: The `maxEqualRowsAfterFlips` function is not provided here as it's part of the problem description. It should be implemented in a separate class.