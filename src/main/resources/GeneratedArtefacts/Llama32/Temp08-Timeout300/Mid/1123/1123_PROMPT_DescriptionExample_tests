As a professional Software Tester, generate a complete Junit test-class (name the test-class as: '1123_DescriptionExample_testsTest', and use as first line the declaration: 'package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.1123;') with 5 different JUnit tests for a Java class-under-test (you can assume the class-under-test is named: Solution, and import it as: 'import it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.1123.Solution;'). The class-under-test implements the following description in natural language with examples. Specifically below the description, each example is introduced by the keyword [--Example XX--] (where XX is a number), and it is composed by an input tuple and an expected output. Emit only the Java code, without any other tag or text.  Here is the description for the class-under-test: 
Given the "root" of a binary tree, return the lowest common ancestor of its deepest leaves.

Recall that:

* The node of a binary tree is a leaf if and only if it has no children
* The depth of the root of the tree is "0". if the depth of a node is "d", the depth of each of its children is "d + 1".
* The lowest common ancestor of a set "S" of nodes, is the node "A" with the largest depth such that every node in "S" is in the subtree with root "A".

Constraints:

* The number of nodes in the tree will be in the range "[1, 1000]".
* "0 <= Node.val <= 1000"
* The values of the nodes in the tree are unique.
[--Example 1--]
Input: root = [3,5,1,6,2,0,8,null,null,7,4]
Output: [2,7,4]
[--Example 2--]
Input: root = [1]
Output: [1]
[--Example 3--]
Input: root = [0,1,3,null,2]
Output: [2]