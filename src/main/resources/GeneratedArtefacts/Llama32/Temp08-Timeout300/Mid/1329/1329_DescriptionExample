package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import java.util.*;

public class 1329_DescriptionExample {

    @Test
   public void testDiagonalSort() {
        int[][] mat = {{3, 3, 1, 1}, {2, 2, 1, 2}, {1, 1, 1, 2}};
        List<int[]> result = diagonalSort(mat);
        Assert.assertEquals(result, Arrays.asList(new int[]{1, 1, 1, 1}, new int[]{1, 2, 2, 2}, new int[]{1, 2, 3, 3}));
    }

    @Test
   public void testDiagonalSort2() {
        int[][] mat = {{11, 25, 66, 1, 69, 7}, {23, 55, 17, 45, 15, 52}, {75, 31, 36, 44, 58, 8}, {22, 27, 33, 25, 68, 4}, {84, 28, 14, 11, 5, 50}};
        List<int[]> result = diagonalSort(mat);
        Assert.assertEquals(result, Arrays.asList(new int[]{5, 17, 4, 1, 52, 7}, new int[]{11, 11, 25, 45, 8, 69}, new int[]{14, 23, 25, 44, 58, 15}, new int[]{22, 27, 31, 36, 50, 66}, new int[]{84, 28, 75, 33, 55, 68}));
    }

   public List<int[]> diagonalSort(int[][] mat) {
        Map<String, List<Integer>> map = new HashMap<>();
        for (int i = 0; i < mat.length; i++) {
            for (int j = 0; j < mat[0].length; j++) {
                String key = "(" + i + "," + j + ")";
                map.computeIfAbsent(key, k -> new ArrayList<>()).add(mat[i][j]);
            }
        }

        List<int[]> result = new ArrayList<>();
        for (Map.Entry<String, List<Integer>> entry : map.entrySet()) {
            List<Integer> diagonal = new ArrayList<>(entry.getValue());
            Collections.sort(diagonal);
            result.add(diagonal.toArray(new int[0]));
        }

        return result;
    }
}