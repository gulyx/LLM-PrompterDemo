```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;
public class 2181_DescriptionExample {

    public ListNode mergeInBetween(ListNode head, int left, int right) {
        ListNode fakehead = new ListNode(0);
        fakehead.next = head;
        ListNode pre = fakehead;
        for(int i=0;i<left;i++)
            pre = pre.next;

        ListNode tail = pre;
        for(int i=left;i<=right;i++)
            tail = tail.next;

        ListNode merge = new ListNode(0);
        for(;tail.next!=pre.next;tail = tail.next)
            merge.next = tail.next;
        merge.next = pre.next;

        pre.next = merge.next;

        return fakehead.next;
    }

    @Test
    public void test1() {
        ListNode head = new ListNode(0);
        head.next = new ListNode(3);
        head.next.next = new ListNode(1);
        head.next.next.next = new ListNode(0);
        head.next.next.next.next = new ListNode(4);
        head.next.next.next.next.next = new ListNode(5);
        head.next.next.next.next.next.next = new ListNode(2);
        head.next.next.next.next.next.next.next = new ListNode(0);

        ListNode result = mergeInBetween(head, 1, 3);
        assertEquals(new ListNode(4), result);
        assertSame(result.next, new ListNode(11));
    }

    @Test
    public void test2() {
        ListNode head = new ListNode(0);
        head.next = new ListNode(1);
        head.next.next = new ListNode(0);
        head.next.next.next = new ListNode(3);
        head.next.next.next.next = new ListNode(0);
        head.next.next.next.next.next = new ListNode(2);
        head.next.next.next.next.next.next = new ListNode(2);

        ListNode result = mergeInBetween(head, 1, 3);
        assertEquals(new ListNode(1), result);
        assertSame(result.next, new ListNode(3));
        assertSame(result.next.next, new ListNode(4));
    }

}
```