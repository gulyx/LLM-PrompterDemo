```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;

public class 654_DescriptionExampleTest {

    public TreeNode buildMaxTree(int[] nums) {
        return buildMaxTree(nums, 0, nums.length - 1);
    }

    private TreeNode buildMaxTree(int[] nums, int start, int end) {
        if (start > end) {
            return null;
        }
        int maxIdx = start;
        for (int i=start; i<=end; i++) {
            if (nums[i] > nums[maxIdx]) {
                maxIdx = i;
            }
        }
        TreeNode root = new TreeNode(nums[maxIdx]);
        root.left = buildMaxTree(nums, start, maxIdx-1);
        root.right = buildMaxTree(nums, maxIdx+1, end);
        return root;
    }

    @Test
    public void testBuildMaxTree_Example1() {
        int[] nums = {3,2,1,6,0,5};
        TreeNode tree = new 654_DescriptionExampleTest().buildMaxTree(nums);
        assertEquals(6, tree.val);
        assertEquals(new TreeNode(3), tree.left.val);
        assertEquals(new TreeNode(5), tree.left.right.val);
        assertEquals(new TreeNode(2), tree.right.val);
        assertEquals(new TreeNode(0), tree.right.right.val);
        assertNull(tree.left.right.right.left);
    }

    @Test
    public void testBuildMaxTree_Example2() {
        int[] nums = {3,2,1};
        TreeNode tree = new 654_DescriptionExampleTest().buildMaxTree(nums);
        assertEquals(3, tree.val);
        assertNull(tree.left);
        assertEquals(new TreeNode(2), tree.right.val);
        assertEquals(new TreeNode(1), tree.right.right.val);
    }
}
```