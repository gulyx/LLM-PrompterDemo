package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.654;

import java.util.*;

public class Solution {
    public TreeNode buildMaximumBinaryTree(int[] nums) {
        return buildMaximumBinaryTree(nums, 0, nums.length - 1);
    }

    private TreeNode buildMaximumBinaryTree(int[] nums, int left, int right) {
        if (left > right)
            return null;
        int maxIndex = left;
        for (int i = left + 1; i <= right; i++) {
            if (nums[i] > nums[maxIndex])
                maxIndex = i;
        }
        TreeNode node = new TreeNode(nums[maxIndex]);
        node.left = buildMaximumBinaryTree(nums, left, maxIndex - 1);
        node.right = buildMaximumBinaryTree(nums, maxIndex + 1, right);
        return node;
    }

}

class TreeNode {
    int val;
    TreeNode left;
    TreeNode right;
    TreeNode() {}
    TreeNode(int val) { this.val = val; }
    TreeNode(int val, TreeNode left, TreeNode right) {
        this.val = val;
        this.left = left;
        this.right = right;
    }
}