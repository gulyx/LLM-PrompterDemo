package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.1415;

public class Solution {
    public String getHappyString(int n, int k) {
        StringBuilder result = new StringBuilder();
        char[] chars = new char[n];
        dfs(chars, 0, n, result);
        if (k > count(result.toString())) return "";
        else return result.substring(k - 1);
    }

    private void dfs(char[] chars, int idx, int len, StringBuilder result) {
        if (len == 0) {
            result.append(chars);
            return;
        }
        for (char c : new char[] {'a', 'b', 'c'}) {
            if (idx > 0 && chars[idx - 1] == c) continue;
            chars[len - 1] = c;
            dfs(chars, idx + 1, len - 1, result);
            chars[len - 1] = '.';
        }
    }

    private int count(StringBuilder result) {
        int count = 0;
        for (char c : result.toString().toCharArray()) {
            if (c == '.') continue;
            else ++count;
        }
        return count;
    }
}