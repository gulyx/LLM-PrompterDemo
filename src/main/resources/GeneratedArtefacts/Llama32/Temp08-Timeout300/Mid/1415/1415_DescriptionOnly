package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import java.util.*;

public class DescriptionOnly {

    public static void main(String[] args) {
        System.out.println(happyString(2, 5));
        System.out.println(happyString(6, 10));
        System.out.println(happyString(7, 20));
        System.out.println(happyString(1, 10000));
        System.out.println(happyString(11, 5000));
    }

    public static String happyString(int n, int k) {
        List<String> result = new ArrayList<>();
        for (int c1 = 'a'; c1 <= 'c'; c1++) {
            backtrack(result, n - 1, c1, "");
        }
        if(k > result.size()) return "";
        else return result.get(k-1);
    }

    private static void backtrack(List<String> result, int remain, char pre, String path) {
        if(remain == 0){
            result.add(path);
            return;
        }
        for(char c = 'a'; c <= 'c'; c++){
            if(c == pre) continue;
            backtrack(result, remain-1, c, path+c);
        }
    }

}