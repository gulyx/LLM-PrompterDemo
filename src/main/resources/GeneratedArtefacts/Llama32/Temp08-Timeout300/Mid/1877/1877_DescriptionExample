package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;

public class PairSumMinimization {

    @Test
    public void testMaxPairSumExample1() {
        int[] nums = {3,5,2,3};
        assertEquals(7, maxPairSum(nums));
    }

    @Test
    public void testMaxPairSumExample2() {
        int[] nums = {3,5,4,2,4,6};
        assertEquals(8, maxPairSum(nums));
    }

    @Test
    public void testMaxPairSumSmallArray() {
        int[] nums = {1, 1};
        assertEquals(2, maxPairSum(nums));
    }

    @Test
    public void testMaxPairSumLargeArray() {
        int[] nums = {10, 20, 30, 40, 50};
        assertEquals(60, maxPairSum(nums));
    }

    @Test
    public void testMaxPairSumEmptyArray() {
        int[] nums = {};
        assertThrows(NullPointerException::class, () -> maxPairSum(nums));
    }
}

int maxPairSum(int[] nums) {
    int n = nums.length;
    if (n % 2 != 0) {
        throw new RuntimeException("Input array must have even length");
    }

    Arrays.sort(nums);

    int pairSums = 0;
    for (int i = 0; i < n / 2; i++) {
        pairSums += nums[i] + nums[n - i - 1];
    }

    return pairSums;
}