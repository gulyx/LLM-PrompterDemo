```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.assertArrayEquals;

public class DescriptionExample {

    public int minOperations(String boxes) {
        int n = boxes.length();
        int[] answer = new int[n];
        for (int i = 0; i < n; i++) {
            if (boxes.charAt(i) == '1') {
                int sum = 0;
                for (int j = Math.max(0, i - 1); j <= Math.min(n - 1, i + 1); j++) {
                    if (boxes.charAt(j) == '1') {
                        sum++;
                    }
                }
                answer[i] = n - sum;
            } else {
                answer[i] = 0;
            }
        }
        return answer;
    }

    @Test
    public void testMinOperationsExample1() {
        String boxes = "110";
        int[] expected = {1, 1, 3};
        int[] result = minOperations(boxes);
        assertArrayEquals(expected, result);
    }

    @Test
    public void testMinOperationsExample2() {
        String boxes = "001011";
        int[] expected = {11, 8, 5, 4, 3, 4};
        int[] result = minOperations(boxes);
        assertArrayEquals(expected, result);
    }

    @Test
    public void testMinOperationsEmptyBoxes() {
        String boxes = "";
        int[] expected = {};
        int[] result = minOperations(boxes);
        assertArrayEquals(expected, result);
    }

    @Test
    public void testMinOperationsSingleBox() {
        String boxes = "11";
        int[] expected = {0, 0};
        int[] result = minOperations(boxes);
        assertArrayEquals(expected, result);
    }

    @Test
    public void testMinOperationsAllBoxesFilled() {
        String boxes = "111";
        int[] expected = {4, 3, 2, 1};
        int[] result = minOperations(boxes);
        assertArrayEquals(expected, result);
    }
}
```