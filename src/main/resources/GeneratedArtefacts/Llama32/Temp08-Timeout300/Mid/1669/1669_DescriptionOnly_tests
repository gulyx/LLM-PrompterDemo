package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;

public class DescriptionOnlyTest {

    @Test
    public void test1() {
        ListNode llist1 = new ListNode(1, new ListNode(2, new ListNode(3, new ListNode(4, new ListNode(5)))));
        ListNode llist2 = new ListNode(4, new ListNode(5, new ListNode(6, new ListNode(7))));

        ListNode result = removeNodes(llist1, 2, 4);
        while (result != null) {
            System.out.print(result.val + " ");
            result = result.next;
        }
    }

    @Test
    public void test2() {
        ListNode llist1 = new ListNode(1, new ListNode(2, new ListNode(3, new ListNode(4, new ListNode(5)))));
        ListNode llist2 = new ListNode(4, new ListNode(5, new ListNode(6, new ListNode(7))));

        ListNode result = removeNodes(llist1, 0, 1);
        while (result != null) {
            System.out.print(result.val + " ");
            result = result.next;
        }
    }

    @Test
    public void test3() {
        ListNode llist1 = new ListNode(1, new ListNode(2, new ListNode(3, new ListNode(4, new ListNode(5)))));
        ListNode llist2 = new ListNode(4, new ListNode(5, new ListNode(6, new ListNode(7))));

        ListNode result = removeNodes(llist1, 0, 0);
        while (result != null) {
            System.out.print(result.val + " ");
            result = result.next;
        }
    }

    @Test
    public void test4() {
        ListNode llist1 = new ListNode(1, new ListNode(2, new ListNode(3, new ListNode(4, new ListNode(5)))));
        ListNode llist2 = new ListNode(4, new ListNode(5, new ListNode(6, new ListNode(7)));

        ListNode result = removeNodes(llist1, 0, 2);
        while (result != null) {
            System.out.print(result.val + " ");
            result = result.next;
        }
    }

    @Test
    public void test5() {
        ListNode llist1 = new ListNode(1, new ListNode(2, new ListNode(3, new ListNode(4, new ListNode(5)))));
        ListNode llist2 = new ListNode(4, new ListNode(5, new ListNode(6, new ListNode(7)));

        ListNode result = removeNodes(llist1, 0, 3);
        while (result != null) {
            System.out.print(result.val + " ");
            result = result.next;
        }
    }

}