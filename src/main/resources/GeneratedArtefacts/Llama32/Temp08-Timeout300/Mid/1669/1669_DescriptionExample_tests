package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.1669;

import it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.1669.Solution;

public class 1669_DescriptionExample_testsTest {
 
    @Test
    public void test1() {
        Solution solution = new Solution();
        int[] list1 = {10,1,13,6,9,5};
        int a = 3;
        int b = 4;
        int[] list2 = {1000000,1000001,1000002};
        int[] result = solution.migrateNodeList(list1, a, b, list2);
        assertArrayEquals(new int[]{0,1,1000000,1000001,1000002,1000003,1000004,6}, result);
    }

    @Test
    public void test2() {
        Solution solution = new Solution();
        int[] list1 = {1,2,3};
        int a = 1;
        int b = 1;
        int[] list2 = {};
        int[] result = solution.migrateNodeList(list1, a, b, list2);
        assertArrayEquals(new int[]{0,1,2}, result);
    }

    @Test
    public void test3() {
        Solution solution = new Solution();
        int[] list1 = {1,2,3};
        int a = 2;
        int b = 2;
        int[] list2 = {};
        int[] result = solution.migrateNodeList(list1, a, b, list2);
        assertArrayEquals(new int[]{0,1,2,3}, result);
    }

    @Test
    public void test4() {
        Solution solution = new Solution();
        int[] list1 = {1,2};
        int a = 0;
        int b = 0;
        int[] list2 = {};
        int[] result = solution.migrateNodeList(list1, a, b, list2);
        assertArrayEquals(new int[]{}, result);
    }

    @Test
    public void test5() {
        Solution solution = new Solution();
        int[] list1 = {1,2};
        int a = 0;
        int b = 1;
        int[] list2 = {};
        int[] result = solution.migrateNodeList(list1, a, b, list2);
        assertArrayEquals(new int[]{1}, result);
    }
}