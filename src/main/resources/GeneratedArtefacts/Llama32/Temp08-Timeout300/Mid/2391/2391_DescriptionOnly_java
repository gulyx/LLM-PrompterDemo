package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.2391;

public class Solution {
    public int garbageCollection(int[][] garbage, int[] travel) {
        String[] g = new String[3];
        for (int i = 0; i < garbage.length; i++) {
            char ch = garbage[i][0];
            if (ch == 'M') {
                g[0] += garbage[i];
            } else if (ch == 'P') {
                g[1] += garbage[i];
            } else {
                g[2] += garbage[i];
            }
        }

        int res = 0;
        for (int i = 0; i < garbage.length - 1; i++) {
            res += travel[i];
            char ch = garbage[i + 1][0];
            if (ch == 'M') {
                g[0] = g[0].substring(1);
                res += Math.min(g[0].length(), 3 * travel[i]);
            } else if (ch == 'P') {
                g[1] = g[1].substring(1);
                res += Math.min(g[1].length(), 2 * travel[i]);
            } else {
                g[2] = g[2].substring(1);
                res += Math.min(g[2].length(), 1 * travel[i]);
            }
        }

        return res + Math.max(Math.max(g[0].length(), g[1].length()), g[2].length());
    }
}