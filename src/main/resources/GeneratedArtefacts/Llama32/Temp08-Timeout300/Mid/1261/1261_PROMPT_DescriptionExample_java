As a professional Software Engineer, generate a complete Java class file (name the class as :'Solution', and use as first line the declaration: 'package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.1261;') for the following description in natural language with examples. Specifically below the description, each example is introduced by the keyword[--Example XX--] (where XX is a number), and it is composed by an input tuple and an expected output. Emit only the Java code, without any other tag or text.  Here is the description: 
Given a binary tree with the following rules:

"root.val == 0"

For any "treeNode":
If "treeNode.val == x" and "treeNode.left != null", then "treeNode.left.val == 2 * x + 1"
If "treeNode.val == x" and "treeNode.right != null", then "treeNode.right.val == 2 * x + 2"

Now the binary tree is contaminated, which means all "treeNode.val" have been changed to "-1".

Implement the "FindElements" class:

"FindElements(TreeNode* root)" Initializes the object with a contaminated binary tree and recovers it.

"bool find(int target)" Returns "true" if the "target" value exists in the recovered binary tree.



[--Example 1--]
Input: ["FindElements","find","find"]
       [[[-1,null,-1]],[1],[2]]
Output: [null,false,true]

[--Example 2--]
Input: ["FindElements","find","find","find"]
       [[[-1,-1,-1,null,-1,null,-1]],[1],[3],[5]]
Output: [null,true,true,false]

[--Example 3--]
Input: ["FindElements","find","find","find","find"]
[[[-1,null,-1,-1,null,-1]],[2],[3],[4],[5]]
Output: [null,true,false,false,true]