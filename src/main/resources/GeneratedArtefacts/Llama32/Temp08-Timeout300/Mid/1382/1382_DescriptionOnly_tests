package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.*;

public class DescriptionOnlyTest {

    @Test
    public void testBalancedBST_SameRoot() {
        TreeNode root = new TreeNode(1);
        root.left = new TreeNode(2);
        root.right = new TreeNode(3);

        TreeNode expected = new TreeNode(2);
        expected.left = new TreeNode(1);
        expected.right = new TreeNode(3);

        TreeNode actual = balanceBST(root);
        assertEquals(expected, actual);
    }

    @Test
    public void testBalancedBST_DifferentRoot() {
        TreeNode root = new TreeNode(5);
        root.left = new TreeNode(3);
        root.right = new TreeNode(7);
        root.left.left = new TreeNode(2);
        root.left.right = new TreeNode(4);
        root.right.left = new TreeNode(6);
        root.right.right = new TreeNode(8);

        TreeNode expected = new TreeNode(5);
        expected.left = new TreeNode(3);
        expected.right = new TreeNode(7);
        expected.left.left = new TreeNode(2);
        expected.left.right = new TreeNode(4);
        expected.right.left = new TreeNode(6);
        expected.right.right = new TreeNode(8);

        TreeNode actual = balanceBST(root);
        assertEquals(expected, actual);
    }

    @Test
    public void testBalancedBST_MoreThanOneRoot() {
        TreeNode root = new TreeNode(1);
        TreeNode node2 = new TreeNode(2);
        TreeNode node3 = new TreeNode(3);
        TreeNode node4 = new TreeNode(4);

        root.left = node2;
        node2.right = node3;

        TreeNode expected = new TreeNode(2);
        expected.left = new TreeNode(1);
        expected.right = new TreeNode(3);

        TreeNode actual = balanceBST(root);
        assertEquals(expected, actual);
    }

    @Test
    public void testBalancedBST_NoneRoot() {
        TreeNode root = null;

        TreeNode expected = null;
        TreeNode actual = balanceBST(root);
        assertEquals(expected, actual);
    }

    @Test
    public void testBalancedBST_EmptyTree() {
        TreeNode root = null;

        TreeNode expected = null;
        TreeNode actual = balanceBST(root);
        assertEquals(expected, actual);
    }
}