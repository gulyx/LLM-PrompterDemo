package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;

public class 2196_DescriptionExample {

    @Test
    public void testBuildTree() {
        int[][] descriptions = {{20,15,1},{20,17,0},{50,20,1},{50,80,0},{80,19,1}};
        TreeNode root = new Solution().buildTree(descriptions);
        TreeNode node20 = root.left;
        TreeNode node17 = root.right;
        TreeNode node15 = node20.left;
        TreeNode node19 = node15.right;
        TreeNode node80 = node17.left;
        TreeNode node19Left = node80.left;

        assertEquals(50, node20.val);
        assertEquals(80, node80.val);
        assertEquals(1, node20.left == null ? 0 : 1);
        assertEquals(1, node17.left == null ? 0 : 1);
        assertEquals(15, node15.val);
        assertEquals(17, node17.right.val);
        assertEquals(19, node19Left.val);
    }

    @Test
    public void testBuildTree2() {
        int[][] descriptions = {{1,2,1},{2,3,0},{3,4,1}};
        TreeNode root = new Solution().buildTree(descriptions);
        TreeNode node1 = root.left;
        TreeNode node3 = root.right;
        TreeNode node4 = node3.left;

        assertEquals(1, node1.val);
        assertEquals(3, node4.val);
        assertEquals(null, node2 = node1.right);
        assertEquals(null, node5 = node3.right);
    }

    @Test
    public void testBuildTree3() {
        int[][] descriptions = {};
        TreeNode root = new Solution().buildTree(descriptions);

        assertNull(root);
    }

    @Test
    public void testBuildTree4() {
        int[][] descriptions = {{1,2}};
        TreeNode root = new Solution().buildTree(descriptions);
        TreeNode node1 = root.left;
        TreeNode node2 = node1.right;

        assertEquals(2, node2.val);
        assertNull(root.left);
        assertEquals(null, root.right);
    }

    @Test
    public void testBuildTree5() {
        int[][] descriptions = {{1}};
        TreeNode root = new Solution().buildTree(descriptions);
        TreeNode node1 = root.left;

        assertEquals(1, node1.val);
        assertNull(root.left);
        assertNull(root.right);
    }
}