```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class DescriptionExample {

    public int countVowelStrings(int n) {
        long[][] dp = new long[n + 1][5];
        for (int i = 0; i < 5; i++) {
            dp[0][i] = 1;
        }
        for (int i = 1; i <= n; i++) {
            for (int j = 0; j < 5; j++) {
                for (int k = 0; k < 5; k++) {
                    if (j > ord(k)) {
                        dp[i][k] += dp[i - 1][j];
                    } else {
                        dp[i][k] += dp[i - 1][j];
                    }
                }
            }
        }
        long sum = 0;
        for (int i = 0; i < 5; i++) {
            sum += dp[n][i];
        }
        return (int)sum;
    }

    private int ord(char c) {
        switch (c) {
            case 'a':
                return 0;
            case 'e':
                return 1;
            case 'i':
                return 2;
            case 'o':
                return 3;
            case 'u':
                return 4;
            default:
                throw new IllegalArgumentException();
        }
    }

    @Test
    public void testCountVowelStrings_Example1() {
        assertEquals(5, countVowelStrings(1));
    }

    @Test
    public void testCountVowelStrings_Example2() {
        assertEquals(15, countVowelStrings(2));
    }

    @Test
    public void testCountVowelStrings_Example3() {
        assertEquals(66045, countVowelStrings(33));
    }
}
```