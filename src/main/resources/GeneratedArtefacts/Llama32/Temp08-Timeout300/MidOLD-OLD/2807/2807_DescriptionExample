```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;

public class 2807_DescriptionExample {

    public ListNode insertionSortList(ListNode head) {
        ListNode dummy = new ListNode(0);
        ListNode current = head;
        while (current != null) {
            ListNode pre = dummy;
            while (pre.next != null && current.val > pre.next.val) {
                pre = pre.next;
            }
            ListNode nextTemp = current.next;
            current.next = pre.next;
            pre.next = current;
            current = nextTemp;
        }
        return dummy.next;
    }

    @Test
    public void test1() {
        ListNode head = new ListNode(18);
        head.next = new ListNode(6);
        head.next.next = new ListNode(10);
        head.next.next.next = new ListNode(3);
        head = insertionSortList(head);
        assertEquals(new int[]{18, 6, 6, 2, 10, 1, 3}, getNextArray(head));
    }

    @Test
    public void test2() {
        ListNode head = new ListNode(7);
        head = insertionSortList(head);
        assertEquals(new int[]{7}, getNextArray(head));
    }

    @Test
    public void test3() {
        ListNode head = new ListNode(12);
        head.next = new ListNode(4);
        head.next.next = new ListNode(1);
        head.next.next.next = new ListNode(6);
        head.next.next.next.next = new ListNode(5);
        head = insertionSortList(head);
        assertEquals(new int[]{12, 4, 2, 6, 1, 5}, getNextArray(head));
    }

    @Test
    public void test4() {
        ListNode head = new ListNode(100);
        head.next = new ListNode(20);
        head.next.next = new ListNode(10);
        head.next.next.next = new ListNode(5);
        head = insertionSortList(head);
        assertEquals(new int[]{100, 20, 10, 5}, getNextArray(head));
    }

    @Test
    public void test5() {
        ListNode head = new ListNode(50);
        head.next = new ListNode(3);
        head.next.next = new ListNode(2);
        head = insertionSortList(head);
        assertEquals(new int[]{50, 3, 2}, getNextArray(head));
    }

    private int[] getNextArray(ListNode node) {
        int size = 0;
        while (node != null) {
            size++;
            node = node.next;
        }
        int[] array = new int[size];
        node = head;
        for (int i = 0; i < size; i++) {
            array[i] = node.val;
            node = node.next;
        }
        return array;
    }

}

class ListNode {
    int val;
    ListNode next;
    ListNode() {}
    ListNode(int val) { this.val = val; }
    ListNode(int val, ListNode next) { this.val = val; this.next = next; }
}
```