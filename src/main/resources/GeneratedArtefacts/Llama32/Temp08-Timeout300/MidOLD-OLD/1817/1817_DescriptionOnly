package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import java.util.*;

public class 1817_DescriptionOnly {

    public static void main(String[] args) {
        //Your test classes here
    }

    public static int[] findDifferentUsersPerMinute(int[][] logs, int k) {
        Map<Integer, Set<Integer>> minutes = new HashMap<>();
        for (int i = 0; i < logs.length; i++) {
            minutes.computeIfAbsent(logs[i][1], key -> new HashSet<>()).add(i + 1);
        }
        List<Integer> uniqueMinutes = new ArrayList<>(minutes.values());
        Collections.sort(uniqueMinutes);
        Map<Integer, Integer> map = new HashMap<>();
        int index = 0;
        for (int i = 0; i < k && i <= uniqueMinutes.size() - 1; i++) {
            map.put(i + 1, uniqueMinutes.get(i));
        }
        return map.values().stream()
                .mapToObj(count -> new int[]{count, 0})
                .flatMap(Arrays::stream)
                .toArray(int[]::new);
    }

    public static void testFindDifferentUsersPerMinute_() {
        assertArrayEquals(new int[]{1, 2, 3}, findDifferentUsersPerMinute(
                new int[][] {{1, 10}, {2, 20}, {3, 30}}, 5));
    }

    public static void testFindDifferentUsersPerMinute_2() {
        assertArrayEquals(new int[]{0, 1, 0, 1, 0}, findDifferentUsersPerMinute(
                new int[][] {{2, 10}, {2, 20}}, 3));
    }

    public static void testFindDifferentUsersPerMinute_3() {
        assertArrayEquals(new int[]{1}, findDifferentUsersPerMinute(
                new int[][] {{5, 30}}, 1000));
    }
}