```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import java.util.*;

public class Solution {
    public int[] descriptionExample(int[][] logs, int k) {
        Map<Integer, Integer> userActionCount = new HashMap<>();
        for (int[] log : logs) {
            userActionCount.put(log[0], userActionCount.getOrDefault(log[0], 0) + 1);
        }

        Map<Integer, Set<Integer>> userMinutes = new HashMap<>();
        for (Map.Entry<Integer, Integer> entry : userActionCount.entrySet()) {
            int userId = entry.getKey();
            int actionTime = entry.getValue();
            if (!userMinutes.containsKey(userId)) {
                userMinutes.put(userId, new HashSet<>());
            }
            userMinutes.get(userId).add(actionTime);
        }

        Map<Integer, Integer> countMinutes = new HashMap<>();
        for (Set<Integer> minutes : userMinutes.values()) {
            int uniqueMinutes = minutes.size();
            countMinutes.put(uniqueMinutes, countMinutes.getOrDefault(uniqueMinutes, 0) + 1);
        }

        List<Integer> result = new ArrayList<>(new HashSet<>(countMinutes.keySet()));
        while (result.size() < k) {
            Collections.sort(result, Comparator.reverseOrder());
            if (result.isEmpty()) break;
            int index = result.indexOf(result.get(0)) - 1;
            if (index < 0) continue;
            result.remove(index);
            result.add(index + 1, countMinutes.get(index + 1));
        }

        return new int[result.size()];
    }
}
```