package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;

public class 654_DescriptionExample {

    public TreeNode buildMaxTree(int[] nums) {
        return buildMaxTree(nums, 0, nums.length-1);
    }

    private TreeNode buildMaxTree(int[] nums, int start, int end) {
        if (start > end) return null;
        int maxIndex = start;
        for (int i = start; i <= end; i++) {
            if (nums[i] > nums[maxIndex]) {
                maxIndex = i;
            }
        }

        TreeNode root = new TreeNode(nums[maxIndex]);
        root.left = buildMaxTree(nums, start, maxIndex-1);
        root.right = buildMaxTree(nums, maxIndex+1, end);

        return root;
    }

    @Test
    public void testBuildMaxTree() {
        int[] nums = {3,2,1,6,0,5};
        TreeNode expected = new TreeNode(6);
        expected.left = new TreeNode(3);
        expected.right = new TreeNode(5);
        expected.left.left = new TreeNode(2);
        expected.left.right = new TreeNode(1);
        expected.left.left.left = new TreeNode(0);

        TreeNode actual = buildMaxTree(nums);
        assertSame(expected, actual);
    }

    @Test
    public void testBuildMaxTree2() {
        int[] nums = {3,2,1};
        TreeNode expected = new TreeNode(3);
        expected.right = new TreeNode(2);
        expected.right.right = new TreeNode(1);

        TreeNode actual = buildMaxTree(nums);
        assertSame(expected, actual);
    }

}