package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;

public class 1861_DescriptionOnly {

    @Test
    public void test_Example1() {
        char[][] boxGrid = {
            {'#','.','.','.'},
            {'*','*','.','.'},
            {'.#','.*.#','.'}
        };
        int[][] result = rotateTheBox(boxGrid);
        for(int i = 0; i<result.length;i++){
            for(int j = 0;j<result[0].length;j++){
                assert result[i][j]==boxGrid[0][j];
            }
        }
    }

    @Test
    public void test_Example2() {
        char[][] boxGrid = {
            {'#','.','.','.'},
            {'*','*','.','.'},
            {'.#','.*.#','.'}
        };
        int[][] result = rotateTheBox(boxGrid);
        for(int i = 0; i<result.length;i++){
            for(int j = 0;j<result[0].length;j++){
                assert result[i][j]==boxGrid[result[0].length-1-i][j];
            }
        }
    }

    @Test
    public void test_Example3() {
        char[][] boxGrid = {
            {'#','.','.','.'},
            {'*','*','.','.'},
            {'.#','.*.#','.'}
        };
        int[][] result = rotateTheBox(boxGrid);
        for(int i = 0; i<result.length;i++){
            for(int j = 0;j<result[0].length;j++){
                assert result[i][j]==boxGrid[result[0].length-1-i][j];
            }
        }
    }

    @Test
    public void test_Example4() {
        char[][] boxGrid = {
            {'#','.','.','.'},
            {'*','*','.','.'},
            {'.#','.*.#','.'}
        };
        int[][] result = rotateTheBox(boxGrid);
        for(int i = 0; i<result.length;i++){
            for(int j = 0;j<result[0].length;j++){
                assert result[i][j]==boxGrid[result[0].length-1-i][j];
            }
        }
    }

    @Test
    public void test_Example5() {
        char[][] boxGrid = {
            {'#','.','.','.'},
            {'*','*','.','.'},
            {'.#','.*.#','.'}
        };
        int[][] result = rotateTheBox(boxGrid);
        for(int i = 0; i<result.length;i++){
            for(int j = 0;j<result[0].length;j++){
                assert result[i][j]==boxGrid[result[0].length-1-i][j];
            }
        }
    }

    public int[][] rotateTheBox(char[][] boxGrid) {
       int m=boxGrid.length,n=boxGrid[0].length;
       char[][] rotated = new char[n][m];

       for(int i = 0; i<m;i++){
           for(int j =0;j<n;j++){
               if(boxGrid[i][j]=='#'){
                   rotated[j][m-i-1]='#';
               }else if(boxGrid[i][j]=='.'){
                   rotated[j][m-i-1]='.';
               }else{
                   rotated[j][m-i-1]='*';
               }
           }

       }
        return  rotated;
    }
}