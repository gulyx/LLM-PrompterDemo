package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

public class 2130_DescriptionOnly {

    public static class ListNode {
        int val;
        ListNode next;
        ListNode(int x) { val = x; }
    }

    @Test
    void test_twin_sum_example() {
        ListNode head = new ListNode(1);
        head.next = new ListNode(2);
        head.next.next = new ListNode(3);
        head.next.next.next = new ListNode(4);

        assertEquals(8, findMaximumTwinSum(head));
    }

    @Test
    void test_no_twin() {
        ListNode head = new ListNode(1);
        head.next = new ListNode(2);
        head.next.next = new ListNode(3);
        head.next.next.next = new ListNode(4);

        assertEquals(9, findMaximumTwinSum(head));
    }

    @Test
    void test_single_twin() {
        ListNode head = new ListNode(1);
        head.next = new ListNode(2);
        head.next.next = new ListNode(3);

        assertEquals(7, findMaximumTwinSum(head));
    }

    @Test
    void test_empty_list() {
        ListNode head = null;

        assertEquals(-1, findMaximumTwinSum(head));
    }

    @Test
    void test_large_input() {
        ListNode head = new ListNode(1);
        for (int i = 0; i < 40000; i++) {
            head.next = new ListNode(i * 2 + 1);
        }

        assertEquals(800001, findMaximumTwinSum(head));
    }
}