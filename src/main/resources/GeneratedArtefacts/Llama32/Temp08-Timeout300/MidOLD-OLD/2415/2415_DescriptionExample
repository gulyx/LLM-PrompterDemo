```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;
public class DescriptionExample {

    @Test
    public void testLevelOne() {
        Node root = new Node(2);
        root.left = new Node(3);
        root.right = new Node(5);
        reverseOddLevels(root);
        assertEquals(new Node(2), root);
        assertEquals(new Node(5), root.left);
        assertEquals(new Node(3), root.right);
    }

    @Test
    public void testLevelTwo() {
        Node root = new Node(2);
        root.left = new Node(3);
        root.right = new Node(5);
        root.left.left = new Node(8);
        root.left.right = new Node(13);
        root.right.left = new Node(21);
        reverseOddLevels(root);
        assertEquals(new Node(2), root);
        assertEquals(new Node(13), root.left);
        assertEquals(new Node(3), root.right);
        assertEquals(new Node(5), root.left.left);
        assertEquals(new Node(8), root.left.right);
        assertEquals(new Node(21), root.right.left);
    }

    @Test
    public void testLevelThree() {
        Node root = new Node(2);
        root.left = new Node(3);
        root.right = new Node(5);
        root.left.left = new Node(8);
        root.left.right = new Node(13);
        root.right.left = new Node(21);
        reverseOddLevels(root);
        assertEquals(new Node(2), root);
        assertEquals(new Node(13), root.left);
        assertEquals(new Node(3), root.right);
        assertEquals(new Node(5), root.left.left);
        assertEquals(new Node(8), root.left.right);
        assertEquals(new Node(21), root.right.left);
    }

    @Test
    public void testLevelFour() {
        Node root = new Node(2);
        root.left = new Node(3);
        root.right = new Node(5);
        root.left.left = new Node(8);
        root.left.right = new Node(13);
        root.right.left = new Node(21);
        reverseOddLevels(root);
        assertEquals(new Node(2), root);
        assertEquals(new Node(13), root.left);
        assertEquals(new Node(3), root.right);
        assertEquals(new Node(5), root.left.left);
        assertEquals(new Node(8), root.left.right);
        assertEquals(new Node(21), root.right.left);
    }

    @Test
    public void testLeafNode() {
        Node root = new Node(0);
        root.left = new Node(1);
        root.right = new Node(2);
        reverseOddLevels(root);
        assertEquals(new Node(0), root);
        assertEquals(new Node(2), root.left);
        assertEquals(new Node(1), root.right);
    }

}

class Node {
    int val;
    Node left;
    Node right;

    public Node(int val) {
        this.val = val;
        this.left = null;
        this.right = null;
    }
}

public class Node {
    int val;
    Node left;
    Node right;

    public Node(int val) {
        this.val = val;
        this.left = null;
        this.right = null;
    }

}
```