```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import java.util.List;
import java.util.Arrays;
import static org.junit.Assert.*;

public class FortySix_DescriptionOnly {
 
    @Test
    public void testFindAllPermutations() {
        int[] nums = {1, 2, 3};
        List<List<Integer>> expected = Arrays.asList(Arrays.asList(1, 2, 3),
            Arrays.asList(1, 3, 2), Arrays.asList(2, 1, 3),
            Arrays.asList(2, 3, 1), Arrays.asList(3, 1, 2),
            Arrays.asList(3, 2, 1));
        List<List<Integer>> actual = findAllPermutations(nums);
        assertEquals(expected, actual);
    }

    @Test
    public void testFindAllPermutations_SingleElement() {
        int[] nums = {5};
        List<List<Integer>> expected = Arrays.asList(Arrays.asList(5));
        List<List<Integer>> actual = findAllPermutations(nums);
        assertEquals(expected, actual);
    }

    @Test
    public void testFindAllPermutations_EmptyArray() {
        int[] nums = {};
        List<List<Integer>> expected = Collections.emptyList();
        List<List<Integer>> actual = findAllPermutations(nums);
        assertEquals(expected, actual);
    }

    @Test
    public void testFindAllPermutations_NegativeNumbers() {
        int[] nums = {-1, 0, 2};
        List<List<Integer>> expected = Arrays.asList(Arrays.asList(-1, 0, 2),
            Arrays.asList(-1, 2, 0), Arrays.asList(0, -1, 2),
            Arrays.asList(0, 2, -1), Arrays.asList(2, -1, 0),
            Arrays.asList(2, 0, -1));
        List<List<Integer>> actual = findAllPermutations(nums);
        assertEquals(expected, actual);
    }

    @Test
    public void testFindAllPermutations_DuplicateElements() {
        int[] nums = {1, 1, 2};
        List<List<Integer>> expected = Arrays.asList(Arrays.asList(1, 1, 2),
            Arrays.asList(1, 2, 1), Arrays.asList(2, 1, 1), Arrays.asList(2, 1, 1));
        List<List<Integer>> actual = findAllPermutations(nums);
        assertEquals(expected, actual);
    }
}
```