```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertThrows;

public class TreeNode {
    int val;
    TreeNode left;
    TreeNode right;
    TreeNode(int x) { val = x; }
}

class Solution {
    public int sumEvenGrandparent(TreeNode root) {
        return dfs(root, 0);
    }

    private int dfs(TreeNode node, int parentVal) {
        if (node == null) {
            return 0;
        }

        int leftSum = dfs(node.left, node.val % 2 == 0 ? node.val : 0);
        int rightSum = dfs(node.right, node.val % 2 == 0 ? node.val : 0);

        return parentVal % 2 == 0 ? leftSum + rightSum : 0;
    }
}

public class TestSumEvenGrandparent {

    @Test
    public void testSumEvenGrandparent_EmptyTree() {
        Solution solution = new Solution();
        TreeNode root = null;
        assertEquals(0, solution.sumEvenGrandparent(root));
    }

    @Test
    public void testSumEvenGrandparent_NoNodeWithEvenValuedGrandparent() {
        Solution solution = new Solution();
        TreeNode root = new TreeNode(1);
        root.left = new TreeNode(2);
        root.right = new TreeNode(3);
        assertEquals(0, solution.sumEvenGrandparent(root));
    }

    @Test
    public void testSumEvenGrandparent_NodeWithEvenValuedGrandparent() {
        Solution solution = new Solution();
        TreeNode root = new TreeNode(1);
        root.left = new TreeNode(2);
        root.right = new TreeNode(3);
        root.left.left = new TreeNode(4);
        assertEquals(5, solution.sumEvenGrandparent(root));
    }

    @Test
    public void testSumEvenGrandparent_MultipleNodesWithEvenValuedGrandparent() {
        Solution solution = new Solution();
        TreeNode root = new TreeNode(1);
        root.left = new TreeNode(2);
        root.right = new TreeNode(3);
        root.left.left = new TreeNode(4);
        root.left.right = new TreeNode(5);
        root.right.left = new TreeNode(6);
        assertEquals(15, solution.sumEvenGrandparent(root));
    }

    @Test
    public void testSumEvenGrandparent_NullRoot() {
        Solution solution = new Solution();
        assertThrows(NullPointerException.class, () -> solution.sumEvenGrandparent(null));
    }
}
```