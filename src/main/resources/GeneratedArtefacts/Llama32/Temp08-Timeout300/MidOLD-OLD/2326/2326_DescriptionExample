```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import java.util.*;

public class DescriptionExample {

    public int[][] generateMatrix(int m, int n, ListNode head) {
        int row = 0;
        int col = (n - 1) * m;
        boolean right = false;
        int counter = 0;

        if (head == null)
            return new int[m][n];

        List<Integer> queue = new LinkedList<>();
        queue.add(head.val);
        head.next = head.next.next;
        ListNode current = head.next;
        for (; col >= 0; col--) {
            while (current != null && counter < m * n) {
                if (!right && row == m - 1)
                    right = true;
                else if (right && row == 0)
                    right = false;

                int val = queue.get(queue.size() - 1);
                queue.remove(queue.size() - 1);

                if (row < m - 1 && !right) {
                    if (col + 1 != n)
                        current.next.val = queue.get(queue.size() - 1);
                    queue.add(current.next.val);
                    col--;
                    row++;
                    current = current.next;
                } else if (row > 0 && right) {
                    if (col - 1 >= 0)
                        current.next.val = queue.get(queue.size() - 1);
                    queue.add(current.next.val);
                    col--;
                    row--;
                    current = current.next;
                }
            }

            counter++;
        }

        int[][] res = new int[m][n];
        for(int i=0; i<m;i++){
            for (int j = 0; j < n; j++) {
                if(j == n-1){
                    if(i==m-1)
                        break;
                    res[i][j] = -1;
                }else{
                    res[i][j] = queue.get(queue.size() - 1);
                    queue.remove(queue.size() - 1);
                }
            }
        }

        return res;
    }

    public static class ListNode {
        int val;
        ListNode next;
        ListNode(int x) { val = x; }
    }
}
```