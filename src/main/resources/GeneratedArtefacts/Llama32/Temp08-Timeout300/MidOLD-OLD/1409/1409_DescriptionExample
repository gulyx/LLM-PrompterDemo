package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;

public class 1409_DescriptionExample {

    @Test
    public void test_1() {
        int[] queries = {3, 1, 2, 1};
        int m = 5;
        int[] result = findQueries(queries, m);
        assertEquals([2, 1, 2, 1], result);
    }

    @Test
    public void test_2() {
        int[] queries = {4, 1, 2, 2};
        int m = 4;
        int[] result = findQueries(queries, m);
        assertEquals([3, 1, 2, 0], result);
    }

    @Test
    public void test_3() {
        int[] queries = {7, 5, 5, 8, 3};
        int m = 8;
        int[] result = findQueries(queries, m);
        assertEquals([6, 5, 0, 7, 5], result);
    }

    @Test
    public void test_4() {
        int[] queries = {1, 2, 3, 4};
        int m = 4;
        int[] result = findQueries(queries, m);
        assertEquals([0, 1, 2, 3], result);
    }

    @Test
    public void test_5() {
        int[] queries = {9, 10, 11, 12};
        int m = 13;
        int[] result = findQueries(queries, m);
        assertEquals([6, 7, 8, 0], result);
    }
}

public class Main {
    public static int[] findQueries(int[] queries, int m) {
        boolean[] visited = new boolean[m + 1];
        int[] result = new int[queries.length];

        for (int i : queries) {
            if (!visited[i]) {
                visited[i] = true;
                result[Array.asList(visited).indexOf(false)] = i - 1;
            }
        }

        return result;
    }
}