```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.assertArrayEquals;

public class V2482_DescriptionExample {

    @Test
    public void test_diff_matrix() {
        int[][] grid = {{0,1,1},{1,0,1},{0,0,1}};
        int[][] diff = calculateDiffMatrix(grid);
        assertArrayEquals(new int[] {0, 0, 4}, diff[0]);
        assertArrayEquals(new int[] {0, 0, 4}, diff[1]);
        assertArrayEquals(new int[] {-2, -2, 2}, diff[2]);
    }

    @Test
    public void test_diff_matrix_2() {
        int[][] grid = {{1,1,1},{1,1,1}};
        int[][] diff = calculateDiffMatrix(grid);
        for (int i = 0; i < diff.length; i++) {
            assertArrayEquals(new int[] {5, 5, 5}, diff[i]);
        }
    }

    @Test
    public void test_diff_matrix_3() {
        int[][] grid = {{1,0,0},{0,1,0},{0,0,1}};
        int[][] diff = calculateDiffMatrix(grid);
        for (int i = 0; i < diff.length; i++) {
            assertArrayEquals(new int[] {2, -1, -1}, diff[i]);
        }
    }

    @Test
    public void test_diff_matrix_4() {
        int[][] grid = {{0,0},{0,0}};
        int[][] diff = calculateDiffMatrix(grid);
        for (int i = 0; i < diff.length; i++) {
            assertArrayEquals(new int[] {0, 0}, diff[i]);
        }
    }

    @Test
    public void test_diff_matrix_5() {
        int[][] grid = {{1,0},{0,1}};
        int[][] diff = calculateDiffMatrix(grid);
        for (int i = 0; i < diff.length; i++) {
            assertArrayEquals(new int[] {2, -2}, diff[i]);
        }
    }

    private static int[][] calculateDiffMatrix(int[][] grid) {
        int m = grid.length;
        int n = grid[0].length;

        int[] rowOnesCount = new int[m];
        int[] rowZerosCount = new int[m];

        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                if (grid[i][j] == 1) {
                    rowOnesCount[i]++;
                } else {
                    rowZerosCount[i]++;
                }
            }
        }

        int[] colOnesCount = new int[n];
        int[] colZerosCount = new int[n];

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if (grid[j][i] == 1) {
                    colOnesCount[i]++;
                } else {
                    colZerosCount[i]++;
                }
            }
        }

        int[][] diff = new int[m][n];

        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                diff[i][j] = rowOnesCount[i] + colOnesCount[j] - rowZerosCount[i] - colZerosCount[j];
            }
        }

        return diff;
    }
}
```