```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import java.util.*;

public class DescriptionExampleTest {

    public int depthOfTree(TreeNode root) {
        return depth(root);
    }

    private int depth(TreeNode node) {
        if (node == null)
            return 0;
        int leftDepth = depth(node.left);
        int rightDepth = depth(node.right);

        if (leftDepth > rightDepth)
            return leftDepth + 1;
        else
            return rightDepth + 1;
    }

    public class TreeNode {
        int val;
        TreeNode left;
        TreeNode right;

        public TreeNode(int x) {
            val = x;
        }
    }

    @Test
    void test_1() {
        TreeNode root = new TreeNode(1);
        root.left = new TreeNode(2);
        root.right = new TreeNode(3);
        root.left.left = new TreeNode(4);
        root.left.right = new TreeNode(5);
        root.right.right = new TreeNode(6);
        root.right.right.right = new TreeNode(7);
        root.left.right.right = new TreeNode(8);

        assertEquals(15, depthOfTree(root));
    }

    @Test
    void test_2() {
        TreeNode root = new TreeNode(6);
        root.left = new TreeNode(7);
        root.right = new TreeNode(8);
        root.left.left = new TreeNode(2);
        root.left.right = new TreeNode(7);
        root.right.right = new TreeNode(1);
        root.left.right.left = new TreeNode(3);
        root.left.right.right = new TreeNode(9);
        root.left.right.right.right = new TreeNode(4);
        root.left.right.right.right.left = new TreeNode(5);

        assertEquals(19, depthOfTree(root));
    }

    @Test
    void test_3() {
        TreeNode root = new TreeNode(1);
        assertEquals(1, depthOfTree(root));
    }

    @Test
    void test_4() {
        TreeNode root = null;
        assertEquals(0, depthOfTree(root));
    }

    @Test
    void test_5() {
        TreeNode root = new TreeNode(0);
        assertEquals(1, depthOfTree(root));
    }
}
```