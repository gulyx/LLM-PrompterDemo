package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.2136;

import java.util.Arrays;
import java.util.PriorityQueue;

public class Solution {
    public int minDays(int[] plantTime, int[] growTime) {
        int n = plantTime.length;
        PriorityQueue<int[]> queue = new PriorityQueue<>((a, b) -> a[1] - b[1]);
        for (int i = 0; i < n; i++) {
            queue.add(new int[]{i, plantTime[i]});
        }
        long days = 0;
        while (!queue.isEmpty()) {
            int[] top = queue.poll();
            if (days + growTime[top[0]] >= top[1]) {
                queue.add(top);
            } else {
                days++;
            }
        }
        return days + n;
    }
}