package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.1463;

public class Solution {
    public int cherryPickup(int[][] grid) {
        int rows = grid.length;
        int cols = grid[0].length;
        int[][][] dp = new int[rows][cols][cols];

        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < cols; j++) {
                for (int k = 0; k < cols; k++) {
                    if (i == rows - 1 && j == k) {
                        dp[i][j][k] = grid[i][j];
                    } else {
                        int maxCherries = Integer.MIN_VALUE;
                        for (int x = Math.max(0, i + 1); x <= rows - 1; x++) {
                            for (int y = Math.max(0, j - 1); y <= Math.min(cols - 1, k + 1); y++) {
                                maxCherries = Math.max(maxCherries, dp[x][y][k] + grid[i][j]);
                            }
                        }
                        dp[i][j][k] = maxCherries;
                    }
                }
            }
        }

        int maxCherries = Integer.MIN_VALUE;
        for (int j = 0; j < cols; j++) {
            for (int k = 0; k < cols; k++) {
                maxCherries = Math.max(maxCherries, dp[rows - 1][j][k]);
            }
        }

        return maxCherries;
    }
}