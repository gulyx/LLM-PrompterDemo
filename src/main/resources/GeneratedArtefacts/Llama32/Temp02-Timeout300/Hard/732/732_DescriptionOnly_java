package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.732;

import java.util.*;

public class Solution {
    private final TreeMap<Integer, Integer> events;
    private int maxK;

    public Solution() {
        events = new TreeMap<>();
    }

    public int book(int startTime, int endTime) {
        int count = 0;
        for (Map.Entry<Integer, Integer> entry : events.tailMap(endTime).entrySet()) {
            if (startTime < entry.getKey()) {
                break;
            }
            if (entry.getValue() == 1) {
                count++;
            } else {
                count += entry.getValue();
            }
        }

        int k = maxK = count;

        for (Map.Entry<Integer, Integer> entry : events.tailMap(startTime).entrySet()) {
            if (endTime < entry.getKey()) {
                break;
            }
            if (entry.getValue() == 1) {
                count--;
            } else {
                count -= entry.getValue();
            }

            k = Math.max(k, count);
        }

        maxK = Math.max(maxK, k);

        events.put(endTime, events.getOrDefault(endTime, 0) + 1);
        return maxK;
    }
}