As a professional Software Engineer, generate a complete Java class file (name the class as :'Solution', and use as first line the declaration: 'package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.1074;') for the following description in natural language with examples. Specifically below the description, each example is introduced by the keyword[--Example XX--] (where XX is a number), and it is composed by an input tuple and an expected output. Emit only the Java code, without any other tag or text.  Here is the description: 
Given a "matrix" and a "target", return the number of non-empty submatrices that sum to target.

A submatrix "x1, y1, x2, y2" is the set of all cells "matrix[x][y]" with "x1 <= x <= x2" and "y1 <= y <= y2".

Two submatrices "(x1, y1, x2, y2)" and "(x1', y1', x2', y2')" are different if they have some coordinate that is different: for example, if "x1 != x1'".

Constraints:

* "1 <= matrix.length <= 100"
* "1 <= matrix[0].length <= 100"
* "-1000 <= matrix[i][j] <= 1000"
* "-10^8 <= target <= 10^8"
[--Example 1--]
Input: matrix = [[0,1,0],[1,1,1],[0,1,0]], target = 0
Output: 4
[--Example 2--]
Input: matrix = [[1,-1],[-1,1]], target = 0
Output: 5
[--Example 3--]
Input: matrix = [[904]], target = 0
Output: 0