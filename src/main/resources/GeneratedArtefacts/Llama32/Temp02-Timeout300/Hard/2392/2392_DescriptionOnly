package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;

public class 2392_DescriptionOnlyTest {

    @Test
    public void test1() {
        int[][] rowConditions = {{3, 4}, {5, 6}};
        int[][] colConditions = {{7, 8}, {9, 10}};
        int k = 10;
        int[][] result = new Solution().constructMatrix(rowConditions, colConditions, k);
        assertArrayEquals(new int[]{0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, result[0]);
        assertArrayEquals(new int[]{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, result[1]);
    }

    @Test
    public void test2() {
        int[][] rowConditions = {{1, 2}};
        int[][] colConditions = {{3, 4}};
        int k = 5;
        int[][] result = new Solution().constructMatrix(rowConditions, colConditions, k);
        assertArrayEquals(new int[]{0, 0, 0, 0, 0}, result[0]);
        assertArrayEquals(new int[]{1, 2, 3, 4, 5}, result[1]);
    }

    @Test
    public void test3() {
        int[][] rowConditions = {{1, 2}};
        int[][] colConditions = {{1, 2}};
        int k = 5;
        int[][] result = new Solution().constructMatrix(rowConditions, colConditions, k);
        assertArrayEquals(new int[]{0, 0, 0, 0, 0}, result[0]);
        assertArrayEquals(new int[]{1, 2, 3, 4, 5}, result[1]);
    }

    @Test
    public void test4() {
        int[][] rowConditions = {{1, 2}};
        int[][] colConditions = {{3, 4}};
        int k = 10;
        int[][] result = new Solution().constructMatrix(rowConditions, colConditions, k);
        assertArrayEquals(new int[]{0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, result[0]);
        assertArrayEquals(new int[]{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, result[1]);
    }

    @Test
    public void test5() {
        int[][] rowConditions = {{1, 2}};
        int[][] colConditions = {{1, 2}};
        int k = 10;
        int[][] result = new Solution().constructMatrix(rowConditions, colConditions, k);
        assertArrayEquals(new int[]{0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, result[0]);
        assertArrayEquals(new int[]{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, result[1]);
    }
}