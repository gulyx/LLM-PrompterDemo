```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;

public class DescriptionExampleTest {

    @Test
    public void testBuildMatrix() {
        int[][] rowConditions = {{1,2},{3,2}};
        int[][] colConditions = {{2,1},{3,2}};
        int k = 3;
        int[][] result = buildMatrix(rowConditions, colConditions, k);
        assertEquals(new int[][]{{3,0,0},{0,0,1},{0,2,0}}, result);
    }

    @Test
    public void testBuildMatrixNoSolution() {
        int[][] rowConditions = {{1,2},{2,3},{3,1},{2,3}};
        int[][] colConditions = {{2,1}};
        int k = 3;
        int[][] result = buildMatrix(rowConditions, colConditions, k);
        assertArrayEquals(new int[][]{}, result);
    }

    @Test
    public void testBuildMatrixSingleRow() {
        int[][] rowConditions = {{1,2},{1,2}};
        int[][] colConditions = {};
        int k = 3;
        int[][] result = buildMatrix(rowConditions, colConditions, k);
        assertArrayEquals(new int[][]{{0,0,0}}, result);
    }

    @Test
    public void testBuildMatrixSingleCol() {
        int[][] rowConditions = {};
        int[][] colConditions = {{1,2},{3,4}};
        int k = 5;
        int[][] result = buildMatrix(rowConditions, colConditions, k);
        assertArrayEquals(new int[][]{{0,0,0,0,0}}, result);
    }

    @Test
    public void testBuildMatrixEmpty() {
        int[][] rowConditions = {};
        int[][] colConditions = {};
        int k = 3;
        int[][] result = buildMatrix(rowConditions, colConditions, k);
        assertArrayEquals(new int[][]{}, result);
    }
}
```