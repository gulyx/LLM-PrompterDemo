package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;

public class 1028_DescriptionOnly {

    @Test
    public void testRecoverTree() {
        TreeNode root = new TreeNode(3);
        root.left = new TreeNode(9);
        root.right = new TreeNode(20);
        root.right.left = new TreeNode(15);
        root.right.right = new TreeNode(7);

        String traversal = "3 9 20 15 7";
        TreeNode recoveredRoot = recoverFromPreorder(traversal, root);
        assertEquals(root.val, recoveredRoot.val);
    }

    @Test
    public void testRecoverTree_2() {
        TreeNode root = new TreeNode(1);
        root.left = new TreeNode(2);

        String traversal = "1 2";
        TreeNode recoveredRoot = recoverFromPreorder(traversal, root);
        assertEquals(root.val, recoveredRoot.val);
    }

    @Test
    public void testRecoverTree_3() {
        TreeNode root = new TreeNode(1);
        root.left = new TreeNode(2);
        root.right = new TreeNode(3);

        String traversal = "1 2 3";
        TreeNode recoveredRoot = recoverFromPreorder(traversal, root);
        assertEquals(root.val, recoveredRoot.val);
    }

    @Test
    public void testRecoverTree_4() {
        TreeNode root = new TreeNode(1);
        root.left = new TreeNode(2);

        String traversal = "1 2";
        TreeNode recoveredRoot = recoverFromPreorder(traversal, root);
        assertEquals(root.val, recoveredRoot.val);
    }

    @Test
    public void testRecoverTree_5() {
        TreeNode root = new TreeNode(1);
        root.left = new TreeNode(2);

        String traversal = "1 2";
        TreeNode recoveredRoot = recoverFromPreorder(traversal, root);
        assertEquals(root.val, recoveredRoot.val);
    }
}