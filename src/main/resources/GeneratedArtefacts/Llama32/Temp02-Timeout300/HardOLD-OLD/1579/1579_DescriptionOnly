package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;

public class 1579_DescriptionOnly {
    @Test
    public void test_0() {
        int[][] edges = {{1, 0, 2}, {1, 2, 3}};
        assertEquals(0, maxNumEdgesToRemove(edges));
    }

    @Test
    public void test_1() {
        int[][] edges = {{1, 0, 2}, {1, 2, 3}, {2, 0, 3}, {2, 1, 3}};
        assertEquals(1, maxNumEdgesToRemove(edges));
    }

    @Test
    public void test_2() {
        int[][] edges = {{1, 0, 2}, {1, 2, 3}, {2, 0, 3}, {2, 1, 3}};
        assertEquals(4, maxNumEdgesToRemove(edges));
    }

    @Test
    public void test_3() {
        int[][] edges = {{1, 0, 2}, {1, 2, 3}, {2, 0, 3}, {2, 1, 3}};
        assertEquals(4, maxNumEdgesToRemove(edges));
    }

    @Test
    public void test_4() {
        int[][] edges = {{1, 0, 2}, {1, 2, 3}, {2, 0, 3}, {2, 1, 3}};
        assertEquals(4, maxNumEdgesToRemove(edges));
    }
}

public class Solution {

    public int maxNumEdgesToRemove(int[][] edges) {
        if (edges.length == 0) return 0;
        int n = edges.length;
        boolean[] aliceReachable = new boolean[n];
        boolean[] bobReachable = new boolean[n];

        for (int i = 0; i < n; i++) {
            aliceReachable[i] = true;
            bobReachable[i] = true;
        }

        int countAlice = 0, countBob = 0;

        for (int[] edge : edges) {

            if (edge[0] == 1) {
                aliceReachable[edge[1]] = false;
                aliceReachable[edge[2]] = false;
                countAlice++;
            } else if (edge[0] == 2) {
                bobReachable[edge[1]] = false;
                bobReachable[edge[2]] = false;
                countBob++;
            }
        }

        int countBoth = 0;

        for (int i = 0; i < n; i++) {

            if (!aliceReachable[i] || !bobReachable[i]) {
                continue;
            } else {
                countBoth++;
            }
        }

        return Math.max(countAlice, countBob) - countBoth;
    }
}