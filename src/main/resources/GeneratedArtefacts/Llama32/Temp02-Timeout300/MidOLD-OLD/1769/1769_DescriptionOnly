package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;

public class 1769_DescriptionOnly {

    @Test
    public void test1() {
        int[] result = minOperationsToMakeValid("00110011");
        int[] expected = {0, 2, 1, 1, 2, 2, 2, 1};
        assertArrayEquals(expected, result);
    }

    @Test
    public void test2() {
        int[] result = minOperationsToMakeValid("00001111");
        int[] expected = {0, 0, 0, 0, 0, 0, 0, 0};
        assertArrayEquals(expected, result);
    }

    @Test
    public void test3() {
        int[] result = minOperationsToMakeValid("11111111");
        int[] expected = {6, 5, 4, 3, 2, 1, 0, 0};
        assertArrayEquals(expected, result);
    }

    @Test
    public void test4() {
        int[] result = minOperationsToMakeValid("00000000");
        int[] expected = {0, 0, 0, 0, 0, 0, 0, 0};
        assertArrayEquals(expected, result);
    }

    @Test
    public void test5() {
        int[] result = minOperationsToMakeValid("10101010");
        int[] expected = {4, 3, 2, 1, 0, 1, 2, 3};
        assertArrayEquals(expected, result);
    }
}

int[] minOperationsToMakeValid(String boxes) {
    int n = boxes.length();
    int[] answer = new int[n];
    for (int i = 0; i < n; i++) {
        if (boxes.charAt(i) == '1') {
            int count = 0;
            for (int j = i - 1; j <= i + 1 && j >= 0; j++) {
                if (boxes.charAt(j) == '1')
                    count++;
            }
            answer[i] = count;
        } else {
            answer[i] = 0;
        }
    }
    return answer;
}