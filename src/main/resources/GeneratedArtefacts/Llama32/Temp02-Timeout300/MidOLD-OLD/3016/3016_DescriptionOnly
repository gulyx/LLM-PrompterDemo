package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.assertEquals;
import java.util.HashMap;
import java.util.Map;

public class 3016_DescriptionOnly {

    @Test
    public void test1() {
        String word = "a";
        int expected = 1;
        assertEquals(expected, minPushes(word));
    }

    @Test
    public void test2() {
        String word = "ab";
        int expected = 2;
        assertEquals(expected, minPushes(word));
    }

    @Test
    public void test3() {
        String word = "abc";
        int expected = 3;
        assertEquals(expected, minPushes(word));
    }

    @Test
    public void test4() {
        String word = "aabbcc";
        int expected = 6;
        assertEquals(expected, minPushes(word));
    }

    @Test
    public void test5() {
        String word = "abcdefghijklmnopqrstuvwxyz";
        int expected = 26;
        assertEquals(expected, minPushes(word));
    }
}

public class Solution {

    public int minPushes(String word) {
        Map<Character, Integer> map = new HashMap<>();
        for (int i = 0; i < 10; i++) {
            StringBuilder sb = new StringBuilder();
            for (char c = 'a'; c <= 'z'; c++) {
                if (i == 0 || i == 9) {
                    sb.append(c);
                } else if (i % 3 == 0) {
                    sb.append(c);
                }
            }
            map.put(sb.charAt(0), i);
        }

        int res = 0;
        for (char c : word.toCharArray()) {
            res += map.getOrDefault(c, 1);
        }
        return res;
    }
}