package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;

public class 2221_DescriptionOnly {

    @Test
    public void testTriangularSum_SingleElement() {
        int[] nums = {5};
        assertEquals(5, triangularSum(nums));
    }

    @Test
    public void testTriangularSum_TwoElements() {
        int[] nums = {2, 4};
        assertEquals(6, triangularSum(nums));
    }

    @Test
    public void testTriangularSum_MultipleElements() {
        int[] nums = {1, 3, 5, 7};
        assertEquals(8, triangularSum(nums));
    }

    @Test
    public void testTriangularSum_LargeNumbers() {
        int[] nums = {9, 8, 7, 6, 5};
        assertEquals(4, triangularSum(nums));
    }

    @Test
    public void testTriangularSum_CyclicPattern() {
        int[] nums = {1, 2, 3, 4, 5};
        assertEquals(5, triangularSum(nums));
    }
}

public class Solution {

    public int triangularSum(int[] nums) {
        if (nums.length == 1) return nums[0];
        int n = nums.length;
        while (n > 1) {
            int[] newNums = new int[n - 1];
            for (int i = 0; i < n - 1; i++) {
                newNums[i] = (nums[i] + nums[i + 1]) % 10;
            }
            nums = newNums;
            n--;
        }
        return nums[0];
    }
}