package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;
public class 1442_DescriptionOnly {

    @Test
    public void test_1() {
        int[] nums = {1, 3, 5, 7};
        assertEquals(4, findTriplets(nums));
    }

    @Test
    public void test_2() {
        int[] nums = {1, 2, 3, 4, 5, 6, 7, 8, 9};
        assertEquals(0, findTriplets(nums));
    }

    @Test
    public void test_3() {
        int[] nums = {10, 20, 30, 40, 50, 60, 70, 80, 90};
        assertEquals(0, findTriplets(nums));
    }

    @Test
    public void test_4() {
        int[] nums = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
        assertEquals(0, findTriplets(nums));
    }

    @Test
    public void test_5() {
        int[] nums = {1, 1, 1, 1, 1, 1, 1, 1, 1, 1};
        assertEquals(9, findTriplets(nums));
    }

    private int findTriplets(int[] nums) {
        int n = nums.length;
        int count = 0;
        for (int i = 0; i < n - 2; i++) {
            for (int j = i + 1; j < n - 1; j++) {
                for (int k = j + 1; k < n; k++) {
                    if ((nums[i] ^ nums[j]) == (nums[k] ^ nums[j])) count++;
                }
            }
        }
        return count;
    }
}