package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.assertEquals;
import java.util.*;

public class 2125_DescriptionOnly {

    @Test
    public void test1() {
        String[] bank = {"0000", "1111"};
        int expected = 2;
        assertEquals(expected, countLaserBeams(bank));
    }

    @Test
    public void test2() {
        String[] bank = {"00111", "11111", "11111", "11111"};
        int expected = 4;
        assertEquals(expected, countLaserBeams(bank));
    }

    @Test
    public void test3() {
        String[] bank = {"0000", "0000", "1111", "1111"};
        int expected = 2;
        assertEquals(expected, countLaserBeams(bank));
    }

    @Test
    public void test4() {
        String[] bank = {"00000", "00000", "00000", "11111"};
        int expected = 0;
        assertEquals(expected, countLaserBeams(bank));
    }

    @Test
    public void test5() {
        String[] bank = {"00000", "00000", "00000", "00000"};
        int expected = 6;
        assertEquals(expected, countLaserBeams(bank));
    }
}

public class Solution {

    public int countLaserBeams(String[][] bank) {
        int m = bank.length;
        int n = bank[0].length;
        boolean[] row = new boolean[m];
        int beams = 0;

        for (int i = 0; i < m; i++) {
            if (bank[i][0] == '1') {
                row[i] = true;
            }
        }

        for (int j = 0; j < n; j++) {
            boolean[] col = new boolean[m];
            int count = 0;

            for (int i = 0; i < m; i++) {
                if (bank[i][j] == '1') {
                    col[i] = true;
                    if (count > 0) {
                        beams++;
                    }
                    count++;
                } else {
                    count = 0;
                }
            }

            for (int i = 0; i < m; i++) {
                if (row[i] && col[i]) {
                    return -1;
                }
            }
        }

        return beams;
    }
}