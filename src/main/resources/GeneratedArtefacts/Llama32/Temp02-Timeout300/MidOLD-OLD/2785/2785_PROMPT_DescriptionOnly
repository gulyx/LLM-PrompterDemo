As a professional Software Tester, generate a complete Junit class test file (name the class as :'2785_DescriptionOnly', and use as first line the declaration: 'package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen') with 5 different JUnit tests for the following description in natural language. Emit only the Java code, without any other tag or text. Here is the description: 
Given a 0-indexed string "s", permute "s" to get a new string "t" such that:

- All consonants remain in their original places. More formally, if there is an index "i" with "0 <= i < s.length" such that "s[i]" is a consonant, then "t[i] = s[i]".
- The vowels must be sorted in the nondecreasing order of their ASCII values. More formally, for pairs of indices "i", "j" with "0 <= i < j < s.length" such that "s[i]" and "s[j]" are vowels, then "t[i]" must not have a higher ASCII value than "t[j]".
Return the resulting string.

The vowels are "'a'", "'e'", "'i'", "'o'", and "'u'", and they can appear in lowercase or uppercase. Consonants comprise all letters that are not vowels.