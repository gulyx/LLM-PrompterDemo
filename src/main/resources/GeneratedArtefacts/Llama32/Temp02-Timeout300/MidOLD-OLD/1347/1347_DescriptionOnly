```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.assertEquals;
import java.util.Arrays;

public class DescriptionOnly {

    @Test
    public void testAnagramSteps() {
        String s = "abc";
        String t = "bac";
        int expected = 1;
        assertEquals(expected, minStepsToAnagram(s, t));
    }

    @Test
    public void testNoCommonChars() {
        String s = "abc";
        String t = "def";
        int expected = 3;
        assertEquals(expected, minStepsToAnagram(s, t));
    }

    @Test
    public void testAllSameChars() {
        String s = "aaa";
        String t = "aaa";
        int expected = 0;
        assertEquals(expected, minStepsToAnagram(s, t));
    }

    @Test
    public void testLongerStringT() {
        String s = "abc";
        String t = "bacd";
        int expected = 2;
        assertEquals(expected, minStepsToAnagram(s, t));
    }

    @Test
    public void testNoSolution() {
        String s = "abc";
        String t = "abcd";
        int expected = -1;
        assertEquals(expected, minStepsToAnagram(s, t));
    }
}

public class Main {

    public static int minStepsToAnagram(String s, String t) {
        if (s.length() != t.length()) return -1;

        int[] countS = new int[26];
        int[] countT = new int[26];

        for (char c : s.toCharArray()) {
            countS[c - 'a']++;
        }

        for (char c : t.toCharArray()) {
            countT[c - 'a']++;
        }

        int steps = 0;
        for (int i = 0; i < 26; i++) {
            if (countS[i] != countT[i]) {
                steps += Math.abs(countS[i] - countT[i]);
            }
        }

        return steps / 2;
    }
}
```