package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;

public class 2997_DescriptionOnly {

    @Test
    public void test1() {
        int[] nums = {0, 1};
        int k = 1;
        assertEquals(2, minOperations(nums, k));
    }

    @Test
    public void test2() {
        int[] nums = {0, 3, 5, 8};
        int k = 6;
        assertEquals(4, minOperations(nums, k));
    }

    @Test
    public void test3() {
        int[] nums = {1, 2, 3, 4};
        int k = 0;
        assertEquals(0, minOperations(nums, k));
    }

    @Test
    public void test4() {
        int[] nums = {5, 6, 7, 8};
        int k = 4;
        assertEquals(2, minOperations(nums, k));
    }

    @Test
    public void test5() {
        int[] nums = {0, 1, 3, 4};
        int k = 2;
        assertEquals(2, minOperations(nums, k));
    }
}

public class Solution {

    public int minOperations(int[] nums, int k) {
        int xor = 0;
        for (int num : nums) {
            xor ^= num;
        }

        if ((xor & k) == k) return 0;

        int target = xor ^ k;
        int count = 0;
        while (target > 0) {
            count += target & 1;
            target >>= 1;
        }
        return count;
    }
}