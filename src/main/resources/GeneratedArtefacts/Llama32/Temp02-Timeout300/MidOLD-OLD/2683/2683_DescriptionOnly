package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;

public class 2683_DescriptionOnly {

    @Test
    public void test_1() {
        int[] derived = {2, 1, 3};
        assertTrue(isValid(derived));
    }

    @Test
    public void test_2() {
        int[] derived = {0, 1, 2};
        assertFalse(isValid(derived));
    }

    @Test
    public void test_3() {
        int[] derived = {1, 1, 1};
        assertTrue(isValid(derived));
    }

    @Test
    public void test_4() {
        int[] derived = {0, 0, 0};
        assertTrue(isValid(derived));
    }

    @Test
    public void test_5() {
        int[] derived = {2, 1, 0};
        assertFalse(isValid(derived));
    }
    
    private boolean isValid(int[] derived) {
        for (int i = 0; i < derived.length - 1; i++) {
            if ((derived[i] ^ derived[i + 1]) != 1 && (derived[i] ^ derived[0]) != 1) {
                return false;
            }
        }
        return true;
    }
}