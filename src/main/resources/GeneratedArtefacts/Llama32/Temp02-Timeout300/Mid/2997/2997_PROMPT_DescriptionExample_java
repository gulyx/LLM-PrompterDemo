As a professional Software Engineer, generate a complete Java class file (name the class as :'Solution', and use as first line the declaration: 'package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.2997;') for the following description in natural language with examples. Specifically below the description, each example is introduced by the keyword[--Example XX--] (where XX is a number), and it is composed by an input tuple and an expected output. Emit only the Java code, without any other tag or text.  Here is the description: 
You are given a 0-indexed integer array "nums" and a positive integer "k".

You can apply the following operation on the array any number of times:

* Choose any element of the array and flip a bit in its binary representation. Flipping a bit means changing a "0" to "1" or vice versa.

Return the minimum number of operations required to make the bitwise "XOR" of all elements of the final array equal to "k".

Note that you can flip leading zero bits in the binary representation of elements. For example, for the number "(101)_2" you can flip the fourth bit and obtain "(1101)_2".

Constraints:

* "1 <= nums.length <= 10^5"
* "0 <= nums[i] <= 10^6"
* "0 <= k <= 10^6"
[--Example 1--]
Input: nums = [2,1,3,4], k = 1
Output: 2
[--Example 2--]
Input: nums = [2,0,2,0], k = 0
Output: 0