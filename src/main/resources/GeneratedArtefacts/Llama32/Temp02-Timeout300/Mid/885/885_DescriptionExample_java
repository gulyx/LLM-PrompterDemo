package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.885;

import java.util.*;

public class Solution {
    public int[][] spiralMatrix(int rows, int cols, int rStart, int cStart) {
        List<int[]> result = new ArrayList<>();
        int[] directions = {0, 1, 0, -1, 0};
        int dirIndex = 0;
        while (result.size() < rows * cols) {
            for (int i = 0; i < cols && result.size() < rows * cols; i++) {
                result.add(new int[]{rStart + i, cStart});
            }
            rStart += directions[dirIndex];
            if (rStart >= 1 && rStart <= rows - 1 && cStart >= 1 && cStart <= cols - 1) {
                result.add(new int[]{rStart, cStart + directions[dirIndex]});
            } else {
                dirIndex = (dirIndex + 1) % 4;
                rStart += directions[dirIndex];
                if (rStart >= 1 && rStart <= rows - 1 && cStart >= 1 && cStart <= cols - 1) {
                    result.add(new int[]{rStart, cStart + directions[dirIndex]});
                }
            }
        }
        return result.toArray(new int[0][]);
    }

    public static void main(String[] args) {
        Solution solution = new Solution();
        int[][] result1 = solution.spiralMatrix(1, 4, 0, 0);
        for (int[] row : result1) {
            System.out.println(Arrays.toString(row));
        }
        int[][] result2 = solution.spiralMatrix(5, 6, 1, 4);
        for (int[] row : result2) {
            System.out.println(Arrays.toString(row));
        }
    }
}