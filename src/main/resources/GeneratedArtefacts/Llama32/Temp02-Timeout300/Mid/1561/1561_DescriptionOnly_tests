package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.assertEquals;
import java.util.Arrays;

public class 1561_DescriptionOnlyTest {

    @Test
    public void test_3n_piles_with_equal_coins() {
        int[] piles = {2, 7, 12};
        assertEquals(2 + 7, maxCoins(piles));
    }

    @Test
    public void test_3n_piles_with_large_coins() {
        int[] piles = {1, 1000, 2000};
        assertEquals(1000 + 2000, maxCoins(piles));
    }

    @Test
    public void test_3n_piles_with_small_coins() {
        int[] piles = {1, 2, 3};
        assertEquals(1 + 2, maxCoins(piles));
    }

    @Test
    public void test_3n_piles_with_large_and_small_coins() {
        int[] piles = {1000, 2, 12};
        assertEquals(1000 + 2, maxCoins(piles));
    }

    @Test
    public void test_3n_piles_with_all_equal_coins() {
        int[] piles = {1, 1, 1};
        assertEquals(1, maxCoins(piles));
    }
}

public class Solution {

    public int maxCoins(int[] piles) {
        int n = piles.length;
        int count = (n - 1) / 3 * 2;

        for (int i = 0; i < count; i++) {
            if ((piles[i] + piles[n - i - 1]) % 3 != 0) {
                return 0;
            }
        }

        int sum = 0;
        for (int i = 0; i < n / 2; i++) {
            sum += piles[2 * i];
        }

        return sum;
    }
}