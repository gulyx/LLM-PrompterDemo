package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;

public class '78_DescriptionOnly' {

    @Test
    public void testPowerSet_EmptyArray_ReturnsEmptyList() {
        int[] nums = {};
        List<List<Integer>> result = powerSet(nums);
        assertTrue(result.isEmpty());
    }

    @Test
    public void testPowerSet_SingleElementArray_ReturnsTwoSubsets() {
        int[] nums = {1};
        List<List<Integer>> result = powerSet(nums);
        assertEquals(2, result.size());
        assertTrue(result.contains(List.of()));
        assertTrue(result.contains(List.of(1)));
    }

    @Test
    public void testPowerSet_MultiElementArray_ReturnsCorrectSubsets() {
        int[] nums = {1, 2, 3};
        List<List<Integer>> result = powerSet(nums);
        assertEquals(8, result.size());
        assertTrue(result.contains(List.of()));
        assertTrue(result.contains(List.of(1)));
        assertTrue(result.contains(List.of(2)));
        assertTrue(result.contains(List.of(3)));
        assertTrue(result.contains(List.of(1, 2)));
        assertTrue(result.contains(List.of(1, 3)));
        assertTrue(result.contains(List.of(2, 3)));
        assertTrue(result.contains(List.of(1, 2, 3)));
    }

    @Test
    public void testPowerSet_NullArray_ThrowsNullPointerException() {
        int[] nums = null;
        try {
            powerSet(nums);
            fail("Expected NullPointerException");
        } catch (NullPointerException e) {
            // expected
        }
    }

    @Test
    public void testPowerSet_DuplicateElements_ReturnsCorrectSubsets() {
        int[] nums = {1, 2, 2};
        List<List<Integer>> result = powerSet(nums);
        assertEquals(4, result.size());
        assertTrue(result.contains(List.of()));
        assertTrue(result.contains(List.of(1)));
        assertTrue(result.contains(List.of(2)));
        assertTrue(result.contains(List.of(1, 2)));
    }
}