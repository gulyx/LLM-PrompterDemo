As a professional Software Tester, generate a complete Junit class test file (name the class as :'1557_DescriptionExampleTest', and use as first line the declaration: 'package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen') with 5 different JUnit tests for the following description in natural language with examples. Specifically below the description, each example is introduced by the keyword [--Example XX--] (where XX is a number), and it is composed by an input tuple and an expected output. Emit only the Java code, without any other tag or text.  Here is the description: 
Given a directed acyclic graph, with "n" vertices numbered from "0" to "n-1", and an array "edges" where "edges[i] = [fromi, toi]" represents a directed edge from node "fromi" to node "toi".

Find the smallest set of vertices from which all nodes in the graph are reachable. It's guaranteed that a unique solution exists.

Notice that you can return the vertices in any order.
[--Example 1--]
Input: n = 6, edges = [[0,1],[0,2],[2,5],[3,4],[4,2]]
Output: [0,3]
[--Example 2--]
Input: n = 5, edges = [[0,1],[2,1],[3,1],[1,4],[2,4]]
Output: [0,2,3]