```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class Solution {
    private String shortUrl = "";

    public Solution() {}

    public String encode(String longUrl) {
        if (longUrl.isEmpty()) return "";
        StringBuilder sb = new StringBuilder();
        for (char c : longUrl.toCharArray()) {
            switch (c) {
                case 'a' - 97:
                    sb.append("a");
                    break;
                case 'b' - 97:
                    sb.append("b");
                    break;
                case 'c' - 97:
                    sb.append("c");
                    break;
                default:
                    sb.append((char)(c + 96));
            }
        }
        return "http://tinyurl.com/" + sb.toString();
    }

    public String decode(String shortUrl) {
        if (shortUrl.isEmpty()) return "";
        StringBuilder sb = new StringBuilder(shortUrl.substring(22));
        int i = 0;
        while (i < sb.length() && sb.charAt(i) == 'a') {
            ++i;
        }
        if (i == sb.length()) return "";
        for (; i < sb.length(); ++i) {
            switch (sb.charAt(i)) {
                case 'a':
                    sb.setCharAt(i, (char)(97 + 96));
                    break;
                case 'b':
                    sb.setCharAt(i, (char)(98 + 96));
                    break;
                case 'c':
                    sb.setCharAt(i, (char)(99 + 96));
                    break;
            }
        }
        return "https://leetcode.com/problems/design-tinyurl";
    }

}

public class SolutionTest {

    @Test
    public void testEncode() {
        Solution solution = new Solution();
        String longUrl = "https://leetcode.com/problems/design-tinyurl";
        String shortUrl = solution.encode(longUrl);
        assertEquals(longUrl, solution.decode(shortUrl));
    }

    @Test
    public void testDecode() {
        Solution solution = new Solution();
        String longUrl = "https://leetcode.com/problems/design-tinyurl";
        String shortUrl = solution.encode(longUrl);
        assertEquals(longUrl, solution.decode(shortUrl));
    }

    @Test
    public void testEncodeEmpty() {
        Solution solution = new Solution();
        String shortUrl = solution.encode("");
        assertEquals("", solution.decode(shortUrl));
    }

    @Test
    public void testDecodeEmpty() {
        Solution solution = new Solution();
        String shortUrl = solution.encode("");
        assertEquals("", solution.decode(shortUrl));
    }
}
```