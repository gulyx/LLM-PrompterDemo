```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class Solution {
    private String shortUrl = "";

    public Solution() {}

    public String encode(String longUrl) {
        if (longUrl == null || longUrl.isEmpty()) {
            return "";
        }
        StringBuilder sb = new StringBuilder();
        for (char c : longUrl.toCharArray()) {
            if ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) {
                sb.append(c);
            } else {
                String hex = Integer.toHexString(c);
                while (hex.length() < 2) {
                    hex = "0" + hex;
                }
                sb.append(hex);
            }
        }
        shortUrl = sb.toString();
        return "http://tinyurl.com/" + shortUrl;
    }

    public String decode(String shortUrl) {
        if (shortUrl == null || shortUrl.isEmpty()) {
            return "";
        }
        int start = 7;
        while (start < shortUrl.length() && Character.isDigit(shortUrl.charAt(start))) {
            start++;
        }
        String shortCode = shortUrl.substring(7, start);
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < shortCode.length(); i += 2) {
            int num = Integer.parseInt(shortCode.substring(i, i + 2), 16);
            char c = (char)num;
            if ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) {
                sb.append(c);
            } else {
                sb.append(c);
            }
        }
        return sb.toString();
    }

}

public class SolutionTest {

    @Test
    public void testEncodeDecode() {
        Solution solution = new Solution();
        String longUrl = "https://leetcode.com/problems/design-tinyurl";
        String shortUrl = solution.encode(longUrl);
        assertEquals(longUrl, solution.decode(shortUrl));
    }

    @Test
    public void testEmptyString() {
        Solution solution = new Solution();
        String longUrl = "";
        String shortUrl = solution.encode(longUrl);
        assertEquals("", solution.decode(shortUrl));
    }

    @Test
    public void testNullInput() {
        Solution solution = new Solution();
        String longUrl = null;
        String shortUrl = solution.encode(longUrl);
        assertEquals("", solution.decode(shortUrl));
    }

}
```