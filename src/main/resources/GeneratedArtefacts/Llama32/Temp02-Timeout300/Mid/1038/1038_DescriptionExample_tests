package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.1038;

import it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.1038.Solution;
import org.junit.Test;
import static org.junit.Assert.*;

public class 1038_DescriptionExample_testsTest {

    @Test
    public void testConvertBSTtoGreaterTree() {
        Solution solution = new Solution();
        TreeNode root = new TreeNode(4);
        root.left = new TreeNode(1);
        root.right = new TreeNode(6);
        root.left.left = new TreeNode(0);
        root.left.right = new TreeNode(2);
        root.right.left = new TreeNode(5);
        root.right.right = new TreeNode(7);

        solution.inorderTraversal(root);
    }

    @Test
    public void testConvertBSTtoGreaterTree_Example1() {
        Solution solution = new Solution();
        TreeNode root = new TreeNode(4);
        root.left = new TreeNode(1);
        root.right = new TreeNode(6);
        root.left.left = new TreeNode(0);
        root.left.right = new TreeNode(2);
        root.right.left = new TreeNode(5);
        root.right.right = new TreeNode(7);

        solution.inorderTraversal(root);
    }

    @Test
    public void testConvertBSTtoGreaterTree_Example2() {
        Solution solution = new Solution();
        TreeNode root = new TreeNode(0);
        root.right = new TreeNode(1);

        solution.inorderTraversal(root);
    }

    @Test
    public void testConvertBSTtoGreaterTree_EmptyTree() {
        Solution solution = new Solution();
        TreeNode root = null;

        solution.inorderTraversal(root);
    }

    @Test
    public void testConvertBSTtoGreaterTree_SingleNodeTree() {
        Solution solution = new Solution();
        TreeNode root = new TreeNode(1);

        solution.inorderTraversal(root);
    }
}