```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.Arrays;
import java.util.Random;

public class SolutionTest {

    @Test
    public void test1() {
        int[][] points = {{1, 1}, {2, 2}, {3, 3}};
        int[][] queries = {{2, 2, 1}, {3, 3, 1}, {4, 4, 1}};
        int[] answer = new Solution().numPointsInside(points, queries);
        assertEquals(1, answer[0]);
        assertEquals(1, answer[1]);
        assertEquals(0, answer[2]);
    }

    @Test
    public void test2() {
        int[][] points = {{1, 1}, {2, 2}, {3, 3}};
        int[][] queries = {{1, 1, 1}, {2, 2, 1}, {3, 3, 1}};
        int[] answer = new Solution().numPointsInside(points, queries);
        assertEquals(3, answer[0]);
        assertEquals(3, answer[1]);
        assertEquals(3, answer[2]);
    }

    @Test
    public void test3() {
        int[][] points = {{1, 1}, {2, 2}, {3, 3}};
        int[][] queries = {{5, 5, 1}, {6, 6, 1}, {7, 7, 1}};
        int[] answer = new Solution().numPointsInside(points, queries);
        assertEquals(0, answer[0]);
        assertEquals(0, answer[1]);
        assertEquals(0, answer[2]);
    }

    @Test
    public void test4() {
        int[][] points = {{1, 1}, {2, 2}, {3, 3}};
        int[][] queries = {{1, 1, 1}, {2, 2, 1}, {3, 3, 10}};
        int[] answer = new Solution().numPointsInside(points, queries);
        assertEquals(0, answer[0]);
        assertEquals(0, answer[1]);
        assertEquals(9, answer[2]);
    }

    @Test
    public void test5() {
        int[][] points = {{1, 1}, {2, 2}, {3, 3}};
        int[][] queries = {{1, 1, 1000000}, {2, 2, 1000000}, {3, 3, 1000000}};
        int[] answer = new Solution().numPointsInside(points, queries);
        assertEquals(0, answer[0]);
        assertEquals(0, answer[1]);
        assertEquals(0, answer[2]);
    }
}
```