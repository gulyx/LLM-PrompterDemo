As a professional Software Tester, generate a complete Junit test-class (name the test-class as: '1769_DescriptionExample_testsTest', and use as first line the declaration: 'package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.1769;') with 5 different JUnit tests for a Java class-under-test (you can assume the class-under-test is named: Solution, and import it as: 'import it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.1769.Solution;'). The class-under-test implements the following description in natural language with examples. Specifically below the description, each example is introduced by the keyword [--Example XX--] (where XX is a number), and it is composed by an input tuple and an expected output. Emit only the Java code, without any other tag or text.  Here is the description for the class-under-test: 
You have "n" boxes. You are given a binary string "boxes" of length n, where "boxes[i]" is "'0'" if the "ith" box is empty, and "'1'" if it contains one ball.

In one operation, you can move one ball from a box to an adjacent box. Box "i" is adjacent to box "j" if "abs(i - j) == 1". Note that after doing so, there may be more than one ball in some boxes.

Return an array "answer" of size "n", where "answer[i]" is the minimum number of operations needed to move all the balls to the "ith" box.

Each "answer[i]" is calculated considering the initial state of the boxes.
[--Example 1--]
Input: boxes = "110"
Output: [1,1,3]
[--Example 2--]
Input: boxes = "001011"
Output: [11,8,5,4,3,4]