```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;

public class DescriptionExample {

    @Test
    public void testMoveBalls() {
        String boxes = "110";
        int[] answer = moveBalls(boxes);
        assertArrayEquals(new int[]{1, 1, 3}, answer);
    }

    @Test
    public void testMoveBalls2() {
        String boxes = "001011";
        int[] answer = moveBalls(boxes);
        assertArrayEquals(new int[]{11, 8, 5, 4, 3, 4}, answer);
    }

    @Test
    public void testMoveBalls3() {
        String boxes = "0000";
        int[] answer = moveBalls(boxes);
        assertArrayEquals(new int[]{0, 0, 0, 0}, answer);
    }

    @Test
    public void testMoveBalls4() {
        String boxes = "1111";
        int[] answer = moveBalls(boxes);
        assertArrayEquals(new int[]{3, 3, 3, 3}, answer);
    }

    @Test
    public void testMoveBalls5() {
        String boxes = "10001";
        int[] answer = moveBalls(boxes);
        assertArrayEquals(new int[]{6, 4, 0, 1, 2, 5}, answer);
    }
}

public class Solution {

    public int[] moveBalls(String boxes) {
        int n = boxes.length();
        int[] answer = new int[n];
        for (int i = 0; i < n; i++) {
            if (boxes.charAt(i) == '1') {
                int count = 0;
                for (int j = i - 1; j <= i + 1; j++) {
                    if (j >= 0 && j < n && boxes.charAt(j) == '1') {
                        count++;
                    }
                }
                answer[i] = count;
            } else {
                answer[i] = 0;
            }
        }
        return answer;
    }
}
```