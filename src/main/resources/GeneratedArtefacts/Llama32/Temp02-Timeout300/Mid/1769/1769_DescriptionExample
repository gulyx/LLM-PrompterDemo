```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;

public class DescriptionExampleTest {

    @Test
    public void testOneBall() {
        int[] answer = new int[]{1, 1, 3};
        int n = 3;
        String boxes = "110";
        assertEquals(answer, minOperations(boxes, n));
    }

    @Test
    public void testMultipleBalls() {
        int[] answer = {11, 8, 5, 4, 3, 4};
        int n = 6;
        String boxes = "001011";
        assertEquals(answer, minOperations(boxes, n));
    }

    @Test
    public void testEmptyBoxes() {
        int[] answer = new int[]{0, 1, 2, 3, 4, 5};
        int n = 6;
        String boxes = "000000";
        assertEquals(answer, minOperations(boxes, n));
    }

    @Test
    public void testAllOnes() {
        int[] answer = new int[]{0, 1, 2, 3, 4, 5};
        int n = 6;
        String boxes = "111111";
        assertEquals(answer, minOperations(boxes, n));
    }

    @Test
    public void testAllZeros() {
        int[] answer = new int[]{5, 4, 3, 2, 1, 0};
        int n = 6;
        String boxes = "000000";
        assertEquals(answer, minOperations(boxes, n));
    }

}

public class Solution {

    public int[] minOperations(String boxes, int n) {
        int[] answer = new int[n];
        for (int i = 0; i < n; i++) {
            int count = 0;
            for (char c : boxes.toCharArray()) {
                if (c == '1') {
                    count += Math.abs(i - (n - 1) - (c - '0'));
                }
            }
            answer[i] = count;
        }
        return answer;
    }

}
```