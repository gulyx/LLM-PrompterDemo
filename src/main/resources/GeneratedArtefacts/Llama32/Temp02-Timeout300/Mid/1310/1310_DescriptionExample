```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;

public class DescriptionExample {

    @Test
    public void test1() {
        int[] arr = {1, 3, 4, 8};
        int[][] queries = {{0, 1}, {1, 2}, {0, 3}, {3, 3}};
        int[] answer = new DescriptionExample().getPrefixXORS(arr, queries);
        assertArrayEquals(new int[]{2, 7, 14, 8}, answer);
    }

    @Test
    public void test2() {
        int[] arr = {4, 8, 2, 10};
        int[][] queries = {{2, 3}, {1, 3}, {0, 0}, {0, 3}};
        int[] answer = new DescriptionExample().getPrefixXORS(arr, queries);
        assertArrayEquals(new int[]{8, 0, 4, 4}, answer);
    }

    @Test
    public void test3() {
        int[] arr = {1};
        int[][] queries = {{0, 0}};
        int[] answer = new DescriptionExample().getPrefixXORS(arr, queries);
        assertArrayEquals(new int[]{1}, answer);
    }

    @Test
    public void test4() {
        int[] arr = {1, 2, 3};
        int[][] queries = {{0, 1}};
        int[] answer = new DescriptionExample().getPrefixXORS(arr, queries);
        assertArrayEquals(new int[]{1}, answer);
    }

    @Test
    public void test5() {
        int[] arr = {1, 2, 3};
        int[][] queries = {{0, 2}};
        int[] answer = new DescriptionExample().getPrefixXORS(arr, queries);
        assertArrayEquals(new int[]{3}, answer);
    }

    private int[] getPrefixXORS(int[] arr, int[][] queries) {
        int n = arr.length;
        int m = queries.length;
        int[] ans = new int[m];
        int[] xor = new int[n + 1];

        for (int i = 0; i < n; i++) {
            xor[i + 1] = xor[i] ^ arr[i];
        }

        for (int i = 0; i < m; i++) {
            int left = queries[i][0], right = queries[i][1];
            ans[i] = xor[right + 1] ^ xor[left];
        }
        return ans;
    }
}
```