package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.1409;

public class Solution {
    public int[] processQueries(int[] queries, int m) {
        int[] result = new int[queries.length];
        int[] permutation = new int[m + 1];
        for (int i = 0; i <= m; i++) {
            permutation[i] = i;
        }
        for (int i = 0; i < queries.length; i++) {
            int index = Arrays.binarySearch(permutation, queries[i]);
            if (index < 0) {
                index = -index - 1;
            }
            result[i] = index;
            swap(permutation, index, 0);
        }
        return result;
    }

    private void swap(int[] array, int i, int j) {
        int temp = array[i];
        array[i] = array[j];
        array[j] = temp;
    }

}