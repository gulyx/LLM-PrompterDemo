As a professional Software Tester, generate a complete Junit class test file (name the class as :'3271_DescriptionExampleTest', and use as first line the declaration: 'package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen') with 5 different JUnit tests for the following description in natural language with examples. Specifically below the description, each example is introduced by the keyword [--Example XX--] (where XX is a number), and it is composed by an input tuple and an expected output. Emit only the Java code, without any other tag or text.  Here is the description: 
You are given a string "s" of length "n" and an integer "k", where "n" is a multiple of "k". Your task is to hash the string "s" into a new string called "result", which has a length of "n / k".

First, divide "s" into "n / k" substrings, each with a length of "k". Then, initialize "result" as an empty string.

For each substring in order from the beginning:

The hash value of a character is the index of that character in the English alphabet (e.g., "'a' → 0", "'b' → 1", ..., "'z' → 25").
Calculate the sum of all the hash values of the characters in the substring.
Find the remainder of this sum when divided by 26, which is called "hashedChar".
Identify the character in the English lowercase alphabet that corresponds to "hashedChar".
Append that character to the end of "result".
Return "result".

[--Example 1--]
Input: s = "abcd", k = 2
Output: "bf"
[--Example 2--]
Input: s = "mxz", k = 3
Output: "i"