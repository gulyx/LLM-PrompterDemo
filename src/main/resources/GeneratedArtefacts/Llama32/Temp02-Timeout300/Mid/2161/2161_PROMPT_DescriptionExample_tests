As a professional Software Tester, generate a complete Junit test-class (name the test-class as: '2161_DescriptionExample_testsTest', and use as first line the declaration: 'package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.2161;') with 5 different JUnit tests for a Java class-under-test (you can assume the class-under-test is named: Solution, and import it as: 'import it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.2161.Solution;'). The class-under-test implements the following description in natural language with examples. Specifically below the description, each example is introduced by the keyword [--Example XX--] (where XX is a number), and it is composed by an input tuple and an expected output. Emit only the Java code, without any other tag or text.  Here is the description for the class-under-test: 
You are given a "0-indexed" integer array "nums" and an integer "pivot". Rearrange "nums" such that the following conditions are satisfied:

Every element less than "pivot" appears "before" every element greater than "pivot".
Every element equal to "pivot" appears in "between" the elements less than and greater than "pivot".
The "relative order" of the elements less than "pivot" and the elements greater than "pivot" is maintained.
More formally, consider every "pi", "pj" where "pi" is the new position of the "ith" element and "pj" is the new position of the "jth" element. If "i < j" and both elements are smaller (or larger) than "pivot", then "pi < pj".
[--Example 1--]
Input: nums = [9,12,5,10,14,3,10], pivot = 10
Output: [9,5,3,10,10,12,14]
[--Example 2--]
Input: nums = [-3,4,3,2], pivot = 2
Output: [-3,2,4,3]