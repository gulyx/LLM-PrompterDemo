package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.1829;

import java.util.*;

public class Solution {
    public int[] maxXOR(int[] nums, int maximumBit) {
        int n = nums.length;
        List<Integer> prefixXor = new ArrayList<>();
        prefixXor.add(0);
        for (int num : nums) {
            prefixXor.add(prefixXor.get(prefixXor.size() - 1) ^ num);
        }
        int maxVal = (1 << maximumBit) - 1;
        List<Integer> answer = new ArrayList<>();
        for (int i = n - 1; i >= 0; i--) {
            int currXor = prefixXor.get(i + 1) ^ maxVal;
            answer.add(currXor);
        }
        return answer.stream().mapToInt(x -> x).toArray();
    }

    public static void main(String[] args) {
        Solution solution = new Solution();

        int[] nums1 = {0, 1, 1, 3};
        int maximumBit1 = 2;
        int[] result1 = solution.maxXOR(nums1, maximumBit1);
        System.out.println(Arrays.toString(result1));

        int[] nums2 = {2, 3, 4, 7};
        int maximumBit2 = 3;
        int[] result2 = solution.maxXOR(nums2, maximumBit2);
        System.out.println(Arrays.toString(result2));

        int[] nums3 = {0, 1, 2, 2, 5, 7};
        int maximumBit3 = 3;
        int[] result3 = solution.maxXOR(nums3, maximumBit3);
        System.out.println(Arrays.toString(result3));
    }
}