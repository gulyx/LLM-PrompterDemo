package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.assertEquals;
import java.util.Arrays;

public class DescriptionOnlyTest {

    @Test
    public void testExample1() {
        int[] arr = {2, 3, 5};
        assertEquals(0, findTriplets(arr));
    }

    @Test
    public void testExample2() {
        int[] arr = {1, 2, 3, 4, 5, 6, 7, 8, 9};
        assertEquals(0, findTriplets(arr));
    }

    @Test
    public void testExample3() {
        int[] arr = {10, 20, 30, 40, 50, 60, 70, 80, 90};
        assertEquals(0, findTriplets(arr));
    }

    @Test
    public void testExample4() {
        int[] arr = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
        assertEquals(0, findTriplets(arr));
    }

    @Test
    public void testExample5() {
        int[] arr = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12};
        assertEquals(0, findTriplets(arr));
    }

    private int findTriplets(int[] arr) {
        int n = arr.length;
        int count = 0;

        for (int i = 0; i < n - 2; i++) {
            for (int j = i + 1; j < n - 1; j++) {
                for (int k = j + 1; k < n; k++) {
                    if ((arr[i] ^ arr[i + 1] ^ ... ^ arr[j - 1]) == (arr[j] ^ arr[j + 1] ^ ... ^ arr[k])) {
                        count++;
                    }
                }
            }
        }

        return count;
    }
}