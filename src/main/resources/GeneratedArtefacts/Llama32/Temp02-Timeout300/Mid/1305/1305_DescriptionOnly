```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.*;

public class DescriptionOnly {

    @Test
    public void test1() {
        TreeNode root1 = new TreeNode(7);
        root1.left = new TreeNode(3);
        root1.right = new TreeNode(15);
        root1.left.left = new TreeNode(2);
        root1.left.right = new TreeNode(5);
        root1.right.left = new TreeNode(10);
        root1.right.right = new TreeNode(20);

        TreeNode root2 = new TreeNode(12);
        root2.left = new TreeNode(1);
        root2.right = new TreeNode(17);
        root2.left.left = new TreeNode(0);
        root2.left.right = new TreeNode(4);
        root2.right.left = new TreeNode(9);
        root2.right.right = new TreeNode(19);

        List<Integer> result = mergeTrees(root1, root2);
        assertEquals(Arrays.toString(result), "[0, 1, 2, 3, 4, 7, 9, 10, 12, 15, 17, 19, 20, 15]", Arrays.toString(result));
    }

    @Test
    public void test2() {
        TreeNode root1 = new TreeNode(5);
        root1.left = new TreeNode(3);
        root1.right = new TreeNode(8);

        TreeNode root2 = new TreeNode(9);
        root2.left = new TreeNode(4);
        root2.right = new TreeNode(10);

        List<Integer> result = mergeTrees(root1, root2);
        assertEquals(Arrays.toString(result), "[3, 4, 5, 7, 8, 9, 10]", Arrays.toString(result));
    }

    @Test
    public void test3() {
        TreeNode root1 = new TreeNode(0);

        TreeNode root2 = new TreeNode(1);

        List<Integer> result = mergeTrees(root1, root2);
        assertEquals(Arrays.toString(result), "[0, 1]", Arrays.toString(result));
    }

    @Test
    public void test4() {
        TreeNode root1 = new TreeNode(5);

        TreeNode root2 = new TreeNode(3);

        List<Integer> result = mergeTrees(root1, root2);
        assertEquals(Arrays.toString(result), "[3, 5]", Arrays.toString(result));
    }

    @Test
    public void test5() {
        TreeNode root1 = null;

        TreeNode root2 = new TreeNode(1);

        List<Integer> result = mergeTrees(root1, root2);
        assertEquals(Arrays.toString(result), "[1]", Arrays.toString(result));
    }
}

class TreeNode {
    int val;
    TreeNode left;
    TreeNode right;
    TreeNode(int x) { val = x; }
}
```