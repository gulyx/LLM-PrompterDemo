package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import java.util.List;
import java.util.ArrayList;

public class 237_DescriptionOnlyTest {

    public static void main(String[] args) {
        // Test 1
        ListNode head = new ListNode(1);
        head.next = new ListNode(2);
        head.next.next = new ListNode(3);
        head.next.next.next = new ListNode(4);
        head.next.next.next.next = new ListNode(5);

        ListNode node = head.next.next;
        head = deleteNode(head, node);

        // Test 2
        head = new ListNode(1);
        head.next = new ListNode(2);
        head.next.next = new ListNode(3);
        head.next.next.next = new ListNode(4);
        head.next.next.next.next = new ListNode(5);

        node = head.next;
        head = deleteNode(head, node);

        // Test 3
        head = new ListNode(1);
        head.next = new ListNode(2);
        head.next.next = new ListNode(3);
        head.next.next.next = new ListNode(4);
        head.next.next.next.next = new ListNode(5);

        node = head.next.next.next;
        head = deleteNode(head, node);

        // Test 4
        head = new ListNode(1);
        head.next = new ListNode(2);
        head.next.next = new ListNode(3);
        head.next.next.next = new ListNode(4);
        head.next.next.next.next = new ListNode(5);

        node = head;
        head = deleteNode(head, node);

        // Test 5
        head = new ListNode(1);
        head.next = new ListNode(2);
        head.next.next = new ListNode(3);
        head.next.next.next = new ListNode(4);
        head.next.next.next.next = new ListNode(5);

        node = head.next;
        head = deleteNode(head, node);
    }

    public static ListNode deleteNode(ListNode head, ListNode node) {
        if (head == null || head == node) return null;

        if (node.next == null) {
            head.next = null;
            return head;
        } else {
            ListNode current = head;
            while (current.next != node) {
                current = current.next;
            }
            current.next = node.next;
            return head;
        }
    }

}

class ListNode {
    int val;
    ListNode next;

    public ListNode(int x) {
        val = x;
    }
}