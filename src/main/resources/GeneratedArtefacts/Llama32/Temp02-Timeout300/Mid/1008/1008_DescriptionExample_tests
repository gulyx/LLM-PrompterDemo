package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.1008;

import it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.1008.Solution;
import org.junit.Test;
import static org.junit.Assert.*;

public class 1008_DescriptionExample_testsTest {

    @Test
    public void test1() {
        Solution solution = new Solution();
        int[] preorder = {8,5,1,7,10,12};
        TreeNode root = solution.bstFromPreorder(preorder);
        assertEquals(8, root.val);
        assertNotNull(root.left);
        assertNotNull(root.right);
        assertEquals(5, root.left.val);
        assertEquals(10, root.right.val);
        assertEquals(1, root.left.left.val);
        assertEquals(7, root.left.right.val);
        assertEquals(12, root.right.left.val);
    }

    @Test
    public void test2() {
        Solution solution = new Solution();
        int[] preorder = {1,3};
        TreeNode root = solution.bstFromPreorder(preorder);
        assertEquals(1, root.val);
        assertNotNull(root.left);
        assertNull(root.right);
        assertEquals(3, root.left.val);
    }

    @Test
    public void test3() {
        Solution solution = new Solution();
        int[] preorder = {8};
        TreeNode root = solution.bstFromPreorder(preorder);
        assertEquals(8, root.val);
        assertNull(root.left);
        assertNull(root.right);
    }

    @Test
    public void test4() {
        Solution solution = new Solution();
        int[] preorder = {1,2,3};
        TreeNode root = solution.bstFromPreorder(preorder);
        assertEquals(1, root.val);
        assertNotNull(root.left);
        assertNotNull(root.right);
        assertEquals(2, root.left.val);
        assertEquals(3, root.right.val);
    }

    @Test
    public void test5() {
        Solution solution = new Solution();
        int[] preorder = {8,7,6};
        TreeNode root = solution.bstFromPreorder(preorder);
        assertEquals(8, root.val);
        assertNotNull(root.left);
        assertNotNull(root.right);
        assertEquals(7, root.left.val);
        assertEquals(6, root.right.val);
    }
}