package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;

public class 1008_DescriptionExample {

    @Test
    public void test_1() {
        int[] preorder = {8,5,1,7,10,12};
        TreeNode root = new Solution().bstFromPreorder(preorder);
        TreeNode expectedRoot = new TreeNode(8);
        expectedRoot.left = new TreeNode(5);
        expectedRoot.right = new TreeNode(10);
        expectedRoot.left.left = new TreeNode(1);
        expectedRoot.left.right = new TreeNode(7);
        expectedRoot.right.right = new TreeNode(12);

        assertEquals(expectedRoot, root);
    }

    @Test
    public void test_2() {
        int[] preorder = {1,3};
        TreeNode root = new Solution().bstFromPreorder(preorder);
        TreeNode expectedRoot = new TreeNode(1);
        expectedRoot.right = new TreeNode(3);

        assertEquals(expectedRoot, root);
    }

    @Test
    public void test_3() {
        int[] preorder = {2,1,3};
        TreeNode root = new Solution().bstFromPreorder(preorder);
        TreeNode expectedRoot = new TreeNode(2);
        expectedRoot.left = new TreeNode(1);
        expectedRoot.right = new TreeNode(3);

        assertEquals(expectedRoot, root);
    }

    @Test
    public void test_4() {
        int[] preorder = {8};
        TreeNode root = new Solution().bstFromPreorder(preorder);
        assertNull(root.left);
        assertNull(root.right);

        assertEquals(root, root);
    }

    @Test
    public void test_5() {
        int[] preorder = {};
        TreeNode root = new Solution().bstFromPreorder(preorder);
        assertNull(root);

        assertEquals(root, root);
    }
}

class TreeNode {
    int val;
    TreeNode left;
    TreeNode right;
    TreeNode(int x) { val = x; }
}