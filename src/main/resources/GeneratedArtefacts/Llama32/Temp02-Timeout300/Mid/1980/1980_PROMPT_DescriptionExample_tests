As a professional Software Tester, generate a complete Junit test-class (name the test-class as: '1980_DescriptionExample_testsTest', and use as first line the declaration: 'package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.1980;') with 5 different JUnit tests for a Java class-under-test (you can assume the class-under-test is named: Solution, and import it as: 'import it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.1980.Solution;'). The class-under-test implements the following description in natural language with examples. Specifically below the description, each example is introduced by the keyword [--Example XX--] (where XX is a number), and it is composed by an input tuple and an expected output. Emit only the Java code, without any other tag or text.  Here is the description for the class-under-test: 
Given an array of strings "nums" containing "n" unique binary strings each of length "n", return a binary string of length "n" that does not appear in "nums". If there are multiple answers, you may return any of them.
[--Example 1--]
Input: nums = ["01","10"]
Output: "11"
[--Example 2--]
Input: nums = ["00","01"]
Output: "11"
[--Example 3--]
Input: nums = ["111","011","001"]
Output: "101"