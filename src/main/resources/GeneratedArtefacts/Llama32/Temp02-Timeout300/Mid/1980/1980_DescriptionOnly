```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;

public class DescriptionOnly {

    @Test
    public void testBinaryStringNotInArray() {
        String[] nums = {"101", "110", "111"};
        String result = findDifferentBinaryString(nums);
        assertEquals("100", result);
    }

    @Test
    public void testAllStringsSameLength() {
        String[] nums = {"000", "001", "010"};
        String result = findDifferentBinaryString(nums);
        assertEquals("011", result);
    }

    @Test
    public void testNoSolution() {
        String[] nums = {"111", "111", "111"};
        assertThrows(NullPointerException.class, () -> findDifferentBinaryString(nums));
    }

    @Test
    public void testEmptyArray() {
        String[] nums = {};
        String result = findDifferentBinaryString(nums);
        assertEquals("0", result);
    }

    @Test
    public void testSingleElementArray() {
        String[] nums = {"1"};
        String result = findDifferentBinaryString(nums);
        assertEquals("0", result);
    }
}

public class Solution {

    public String findDifferentBinaryString(String[] nums) {
        int n = nums[0].length();
        for (int i = 0; i < (1 << n); i++) {
            StringBuilder sb = new StringBuilder(Integer.toBinaryString(i));
            while (sb.length() != n) sb.insert(0, '0');
            if (!Arrays.stream(nums).anyMatch(s -> s.equals(sb.toString()))) {
                return sb.toString();
            }
        }
        throw new RuntimeException("No solution found");
    }
}
```