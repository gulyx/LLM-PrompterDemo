```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.assertArrayEquals;

public class DescriptionExample {

    @Test
    public void testMatrixCreation() {
        int[][] rowSum = {3, 8};
        int[][] colSum = {4, 7};
        int[][] result = new int[rowSum.length][colSum.length];
        for (int i = 0; i < rowSum.length; i++) {
            for (int j = 0; j < colSum.length; j++) {
                result[i][j] = Math.min(rowSum[i], colSum[j]);
            }
        }
        assertArrayEquals(new int[][]{{3, 0}, {1, 7}}, result);
    }

    @Test
    public void testMatrixCreation2() {
        int[][] rowSum = {5, 7, 10};
        int[][] colSum = {8, 6, 8};
        int[][] result = new int[rowSum.length][colSum.length];
        for (int i = 0; i < rowSum.length; i++) {
            for (int j = 0; j < colSum.length; j++) {
                result[i][j] = Math.min(rowSum[i], colSum[j]);
            }
        }
        assertArrayEquals(new int[][]{{0, 5, 0}, {6, 1, 0}, {2, 0, 8}}, result);
    }

    @Test
    public void testMatrixCreation3() {
        int[][] rowSum = {9, 11};
        int[][] colSum = {10, 12};
        int[][] result = new int[rowSum.length][colSum.length];
        for (int i = 0; i < rowSum.length; i++) {
            for (int j = 0; j < colSum.length; j++) {
                result[i][j] = Math.min(rowSum[i], colSum[j]);
            }
        }
        assertArrayEquals(new int[][]{{9, 0}, {1, 12}}, result);
    }

    @Test
    public void testMatrixCreation4() {
        int[][] rowSum = {2, 3};
        int[][] colSum = {5, 6};
        int[][] result = new int[rowSum.length][colSum.length];
        for (int i = 0; i < rowSum.length; i++) {
            for (int j = 0; j < colSum.length; j++) {
                result[i][j] = Math.min(rowSum[i], colSum[j]);
            }
        }
        assertArrayEquals(new int[][]{{2, 0}, {1, 6}}, result);
    }

    @Test
    public void testMatrixCreation5() {
        int[][] rowSum = {7, 8};
        int[][] colSum = {9, 10};
        int[][] result = new int[rowSum.length][colSum.length];
        for (int i = 0; i < rowSum.length; i++) {
            for (int j = 0; j < colSum.length; j++) {
                result[i][j] = Math.min(rowSum[i], colSum[j]);
            }
        }
        assertArrayEquals(new int[][]{{7, 0}, {1, 10}}, result);
    }

}
```