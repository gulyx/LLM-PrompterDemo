As a professional Software Tester, generate a complete Junit test-class (name the test-class as: '1605_DescriptionExample_testsTest', and use as first line the declaration: 'package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.1605;') with 5 different JUnit tests for a Java class-under-test (you can assume the class-under-test is named: Solution, and import it as: 'import it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.1605.Solution;'). The class-under-test implements the following description in natural language with examples. Specifically below the description, each example is introduced by the keyword [--Example XX--] (where XX is a number), and it is composed by an input tuple and an expected output. Emit only the Java code, without any other tag or text.  Here is the description for the class-under-test: 
You are given two arrays "rowSum" and "colSum" of non-negative integers where "rowSum[i]" is the sum of the elements in the "ith" row and "colSum[j]" is the sum of the elements of the "jth" column of a 2D matrix. In other words, you do not know the elements of the matrix, but you do know the sums of each row and column.

Find any matrix of non-negative integers of size "rowSum.length x colSum.length" that satisfies the "rowSum" and "colSum" requirements.

Return a 2D array representing any matrix that fulfills the requirements. It's guaranteed that at least one matrix that fulfills the requirements exists.

[--Example 1--]
Input: rowSum = [3,8], colSum = [4,7]
Output: [[3,0],[1,7]]
[--Example 2--]
Input: rowSum = [5,7,10], colSum = [8,6,8]
Output: [[0,5,0],[6,1,0],[2,0,8]]