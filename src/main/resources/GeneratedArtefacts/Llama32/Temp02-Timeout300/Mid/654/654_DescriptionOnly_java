package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.654;

public class Solution {
    public TreeNode constructMaximumBinaryTree(int[] nums) {
        if (nums.length == 0) return null;
        int maxIndex = findMaxIndex(nums);
        TreeNode root = new TreeNode(nums[maxIndex]);
        root.left = constructMaximumBinaryTree(java.util.Arrays.copyOfRange(nums, 0, maxIndex));
        root.right = constructMaximumBinaryTree(java.util.Arrays.copyOfRange(nums, maxIndex + 1, nums.length));
        return root;
    }

    private int findMaxIndex(int[] nums) {
        int maxIndex = 0;
        for (int i = 1; i < nums.length; i++) {
            if (nums[i] > nums[maxIndex]) {
                maxIndex = i;
            }
        }
        return maxIndex;
    }

    public class TreeNode {
        int val;
        TreeNode left;
        TreeNode right;
        TreeNode(int x) { val = x; }
    }
}