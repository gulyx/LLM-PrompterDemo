As a professional Software Tester, generate a complete Junit test-class (name the test-class as: '2221_DescriptionOnly_testsTest', and use as first line the declaration: 'package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.2221;') with 5 different JUnit tests for a Java class-under-test (you can assume the class-under-test is named: Solution, and import it as: 'import it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.2221.Solution;'). The class-under-test implements the following description in natural language. Emit only the Java code, without any other tag or text. Here is the description for the class-under-test: 
You are given a 0-indexed integer array "nums", where "nums[i]" is a digit between "0" and "9" (inclusive).

The triangular sum of "nums" is the value of the only element present in "nums" after the following process terminates:

1. Let "nums" comprise of "n" elements. If "n == 1", end the process. Otherwise, create a new 0-indexed integer array "newNums" of length "n - 1".

2. For each index "i", where "0 <= i < n - 1", assign the value of "newNums[i]" as "(nums[i] + nums[i+1]) % 10", where "%" denotes modulo operator.

3. Replace the array "nums" with "newNums".

4. Repeat the entire process starting from step 1.

Return the triangular sum of "nums".