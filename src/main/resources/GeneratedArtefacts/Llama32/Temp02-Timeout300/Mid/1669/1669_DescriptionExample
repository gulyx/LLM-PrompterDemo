```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;

public class DescriptionExample {

    @Test

    public void testRemoveNodes() {
        ListNode list1 = new ListNode(10);
        list1.next = new ListNode(1);
        list1.next.next = new ListNode(13);
        list1.next.next.next = new ListNode(6);
        list1.next.next.next.next = new ListNode(9);
        list1.next.next.next.next.next = new ListNode(5);

        ListNode list2 = new ListNode(1000000);
        list2.next = new ListNode(1000001);
        list2.next.next = new ListNode(1000002);

        ListNode result = removeNodes(list1, 3, 4, list2);
        while (result != null) {
            System.out.print(result.val + " ");
            result = result.next;
        }
    }

    @Test
    public void testRemoveNodes_2() {
        ListNode list1 = new ListNode(10);
        list1.next = new ListNode(1);
        list1.next.next = new ListNode(13);

        ListNode list2 = new ListNode(1000000);
        list2.next = new ListNode(1000001);

        ListNode result = removeNodes(list1, 3, 4, list2);
        while (result != null) {
            System.out.print(result.val + " ");
            result = result.next;
        }
    }

    @Test
    public void testRemoveNodes_3() {
        ListNode list1 = new ListNode(10);

        ListNode list2 = new ListNode(1000000);

        ListNode result = removeNodes(list1, 3, 4, list2);
        while (result != null) {
            System.out.print(result.val + " ");
            result = result.next;
        }
    }

    @Test
    public void testRemoveNodes_4() {
        ListNode list1 = new ListNode(10);

        ListNode list2 = new ListNode(1000000).next(new ListNode(1000001));

        ListNode result = removeNodes(list1, 3, 4, list2);
        while (result != null) {
            System.out.print(result.val + " ");
            result = result.next;
        }
    }

    @Test
    public void testRemoveNodes_5() {
        ListNode list1 = new ListNode(10);

        ListNode list2 = new ListNode(1000000).next(new ListNode(1000001)).next(new ListNode(1000002));

        ListNode result = removeNodes(list1, 3, 4, list2);
        while (result != null) {
            System.out.print(result.val + " ");
            result = result.next;
        }
    }

    public static ListNode removeNodes(ListNode l1, int a, int b, ListNode l2) {
        ListNode dummy = new ListNode(0);
        dummy.next = l1;

        ListNode prev = dummy;
        for (int i = 0; i < a - 1; i++) {
            prev = prev.next;
        }
        ListNode curr = prev.next;
        for (int i = 0; i <= b - a; i++) {
            ListNode nextNode = l2.next;
            ListNode node = new ListNode(nextNode.val);
            node.next = nextNode.next;
            curr.next = node;
            curr = curr.next;
        }
        return dummy.next;
    }

    public static class ListNode {
        int val;
        ListNode next;
        ListNode(int x) { val = x; }
    }
}
```