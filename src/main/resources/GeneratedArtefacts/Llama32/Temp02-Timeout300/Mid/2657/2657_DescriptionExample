```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;

public class DescriptionExampleTest {

    @Test
    public void testPrefixCommonArray() {
        int[] A = {1, 3, 2, 4};
        int[] B = {3, 1, 2, 4};
        int[] expected = {0, 2, 3, 4};
        int[] result = prefixCommonArray(A, B);
        assertArrayEquals(expected, result);
    }

    @Test
    public void testPrefixCommonArray_2() {
        int[] A = {2, 3, 1};
        int[] B = {3, 1, 2};
        int[] expected = {0, 1, 3};
        int[] result = prefixCommonArray(A, B);
        assertArrayEquals(expected, result);
    }

    @Test
    public void testPrefixCommonArray_3() {
        int[] A = {1, 2, 3};
        int[] B = {4, 5, 6};
        int[] expected = {0, 0, 0};
        int[] result = prefixCommonArray(A, B);
        assertArrayEquals(expected, result);
    }

    @Test
    public void testPrefixCommonArray_4() {
        int[] A = {1, 2, 3, 4};
        int[] B = {1, 2, 3, 4};
        int[] expected = {0, 1, 2, 3};
        int[] result = prefixCommonArray(A, B);
        assertArrayEquals(expected, result);
    }

    @Test
    public void testPrefixCommonArray_5() {
        int[] A = {};
        int[] B = {};
        int[] expected = {};
        int[] result = prefixCommonArray(A, B);
        assertArrayEquals(expected, result);
    }
}

public class Solution {

    public int[] prefixCommonArray(int[] A, int[] B) {
        int n = A.length;
        int m = B.length;
        if (n != m) return new int[0];
        int[] C = new int[n + 1];

        for (int i = 0; i < n; i++) {
            if (A[i] == B[i]) {
                C[A[i]]++;
            } else {
                break;
            }
        }

        for (int i = 1; i <= n; i++) {
            C[i] += C[i - 1];
        }

        return Arrays.copyOfRange(C, 0, n + 1);
    }
}
```