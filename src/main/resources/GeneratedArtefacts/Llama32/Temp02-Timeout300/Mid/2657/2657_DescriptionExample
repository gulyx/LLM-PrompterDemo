```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;

public class DescriptionExample {

    @Test
    public void testPrefixCommonArray() {
        int[] A = {1,3,2,4};
        int[] B = {3,1,2,4};
        int[] result = prefixCommonArray(A, B);
        assertArrayEquals(new int[]{0,2,3,4}, result);
    }

    @Test
    public void testPrefixCommonArray_2() {
        int[] A = {2,3,1};
        int[] B = {3,1,2};
        int[] result = prefixCommonArray(A, B);
        assertArrayEquals(new int[]{0,1,3}, result);
    }

    @Test
    public void testPrefixCommonArray_3() {
        int[] A = {1, 2, 3};
        int[] B = {4, 5, 6};
        int[] result = prefixCommonArray(A, B);
        assertArrayEquals(new int[]{0,0,0}, result);
    }

    @Test
    public void testPrefixCommonArray_4() {
        int[] A = {1, 2, 3, 4};
        int[] B = {1, 2, 3, 4};
        int[] result = prefixCommonArray(A, B);
        assertArrayEquals(new int[]{0,1,2,3}, result);
    }

    @Test
    public void testPrefixCommonArray_5() {
        int[] A = {1, 2, 3};
        int[] B = {};
        int[] result = prefixCommonArray(A, B);
        assertArrayEquals(new int[]{0,0,0}, result);
    }
}

public class Solution {

    public int[] prefixCommonArray(int[] A, int[] B) {
        int n = A.length;
        int[] C = new int[n];
        for (int i = 1; i <= n; i++) {
            boolean foundA = false, foundB = false;
            for (int j = 0; j < n; j++) {
                if (A[j] == i) foundA = true;
                if (B[j] == i) foundB = true;
            }
            C[i - 1] = foundA ? 1 : foundB ? 0 : 0;
        }
        return C;
    }
}
```