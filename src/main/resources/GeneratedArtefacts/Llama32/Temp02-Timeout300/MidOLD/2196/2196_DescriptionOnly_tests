package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;
public class 2196_DescriptionOnlyTest {

    @Test
    public void test1() {
        int[][] descriptions = {{0,1,1},{0,2,0}};
        Node root = new Solution().constructTree(descriptions);
        assertEquals(1, root.val);
        assertEquals(0, root.left.val);
        assertEquals(2, root.right.val);
    }

    @Test
    public void test2() {
        int[][] descriptions = {{0,1,1},{0,2,0},{1,3,1}};
        Node root = new Solution().constructTree(descriptions);
        assertEquals(1, root.val);
        assertEquals(0, root.left.val);
        assertEquals(2, root.right.val);
        assertEquals(3, root.left.left.val);
    }

    @Test
    public void test3() {
        int[][] descriptions = {{0,1,1},{0,2,0},{1,3,1},{2,4,0}};
        Node root = new Solution().constructTree(descriptions);
        assertEquals(1, root.val);
        assertEquals(0, root.left.val);
        assertEquals(2, root.right.val);
        assertEquals(3, root.left.left.val);
        assertEquals(4, root.right.left.val);
    }

    @Test
    public void test4() {
        int[][] descriptions = {{0,1,1},{0,2,0}};
        Node root = new Solution().constructTree(descriptions);
        assertEquals(1, root.val);
        assertEquals(0, root.left.val);
        assertEquals(2, root.right.val);
    }

    @Test
    public void test5() {
        int[][] descriptions = {{0,1,1},{0,2,0}};
        Node root = new Solution().constructTree(descriptions);
        assertEquals(1, root.val);
        assertEquals(0, root.left.val);
        assertEquals(2, root.right.val);
    }
}