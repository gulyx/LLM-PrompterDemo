```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;

public class DescriptionExampleTest {

    @Test
    public void testConstructBinaryTree() {
        int[][] descriptions = {{20,15,1},{20,17,0},{50,20,1},{50,80,0},{80,19,1}};
        Node root = Solution.constructBinaryTree(descriptions);
        assertEquals(50, root.val);
        assertEquals(20, root.left.val);
        assertEquals(80, root.right.val);
    }

    @Test
    public void testConstructBinaryTree2() {
        int[][] descriptions = {{1,2,1},{2,3,0},{3,4,1}};
        Node root = Solution.constructBinaryTree(descriptions);
        assertEquals(1, root.val);
        assertEquals(2, root.left.val);
        assertEquals(4, root.right.val);
    }

    @Test
    public void testConstructBinaryTree3() {
        int[][] descriptions = {{20,15,1},{20,17,0},{50,20,1},{50,80,0}};
        Node root = Solution.constructBinaryTree(descriptions);
        assertEquals(50, root.val);
        assertEquals(20, root.left.val);
        assertEquals(80, root.right.val);
    }

    @Test
    public void testConstructBinaryTree4() {
        int[][] descriptions = {{1,2,0},{2,3,1}};
        Node root = Solution.constructBinaryTree(descriptions);
        assertEquals(1, root.val);
        assertNull(root.left);
        assertEquals(3, root.right.val);
    }

    @Test
    public void testConstructBinaryTree5() {
        int[][] descriptions = {{20,15,0},{20,17,1}};
        Node root = Solution.constructBinaryTree(descriptions);
        assertEquals(20, root.val);
        assertNull(root.left);
        assertEquals(17, root.right.val);
    }
}

class Node {
    int val;
    Node left;
    Node right;

    public Node(int val) {
        this.val = val;
        this.left = null;
        this.right = null;
    }
}

public class Solution {

    public static Node constructBinaryTree(int[][] descriptions) {
        // implementation
    }
}
```