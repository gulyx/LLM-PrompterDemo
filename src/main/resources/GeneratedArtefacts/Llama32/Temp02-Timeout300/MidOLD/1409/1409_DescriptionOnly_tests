package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;

public class 1409_DescriptionOnlyTest {

    @Test
    public void test1() {
        int[] queries = {2, 7, 3};
        int[] result = new int[queries.length];
        for (int i = 0; i < queries.length; i++) {
            result[i] = findPosition(queries[i], queries);
        }
        assertArrayEquals(new int[]{4, 6, 1}, result);
    }

    @Test
    public void test2() {
        int[] queries = {5, 1, 3};
        int[] result = new int[queries.length];
        for (int i = 0; i < queries.length; i++) {
            result[i] = findPosition(queries[i], queries);
        }
        assertArrayEquals(new int[]{2, 0, 4}, result);
    }

    @Test
    public void test3() {
        int[] queries = {1, 5};
        int[] result = new int[queries.length];
        for (int i = 0; i < queries.length; i++) {
            result[i] = findPosition(queries[i], queries);
        }
        assertArrayEquals(new int[]{1, 4}, result);
    }

    @Test
    public void test4() {
        int[] queries = {2, 7, 3, 9};
        int[] result = new int[queries.length];
        for (int i = 0; i < queries.length; i++) {
            result[i] = findPosition(queries[i], queries);
        }
        assertArrayEquals(new int[]{4, 6, 1, 8}, result);
    }

    @Test
    public void test5() {
        int[] queries = {1, 2, 3};
        int[] result = new int[queries.length];
        for (int i = 0; i < queries.length; i++) {
            result[i] = findPosition(queries[i], queries);
        }
        assertArrayEquals(new int[]{1, 2, 3}, result);
    }

    private int findPosition(int num, int[] queries) {
        return Arrays.binarySearch(queries, num);
    }
}