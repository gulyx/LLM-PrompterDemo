```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;

public class 2181_DescriptionExampleTest {

    public ListNode mergeNodes(ListNode head) {
        ListNode dummy = new ListNode(0);
        dummy.next = head;
        ListNode prev = dummy;
        int sum = 0;
        for (ListNode cur = head; cur != null; cur = cur.next) {
            if (cur.val == 0 && prev.next != null) {
                prev.next.val += sum;
                if (cur.next != null) {
                    prev.next.next = cur.next;
                }
                prev = prev.next;
                sum = 0;
            } else {
                sum += cur.val;
            }
        }
        return dummy.next;
    }

    @Test
    public void testMergeNodes() {
        ListNode head = new ListNode(0);
        head.next = new ListNode(3);
        head.next.next = new ListNode(1);
        head.next.next.next = new ListNode(0);
        head.next.next.next.next = new ListNode(4);
        head.next.next.next.next.next = new ListNode(5);
        head.next.next.next.next.next.next = new ListNode(2);
        head.next.next.next.next.next.next.next = new ListNode(0);

        ListNode result = mergeNodes(head);
        ListNode expected = new ListNode(4);
        expected.next = new ListNode(11);
        assertEquals(expected, result);
    }

    @Test
    public void testMergeNodes_2() {
        ListNode head = new ListNode(0);
        head.next = new ListNode(1);
        head.next.next = new ListNode(0);
        head.next.next.next = new ListNode(3);
        head.next.next.next.next = new ListNode(0);
        head.next.next.next.next.next = new ListNode(2);
        head.next.next.next.next.next.next = new ListNode(2);

        ListNode result = mergeNodes(head);
        ListNode expected = new ListNode(1);
        expected.next = new ListNode(3);
        expected.next.next = new ListNode(4);
        assertEquals(expected, result);
    }

    @Test
    public void testMergeNodes_3() {
        ListNode head = new ListNode(0);
        head.next = new ListNode(0);
        head.next.next = new ListNode(1);

        ListNode result = mergeNodes(head);
        ListNode expected = new ListNode(1);
        assertEquals(expected, result);
    }

    @Test
    public void testMergeNodes_4() {
        ListNode head = new ListNode(0);
        head.next = new ListNode(0);
        head.next.next = new ListNode(0);

        ListNode result = mergeNodes(head);
        ListNode expected = null;
        assertEquals(expected, result);
    }

    @Test
    public void testMergeNodes_5() {
        ListNode head = new ListNode(0);
        head.next = new ListNode(0);
        head.next.next = new ListNode(0);
        head.next.next.next = new ListNode(0);

        ListNode result = mergeNodes(head);
        ListNode expected = null;
        assertEquals(expected, result);
    }
}
```