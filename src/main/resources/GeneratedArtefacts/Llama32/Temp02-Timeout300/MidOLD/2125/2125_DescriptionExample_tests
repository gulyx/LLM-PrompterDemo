```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class DescriptionExampleTest {

    @Test
    public void testLaserBeams() {
        String[][] bank = {{"011001","000000","010100","001000"}, {"000","111","000"}};
        int expected = 8;
        assertEquals(expected, laserBeams(bank));
    }

    @Test
    public void testNoLaserBeams() {
        String[][] bank = {{"000","111","000"}};
        int expected = 0;
        assertEquals(expected, laserBeams(bank));
    }

    @Test
    public void testSingleRow() {
        String[][] bank = {{"011001"}};
        int expected = 0;
        assertEquals(expected, laserBeams(bank));
    }

    @Test
    public void testEmptyBank() {
        String[][] bank = {};
        int expected = 0;
        assertEquals(expected, laserBeams(bank));
    }

    @Test
    public void testNoSecurityDevices() {
        String[][] bank = {{"000"}};
        int expected = 0;
        assertEquals(expected, laserBeams(bank));
    }
}

public class Solution {

    public int laserBeams(String[][] bank) {
        int m = bank.length;
        int n = bank[0].length;
        boolean[] row = new boolean[m];
        int count = 0;

        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                if (bank[i][j] == '1') {
                    row[i] = true;
                }
            }
        }

        for (int i = 0; i < m - 1; i++) {
            if (!row[i]) {
                int left = i + 1, right = m - 1;

                while (left <= right) {
                    if (row[left] || row[right]) {
                        break;
                    }
                    count++;
                    left++;
                    right--;
                }
            }
        }

        return count;
    }
}
```