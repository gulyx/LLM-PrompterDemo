```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class DescriptionExampleTest {

    @Test
    public void testTriangularSum_Example1() {
        int[] nums = {1, 2, 3, 4, 5};
        int expectedOutput = 8;
        int actualOutput = triangularSum(nums);
        assertEquals(expectedOutput, actualOutput);
    }

    @Test
    public void testTriangularSum_Example2() {
        int[] nums = {5};
        int expectedOutput = 5;
        int actualOutput = triangularSum(nums);
        assertEquals(expectedOutput, actualOutput);
    }

    @Test
    public void testTriangularSum_EmptyArray() {
        int[] nums = {};
        int expectedOutput = 0;
        int actualOutput = triangularSum(nums);
        assertEquals(expectedOutput, actualOutput);
    }

    @Test
    public void testTriangularSum_SingleElementArray() {
        int[] nums = {1};
        int expectedOutput = 1;
        int actualOutput = triangularSum(nums);
        assertEquals(expectedOutput, actualOutput);
    }

    @Test
    public void testTriangularSum_NullArray() {
        int[] nums = null;
        try {
            triangularSum(nums);
            fail("Expected NullPointerException");
        } catch (NullPointerException e) {
            // expected
        }
    }

    private int triangularSum(int[] nums) {
        if (nums == null || nums.length == 0) {
            return 0;
        }
        while (nums.length > 1) {
            int[] newNums = new int[nums.length - 1];
            for (int i = 0; i < nums.length - 1; i++) {
                newNums[i] = (nums[i] + nums[i + 1]) % 10;
            }
            nums = newNums;
        }
        return nums[0];
    }
}
```