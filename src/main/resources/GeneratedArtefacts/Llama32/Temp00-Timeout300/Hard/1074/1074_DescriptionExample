```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class DescriptionExample {

    @Test
    public void test1() {
        int[][] matrix = {{0,1,0},{1,1,1},{0,1,0}};
        long target = 0;
        assertEquals(4, numSubmatrices(matrix, target));
    }

    @Test
    public void test2() {
        int[][] matrix = {{1,-1},{-1,1}};
        long target = 0;
        assertEquals(5, numSubmatrices(matrix, target));
    }

    @Test
    public void test3() {
        int[][] matrix = {{904}};
        long target = 0;
        assertEquals(0, numSubmatrices(matrix, target));
    }

    @Test
    public void test4() {
        int[][] matrix = {{1,2},{3,4}};
        long target = 5;
        assertEquals(9, numSubmatrices(matrix, target));
    }

    @Test
    public void test5() {
        int[][] matrix = {{0,0},{0,0}};
        long target = 0;
        assertEquals(1, numSubmatrices(matrix, target));
    }
}

public class Solution {

    public int numSubmatrices(int[][] matrix, long target) {
        int rows = matrix.length;
        int cols = matrix[0].length;
        int count = 0;

        for (int row = 0; row < rows; row++) {
            for (int col = 0; col < cols; col++) {
                int sum = 0;
                for (int i = row; i < rows; i++) {
                    sum += matrix[i][col];
                    if (sum == target) count++;
                    else if (sum > target) break;
                }
            }
        }

        return count;
    }
}
```