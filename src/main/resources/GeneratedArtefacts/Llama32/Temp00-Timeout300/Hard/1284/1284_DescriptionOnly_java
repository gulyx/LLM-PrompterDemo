package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.1284;

public class Solution {
    public int minFlips(int[][] mat) {
        int rows = mat.length;
        int cols = mat[0].length;
        boolean[][] visited = new boolean[rows][cols];
        return helper(mat, 0, 0, rows, cols, visited);
    }

    private int helper(int[][] mat, int r, int c, int rows, int cols, boolean[][] visited) {
        if (r < 0 || r >= rows || c < 0 || c >= cols || visited[r][c] || mat[r][c] == 0)
            return 0;
        visited[r][c] = true;
        int res = 1 + helper(mat, r - 1, c, rows, cols, visited) + 
                   helper(mat, r + 1, c, rows, cols, visited) +
                   helper(mat, r, c - 1, rows, cols, visited) +
                   helper(mat, r, c + 1, rows, cols, visited);
        mat[r][c] = (int) Math.pow(-1, res);
        return res;
    }
}