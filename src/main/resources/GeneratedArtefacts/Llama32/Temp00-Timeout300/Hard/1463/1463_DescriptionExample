```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class Solution {

    public int cherryPickup(int[][] grid) {
        int rows = grid.length;
        int cols = grid[0].length;
        int[][][] dp = new int[rows][cols][cols];

        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < cols; j++) {
                for (int k = 0; k < cols; k++) {
                    if (i == rows - 1 && j == cols - 1) {
                        dp[i][j][k] = grid[i][j];
                    } else {
                        int max = Integer.MIN_VALUE;
                        for (int x = Math.max(0, i + 1); x <= rows - 1; x++) {
                            for (int y = Math.max(0, j - 1); y <= Math.min(cols - 1, k + 1); y++) {
                                max = Math.max(max, dp[x][y][k] + grid[i][j]);
                            }
                        }
                        dp[i][j][k] = max;
                    }
                }
            }
        }

        int result = Integer.MIN_VALUE;
        for (int j = 0; j < cols; j++) {
            for (int k = 0; k < cols; k++) {
                result = Math.max(result, dp[rows - 1][j][k]);
            }
        }

        return result;
    }

    @Test
    public void testCherryPickup() {
        int[][] grid1 = {{3,1,1},{2,5,1},{1,5,5},{2,1,1}};
        assertEquals(24, cherryPickup(grid1));

        int[][] grid2 = {{1,0,0,0,0,0,1},{2,0,0,0,0,3,0},{2,0,9,0,0,0,0},{0,3,0,5,4,0,0},{1,0,2,3,0,0,6}};
        assertEquals(28, cherryPickup(grid2));
    }
}
```