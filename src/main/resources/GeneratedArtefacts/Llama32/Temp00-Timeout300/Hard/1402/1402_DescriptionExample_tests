```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class DescriptionExampleTest {

    @Test
    public void testMaxLikeTimeCoefficient() {
        int[] satisfaction = {-1, -8, 0, 5, -9};
        assertEquals(14, maxLikeTimeCoefficient(satisfaction));
    }

    @Test
    public void testMaxLikeTimeCoefficient2() {
        int[] satisfaction = {4, 3, 2};
        assertEquals(20, maxLikeTimeCoefficient(satisfaction));
    }

    @Test
    public void testMaxLikeTimeCoefficient3() {
        int[] satisfaction = {-1, -4, -5};
        assertEquals(0, maxLikeTimeCoefficient(satisfaction));
    }

    @Test
    public void testMaxLikeTimeCoefficient4() {
        int[] satisfaction = {1, 2, 3, 4, 5};
        assertEquals(30, maxLikeTimeCoefficient(satisfaction));
    }

    @Test
    public void testMaxLikeTimeCoefficient5() {
        int[] satisfaction = {-10, -20, -30, -40, -50};
        assertEquals(-1500, maxLikeTimeCoefficient(satisfaction));
    }
}

public class Solution {

    public int maxLikeTimeCoefficient(int[] satisfaction) {
        int n = satisfaction.length;
        long[] dp = new long[n];
        for (int i = 0; i < n; i++) {
            if (i == 0) {
                dp[i] = satisfaction[i];
            } else {
                dp[i] = Math.max(dp[i - 1], dp[i - 1] + satisfaction[i] * (long) (i + 1));
            }
        }
        return (int) dp[n - 1];
    }
}
```