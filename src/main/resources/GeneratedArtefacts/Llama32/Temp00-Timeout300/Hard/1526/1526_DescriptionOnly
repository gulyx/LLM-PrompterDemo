package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;

public class DescriptionOnly {

    @Test
    public void testMinOperations() {
        int[] target = {1,2,3};
        int[] initial = new int[target.length];
        for (int i = 0; i < target.length; i++) {
            initial[i] = 0;
        }
        assertEquals(6, minOperations(target, initial));
    }

    @Test
    public void testMinOperationsZeroTarget() {
        int[] target = {};
        int[] initial = new int[target.length];
        for (int i = 0; i < target.length; i++) {
            initial[i] = 0;
        }
        assertEquals(0, minOperations(target, initial));
    }

    @Test
    public void testMinOperationsEqual() {
        int[] target = {1,2,3};
        int[] initial = new int[target.length];
        for (int i = 0; i < target.length; i++) {
            initial[i] = target[i];
        }
        assertEquals(0, minOperations(target, initial));
    }

    @Test
    public void testMinOperationsNegative() {
        int[] target = {-1,-2,-3};
        int[] initial = new int[target.length];
        for (int i = 0; i < target.length; i++) {
            initial[i] = 0;
        }
        assertEquals(6, minOperations(target, initial));
    }

    @Test
    public void testMinOperationsLarge() {
        int[] target = {1000000,2000000,3000000};
        int[] initial = new int[target.length];
        for (int i = 0; i < target.length; i++) {
            initial[i] = 0;
        }
        assertEquals(3000000, minOperations(target, initial));
    }

}