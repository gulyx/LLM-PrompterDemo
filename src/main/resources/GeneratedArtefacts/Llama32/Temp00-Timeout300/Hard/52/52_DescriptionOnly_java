package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.52;

public class Solution {
    public int totalNQueens(int n) {
        return solve(n, new boolean[n][n]);
    }

    private int solve(int n, boolean[][] board) {
        if (isSafe(board)) {
            return 1;
        }
        int count = 0;
        for (int i = 0; i < n; i++) {
            if (isSafe(board, i)) {
                board[i][0] = true;
                count += solve(n, board);
                board[i][0] = false;
            }
        }
        return count;
    }

    private boolean isSafe(boolean[][] board) {
        for (int i = 0; i < board.length; i++) {
            if (board[0][i]) {
                return false;
            }
            for (int j = 1; j < board.length; j++) {
                if (board[i][j] && i - j >= 0 && i + j < board.length) {
                    return false;
                }
            }
        }
        return true;
    }

    private boolean isSafe(boolean[][] board, int row) {
        for (int i = 0; i < board.length; i++) {
            if (board[row][i]) {
                return false;
            }
            for (int j = 1; j < board.length; j++) {
                if (board[row][i + j] && row - i - j >= 0) {
                    return false;
                }
                if (board[row][i - j] && row + i - j < board.length) {
                    return false;
                }
            }
        }
        return true;
    }
}