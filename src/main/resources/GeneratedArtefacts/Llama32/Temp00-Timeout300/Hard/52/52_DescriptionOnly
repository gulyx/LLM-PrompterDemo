```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.assertEquals;
import java.util.*;

public class Solution {

    public int totalNQueens(int n) {
        return solve(n, new boolean[n]);
    }

    private int solve(int n, boolean[] board) {
        if (isSafe(board)) {
            return 1 + solve(n, rotateRight(board));
        } else {
            return 0;
        }
    }

    private boolean isSafe(boolean[] board) {
        for (int i = 0; i < board.length; i++) {
            if (board[i]) {
                return false;
            }
        }
        int row = board.length - 1;
        int col = 0;
        while (row >= 0 && col < board.length) {
            if (board[row] || Math.abs(row - col) == Math.abs(board.length - 1 - col)) {
                return false;
            }
            row--;
            col++;
        }
        return true;
    }

    private boolean[] rotateRight(boolean[] board) {
        boolean[] rotated = new boolean[board.length];
        for (int i = 0; i < board.length; i++) {
            rotated[i] = board[board.length - 1 - i];
        }
        return rotated;
    }

    @Test
    public void testTotalNQueens_9() {
        assertEquals(92, Solution.totalNQueens(9));
    }

    @Test
    public void testTotalNQueens_4() {
        assertEquals(2, Solution.totalNQueens(4));
    }

    @Test
    public void testTotalNQueens_1() {
        assertEquals(1, Solution.totalNQueens(1));
    }

    @Test
    public void testTotalNQueens_8() {
        assertEquals(92, Solution.totalNQueens(8));
    }

    @Test
    public void testTotalNQueens_2() {
        assertEquals(0, Solution.totalNQueens(2));
    }
}
```