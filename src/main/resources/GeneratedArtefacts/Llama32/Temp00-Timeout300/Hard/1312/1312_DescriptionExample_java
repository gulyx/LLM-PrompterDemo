```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.1312;

public class Solution {
    public int minInsertions(String s) {
        int n = s.length();
        boolean[][] dp = new boolean[n + 1][n + 1];
        for (int i = 0; i <= n; i++) {
            dp[i][i] = true;
        }
        for (int len = 2; len <= n; len++) {
            for (int i = 0; i < n - len + 1; i++) {
                int j = i + len - 1;
                if (s.charAt(i) == s.charAt(j)) {
                    dp[i][j] = dp[i + 1][j - 1];
                } else {
                    dp[i][j] = Math.min(dp[i + 1][j], dp[i][j - 1]) + 1;
                }
            }
        }
        return dp[0][n - 1];
    }

    public static void main(String[] args) {
        Solution solution = new Solution();
        System.out.println(solution.minInsertions("zzazz")); // Output: 0
        System.out.println(solution.minInsertions("mbadm")); // Output: 2
        System.out.println(solution.minInsertions("leetcode")); // Output: 5
    }
}
```