package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.assertEquals;
import java.util.Arrays;

public class 732_DescriptionOnly {

    @Test
    public void test_0() {
        MyCalendarThree obj = new MyCalendarThree();
        obj.book(1,3);
        obj.book(2,4);
        obj.book(5,8);
        assertEquals(2, obj.book(7,10));
    }

    @Test
    public void test_1() {
        MyCalendarThree obj = new MyCalendarThree();
        obj.book(1,2);
        obj.book(2,3);
        obj.book(3,4);
        assertEquals(0, obj.book(5,6));
    }

    @Test
    public void test_2() {
        MyCalendarThree obj = new MyCalendarThree();
        obj.book(1,2);
        obj.book(2,3);
        obj.book(3,4);
        obj.book(1,2);
        assertEquals(0, obj.book(5,6));
    }

    @Test
    public void test_3() {
        MyCalendarThree obj = new MyCalendarThree();
        obj.book(1,2);
        obj.book(2,3);
        obj.book(3,4);
        obj.book(1,2);
        obj.book(5,6);
        assertEquals(0, obj.book(7,8));
    }

    @Test
    public void test_4() {
        MyCalendarThree obj = new MyCalendarThree();
        obj.book(1,2);
        obj.book(2,3);
        obj.book(3,4);
        obj.book(5,6);
        obj.book(7,8);
        assertEquals(0, obj.book(9,10));
    }
}

class MyCalendarThree {
    private int[][] events;

    public MyCalendarThree() {
        this.events = new int[0][2];
    }

    public void book(int startTime, int endTime) {
        int[] event = {startTime, endTime};
        addEvent(event);
    }

    private void addEvent(int[] event) {
        int n = events.length;
        for (int i = 0; i < n; i++) {
            if (event[1] > events[i][0]) {
                int[] newEvents = new int[n + 1][2];
                System.arraycopy(events, 0, newEvents, 0, i);
                newEvents[i] = event;
                System.arraycopy(events, i, newEvents, i + 1, n - i);
                events = newEvents;
            }
        }
    }

    public int book(int startTime, int endTime) {
        int k = 0;
        for (int[] e : events) {
            if (e[0] < startTime && e[1] > endTime) {
                k++;
            } else if (e[0] <= startTime && e[1] >= endTime) {
                return k;
            }
        }
        return k;
    }
}