As a professional Software Tester, generate a complete Junit class test file (name the class as :'1579_DescriptionExample', and use as first line the declaration: 'package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen') with 5 different JUnit tests for the following description in natural language with examples. Specifically below the description, each example is introduced by the keyword [--Example XX--] (where XX is a number), and it is composed by an input tuple and an expected output. Emit only the Java code, without any other tag or text.  Here is the description: 
Alice and Bob have an undirected graph of "n" nodes and three types of edges:

Type 1: Can be traversed by Alice only.
Type 2: Can be traversed by Bob only.
Type 3: Can be traversed by both Alice and Bob.
Given an array "edges" where "edges[i] = [typei, ui, vi]" represents a bidirectional edge of type "typei" between nodes "ui" and "vi", find the maximum number of edges you can remove so that after removing the edges, the graph can still be fully traversed by both Alice and Bob. The graph is fully traversed by Alice and Bob if starting from any node, they can reach all other nodes.

Return the maximum number of edges you can remove, or return "-1" if Alice and Bob cannot fully traverse the graph.
[--Example 1--]
Input: n = 4, edges = [[3,1,2],[3,2,3],[1,1,3],[1,2,4],[1,1,2],[2,3,4]]
Output: 2
[--Example 2--]
Input: n = 4, edges = [[3,1,2],[3,2,3],[1,1,4],[2,1,4]]
Output: 0
[--Example 3--]
Input: n = 4, edges = [[3,2,3],[1,1,2],[2,3,4]]
Output: -1