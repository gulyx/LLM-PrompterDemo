package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;

public class DescriptionOnlyTest {

    @Test
    public void testMaxXor() {
        int[] nums = {3, 4, 5};
        assertEquals(7, getMaxXor(nums));
    }

    @Test
    public void testMaxXor2() {
        int[] nums = {1, 2, 3, 4, 5};
        assertEquals(15, getMaxXor(nums));
    }

    @Test
    public void testMaxXor3() {
        int[] nums = {10, 20, 30, 40, 50};
        assertEquals(60, getMaxXor(nums));
    }

    @Test
    public void testMaxXor4() {
        int[] nums = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
        assertEquals(255, getMaxXor(nums));
    }

    @Test
    public void testMaxXor5() {
        int[] nums = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};
        assertEquals(15, getMaxXor(nums));
    }
}

public class Solution {

    public int getMaxXor(int[] nums) {
        int maxXor = 0;
        for (int num : nums) {
            maxXor |= num;
        }

        int currXor = 0;
        for (int i = 0; i < nums.length; i++) {
            currXor ^= nums[i];
            maxXor = Math.max(maxXor, currXor ^ maxXor);
        }
        return maxXor;
    }
}