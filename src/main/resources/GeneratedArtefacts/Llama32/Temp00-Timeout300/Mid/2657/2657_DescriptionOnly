```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;
public class 2657_DescriptionOnly {

    @Test
    public void testPrefixCommonArray() {
        int[] A = {1,2,3};
        int[] B = {3,2,1};
        int[] result = prefixCommonArray(A, B);
        assertArrayEquals(new int[]{2, 2, 1}, result);
    }

    @Test
    public void testPrefixCommonArray_Empty() {
        int[] A = {};
        int[] B = {};
        int[] result = prefixCommonArray(A, B);
        assertArrayEquals(new int[]{0}, result);
    }

    @Test
    public void testPrefixCommonArray_Same() {
        int[] A = {1,2,3};
        int[] B = {1,2,3};
        int[] result = prefixCommonArray(A, B);
        assertArrayEquals(new int[]{1, 1, 1}, result);
    }

    @Test
    public void testPrefixCommonArray_DifferentLength() {
        int[] A = {1,2,3};
        int[] B = {1,2,3,4};
        int[] result = prefixCommonArray(A, B);
        assertArrayEquals(new int[]{2, 2, 2, 1}, result);
    }

    @Test
    public void testPrefixCommonArray_Null() {
        int[] A = null;
        int[] B = {1,2,3};
        assertThrows(NullPointerException.class, () -> prefixCommonArray(A, B));
    }
}

public class Solution {

    public int[] prefixCommonArray(int[] A, int[] B) {
        if (A == null || B == null) return new int[0];
        int n = A.length;
        int m = B.length;
        int[] result = new int[n + 1];

        for (int i = 0; i < n; i++) {
            result[A[i]]++;
            if (i < m && A[i] == B[i]) result[B[i]]++;
        }

        return result;
    }
}
```