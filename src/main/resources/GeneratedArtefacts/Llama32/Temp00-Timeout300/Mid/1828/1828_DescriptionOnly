```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.Arrays;
import java.lang.Math;

public class DescriptionOnlyTest {

    @Test
    public void test1() {
        int[][] points = {{1, 1}, {2, 2}, {3, 3}};
        int[][] queries = {{1, 1, 1}, {2, 2, 2}, {3, 3, 3}};
        int[] answer = new int[queries.length];
        for (int i = 0; i < queries.length; i++) {
            answer[i] = countPoints(points, queries[i]);
        }
        assertArrayEquals(new int[]{4, 3, 2}, answer);
    }

    @Test
    public void test2() {
        int[][] points = {{1, 1}, {2, 2}, {3, 3}};
        int[][] queries = {{0, 0, 1}, {1, 1, 1}, {2, 2, 1}};
        int[] answer = new int[queries.length];
        for (int i = 0; i < queries.length; i++) {
            answer[i] = countPoints(points, queries[i]);
        }
        assertArrayEquals(new int[]{1, 2, 3}, answer);
    }

    @Test
    public void test3() {
        int[][] points = {{1, 1}, {2, 2}, {3, 3}};
        int[][] queries = {{0, 0, 0}, {1, 1, 1}, {2, 2, 1}};
        int[] answer = new int[queries.length];
        for (int i = 0; i < queries.length; i++) {
            answer[i] = countPoints(points, queries[i]);
        }
        assertArrayEquals(new int[]{0, 1, 3}, answer);
    }

    @Test
    public void test4() {
        int[][] points = {{1, 1}, {2, 2}, {3, 3}};
        int[][] queries = {{0, 0, 10}, {1, 1, 10}, {2, 2, 10}};
        int[] answer = new int[queries.length];
        for (int i = 0; i < queries.length; i++) {
            answer[i] = countPoints(points, queries[i]);
        }
        assertArrayEquals(new int[]{12, 9, 6}, answer);
    }

    @Test
    public void test5() {
        int[][] points = {{1, 1}, {2, 2}, {3, 3}};
        int[][] queries = {{0, 0, 10000000}, {1, 1, 10000000}, {2, 2, 10000000}};
        int[] answer = new int[queries.length];
        for (int i = 0; i < queries.length; i++) {
            answer[i] = countPoints(points, queries[i]);
        }
        assertArrayEquals(new int[]{3, 3, 3}, answer);
    }

    private int countPoints(int[][] points, int[] query) {
        int xj = query[0];
        int yj = query[1];
        int rj = query[2];

        int count = 0;
        for (int[] point : points) {
            if (Math.sqrt(Math.pow(point[0] - xj, 2) + Math.pow(point[1] - yj, 2)) <= rj) {
                count++;
            }
        }

        return count;
    }
}
```