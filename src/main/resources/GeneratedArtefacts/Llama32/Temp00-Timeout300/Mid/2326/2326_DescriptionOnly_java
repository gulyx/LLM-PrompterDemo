package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.2326;

public class Solution {
    public int[][] generateMatrix(int m, int n, ListNode head) {
        if (head == null || m == 0 || n == 0) return new int[0][0];
        int[][] res = new int[m][n];
        int dir = 0;
        int[] rowDir = {0, 1, 0, -1};
        int[] colDir = {-1, 0, 1, 0};
        int r = 0, c = 0;
        ListNode cur = head;
        while (cur != null) {
            res[r][c] = cur.val;
            int nr = r + rowDir[dir];
            int nc = c + colDir[dir];
            if (nr < 0 || nr >= m || nc < 0 || nc >= n || res[nr][nc] != 0) dir = (dir + 1) % 4;
            else {
                r += rowDir[dir];
                c += colDir[dir];
            }
            cur = cur.next;
        }
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                if (res[i][j] == 0) res[i][j] = -1;
            }
        }
        return res;
    }

    public static class ListNode {
        int val;
        ListNode next;
        ListNode(int x) { val = x; }
    }
}