package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;

public class 1669_DescriptionOnly {

    @Test
    public void test1() {
        ListNode l1 = new ListNode(1, new ListNode(2, new ListNode(4)));
        ListNode l2 = new ListNode(1, new ListNode(3, new ListNode(4)));
        ListNode result = mergeInBetween(l1, 1, 3);
        assertEquals(new ListNode(1, new ListNode(3, new ListNode(4))), result);
    }

    @Test
    public void test2() {
        ListNode l1 = new ListNode(1, new ListNode(2, new ListNode(3, new ListNode(4))));
        ListNode l2 = new ListNode(1, new ListNode(2));
        ListNode result = mergeInBetween(l1, 0, 2);
        assertEquals(new ListNode(1, new ListNode(2, new ListNode(1, new ListNode(2, new ListNode(3, new ListNode(4)))))), result);
    }

    @Test
    public void test3() {
        ListNode l1 = new ListNode(1, new ListNode(2, new ListNode(3, new ListNode(4))));
        ListNode l2 = new ListNode(1, new ListNode(2));
        ListNode result = mergeInBetween(l1, 0, 0);
        assertEquals(new ListNode(1, new ListNode(2, new ListNode(1, new ListNode(2, new ListNode(3, new ListNode(4)))))), result);
    }

    @Test
    public void test4() {
        ListNode l1 = new ListNode(1, new ListNode(2, new ListNode(3, new ListNode(4))));
        ListNode l2 = new ListNode(1, new ListNode(2));
        ListNode result = mergeInBetween(l1, 0, 4);
        assertEquals(new ListNode(1, new ListNode(2)), result);
    }

    @Test
    public void test5() {
        ListNode l1 = new ListNode(1, new ListNode(2, new ListNode(3, new ListNode(4))));
        ListNode l2 = new ListNode(1, new ListNode(2));
        ListNode result = mergeInBetween(l1, 0, 0);
        assertEquals(new ListNode(1, new ListNode(2, new ListNode(1, new ListNode(2, new ListNode(3, new ListNode(4)))))), result);
    }
}