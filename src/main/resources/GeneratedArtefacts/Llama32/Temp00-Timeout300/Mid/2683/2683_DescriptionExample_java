package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.2683;

public class Solution {
    public boolean validBinaryTree(int[] derived) {
        int n = derived.length;
        for (int i = 0; i < n - 1; i++) {
            if ((derived[i] & 1) != (derived[i + 1] & 1)) {
                return false;
            }
        }
        return true;
    }

    public boolean validBinaryTree2(int[] derived) {
        int n = derived.length;
        for (int i = 0; i < n - 1; i++) {
            if ((derived[i] ^ derived[n - 1]) != (derived[i + 1] ^ derived[0])) {
                return false;
            }
        }
        return true;
    }

    public boolean validBinaryTree3(int[] derived) {
        int n = derived.length;
        for (int i = 0; i < n; i++) {
            if ((i == n - 1 && (derived[i] ^ derived[0]) != 0) || 
                (i != n - 1 && (derived[i] ^ derived[n - 1]) != 0)) {
                return false;
            }
        }
        return true;
    }

}