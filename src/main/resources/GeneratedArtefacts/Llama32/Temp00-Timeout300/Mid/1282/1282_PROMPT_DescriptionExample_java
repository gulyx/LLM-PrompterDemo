As a professional Software Engineer, generate a complete Java class file (name the class as :'Solution', and use as first line the declaration: 'package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.1282;') for the following description in natural language with examples. Specifically below the description, each example is introduced by the keyword[--Example XX--] (where XX is a number), and it is composed by an input tuple and an expected output. Emit only the Java code, without any other tag or text.  Here is the description: 
There are "n" people that are split into some unknown number of groups. Each person is labeled with a unique ID from "0" to "n - 1".

You are given an integer array "groupSizes", where "groupSizes[i]" is the size of the group that person "i" is in. For example, if "groupSizes[1] = 3", then person "1" must be in a group of size "3".

Return a list of groups such that each person "i" is in a group of size "groupSizes[i]".

Each person should appear in exactly one group, and every person must be in a group. If there are multiple answers, return any of them. It is guaranteed that there will be at least one valid solution for the given input.
[--Example 1--]
Input: groupSizes = [3,3,3,3,3,1,3]
Output: [[5],[0,1,2],[3,4,6]]
[--Example 2--]
Input: groupSizes = [2,1,3,3,3,2]
Output: [[1],[0,5],[2,3,4]]