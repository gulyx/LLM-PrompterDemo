```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class DescriptionExampleTest {

    @Test
    public void testPunishmentNumber_10() {
        int n = 10;
        int expectedOutput = 182;
        assertEquals(expectedOutput, punishmentNumber(n));
    }

    @Test
    public void testPunishmentNumber_37() {
        int n = 37;
        int expectedOutput = 1478;
        assertEquals(expectedOutput, punishmentNumber(n));
    }

    @Test
    public void testPunishmentNumber_1000() {
        int n = 1000;
        int expectedOutput = 25164150;
        assertEquals(expectedOutput, punishmentNumber(n));
    }

    @Test
    public void testPunishmentNumber_1() {
        int n = 1;
        int expectedOutput = 1;
        assertEquals(expectedOutput, punishmentNumber(n));
    }

    @Test
    public void testPunishmentNumber_0() {
        int n = 0;
        int expectedOutput = 0;
        assertEquals(expectedOutput, punishmentNumber(n));
    }
}

public class Solution {

    public int punishmentNumber(int n) {
        int result = 0;
        for (int i = 1; i <= n; i++) {
            String s = Integer.toString(i * i);
            boolean found = false;
            for (int j = 1; j < s.length(); j++) {
                if (s.charAt(j - 1) == s.charAt(j)) {
                    int sum = 0;
                    for (int k = j; k < s.length(); k += j) {
                        sum += Character.getNumericValue(s.charAt(k));
                        if (sum == i) {
                            found = true;
                            break;
                        }
                    }
                }
            }
            if (found) {
                result += i * i;
            }
        }
        return result;
    }
}
```