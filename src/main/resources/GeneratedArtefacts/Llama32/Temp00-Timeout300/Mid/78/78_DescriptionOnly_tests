package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;

public class '78_DescriptionOnlyTest {

    @Test
    public void testPowerSet_EmptyArray_ReturnsEmptyList() {
        int[] nums = {};
        List<List<Integer>> result = powerSet(nums);
        assertTrue(result.isEmpty());
    }

    @Test
    public void testPowerSet_SingleElementArray_ReturnsTwoSubsets() {
        int[] nums = {1};
        List<List<Integer>> result = powerSet(nums);
        assertEquals(2, result.size());
        assertTrue(result.contains(Arrays.asList()));
        assertTrue(result.contains(Arrays.asList(1)));
    }

    @Test
    public void testPowerSet_TwoElementArray_ReturnsFourSubsets() {
        int[] nums = {1, 2};
        List<List<Integer>> result = powerSet(nums);
        assertEquals(4, result.size());
        assertTrue(result.contains(Arrays.asList()));
        assertTrue(result.contains(Arrays.asList(1)));
        assertTrue(result.contains(Arrays.asList(2)));
        assertTrue(result.contains(Arrays.asList(1, 2)));
    }

    @Test
    public void testPowerSet_ThreeElementArray_ReturnsEightSubsets() {
        int[] nums = {1, 2, 3};
        List<List<Integer>> result = powerSet(nums);
        assertEquals(8, result.size());
        assertTrue(result.contains(Arrays.asList()));
        assertTrue(result.contains(Arrays.asList(1)));
        assertTrue(result.contains(Arrays.asList(2)));
        assertTrue(result.contains(Arrays.asList(3)));
        assertTrue(result.contains(Arrays.asList(1, 2)));
        assertTrue(result.contains(Arrays.asList(1, 3)));
        assertTrue(result.contains(Arrays.asList(2, 3)));
        assertTrue(result.contains(Arrays.asList(1, 2, 3)));
    }

    @Test
    public void testPowerSet_LargeArray_ReturnsCorrectNumberofSubsets() {
        int[] nums = {1, 2, 3, 4, 5};
        List<List<Integer>> result = powerSet(nums);
        assertEquals(32, result.size());
    }
}