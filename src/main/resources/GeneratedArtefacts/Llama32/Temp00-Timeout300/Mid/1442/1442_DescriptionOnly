package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;
public class 1442_DescriptionOnlyTest {

    @Test
    public void test_0() {
        int[] arr = {1, 3, 5, 7};
        assertEquals(4, threeEqualParts(arr));
    }

    @Test
    public void test_1() {
        int[] arr = {1, 2, 3, 4, 5, 6, 7, 8, 9};
        assertEquals(0, threeEqualParts(arr));
    }

    @Test
    public void test_2() {
        int[] arr = {1, 1, 1, 1, 1, 1, 1, 1, 1};
        assertEquals(6, threeEqualParts(arr));
    }

    @Test
    public void test_3() {
        int[] arr = {2, 4, 8, 16, 32, 64, 128, 256, 512};
        assertEquals(0, threeEqualParts(arr));
    }

    @Test
    public void test_4() {
        int[] arr = {1, 3, 5, 7, 9, 11, 13, 15, 17};
        assertEquals(0, threeEqualParts(arr));
    }
}

int threeEqualParts(int[] arr) {
    int n = arr.length;
    int count = 0;
    for (int i = 0; i < n - 2; i++) {
        for (int j = i + 1; j < n - 1; j++) {
            for (int k = j + 1; k < n; k++) {
                if ((arr[i] ^ arr[i + 1] ^ ... ^ arr[j - 1]) == (arr[j] ^ arr[j + 1] ^ ... ^ arr[k])) {
                    count++;
                }
            }
        }
    }
    return count;
}