package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.1038;

import it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.1038.Solution;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

public class 1038_DescriptionOnly_testsTest {

    @Test
    public void testConvertToGreaterTree() {
        Solution solution = new Solution();
        TreeNode root = new TreeNode(5);
        root.left = new TreeNode(3);
        root.right = new TreeNode(6);
        root.left.left = new TreeNode(1);
        root.left.right = new TreeNode(4);

        solution.convertBST(root);

        assertEquals(11, root.val);
        assertEquals(7, root.left.val);
        assertEquals(9, root.right.val);
    }

    @Test
    public void testConvertToGreaterTree_EmptyTree() {
        Solution solution = new Solution();
        TreeNode root = null;

        solution.convertBST(root);

        assertNull(root);
    }

    @Test
    public void testConvertToGreaterTree_SingleNodeTree() {
        Solution solution = new Solution();
        TreeNode root = new TreeNode(5);

        solution.convertBST(root);

        assertEquals(10, root.val);
    }

    @Test
    public void testConvertToGreaterTree_BalanceTree() {
        Solution solution = new Solution();
        TreeNode root = new TreeNode(1);
        root.left = new TreeNode(2);
        root.right = new TreeNode(3);

        solution.convertBST(root);

        assertEquals(6, root.val);
        assertEquals(4, root.left.val);
        assertEquals(5, root.right.val);
    }

    @Test
    public void testConvertToGreaterTree_UnbalanceTree() {
        Solution solution = new Solution();
        TreeNode root = new TreeNode(1);
        root.left = new TreeNode(2);
        root.left.left = new TreeNode(3);

        solution.convertBST(root);

        assertEquals(6, root.val);
        assertEquals(4, root.left.val);
        assertEquals(7, root.left.left.val);
    }
}