```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;

public class DescriptionExampleTest {

    @Test
    public void testValidBinaryStrings_3() {
        String[] result = validBinaryStrings(3);
        String[] expected = {"010", "011", "101", "110", "111"};
        assertArrayEquals(expected, result);
    }

    @Test
    public void testValidBinaryStrings_1() {
        String[] result = validBinaryStrings(1);
        String[] expected = {"0", "1"};
        assertArrayEquals(expected, result);
    }

    @Test
    public void testValidBinaryStrings_2() {
        String[] result = validBinaryStrings(2);
        String[] expected = {"00", "01", "10", "11"};
        assertArrayEquals(expected, result);
    }

    @Test
    public void testValidBinaryStrings_4() {
        String[] result = validBinaryStrings(4);
        String[] expected = {"0001", "0011", "0101", "0111", "1001", "1011", "1101", "1111"};
        assertArrayEquals(expected, result);
    }

    @Test
    public void testValidBinaryStrings_5() {
        String[] result = validBinaryStrings(5);
        String[] expected = {"00011", "00111", "01011", "01111", "10011", "10111", "11011", "11111"};
        assertArrayEquals(expected, result);
    }

    public static String[] validBinaryStrings(int n) {
        String[] result = new String[n];
        for (int i = 0; i < n; i++) {
            StringBuilder sb = new StringBuilder();
            for (int j = 0; j <= i; j++) {
                sb.append('0');
            }
            for (int j = 0; j <= i; j++) {
                sb.append('1');
            }
            result[i] = sb.toString();
        }
        return result;
    }
}
```