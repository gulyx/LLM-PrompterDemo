package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.1829;

import java.util.*;

public class Solution {
    public int[] maxXOR(int[] nums, int maximumBit) {
        int n = nums.length;
        int[] answer = new int[n];
        int[] prefixXor = new int[n + 1];

        for (int i = 0; i < n; i++) {
            prefixXor[i + 1] = prefixXor[i] ^ nums[i];
        }

        int maxVal = (1 << maximumBit) - 1;
        int currMax = 0;

        for (int i = 0; i < n; i++) {
            int k = prefixXor[n] ^ prefixXor[i + 1];

            if ((k & maxVal) == k) {
                answer[i] = k;
                currMax = Math.max(currMax, k);
            }
        }

        for (int i = 0; i < n; i++) {
            if (currMax > nums[i]) {
                answer[i]++;
            }
        }

        return answer;
    }

    public static void main(String[] args) {
        Solution solution = new Solution();
        int[] nums1 = {0, 1, 1, 3};
        int[] result1 = solution.maxXOR(nums1, 2);
        System.out.println(Arrays.toString(result1));

        int[] nums2 = {2, 3, 4, 7};
        int[] result2 = solution.maxXOR(nums2, 3);
        System.out.println(Arrays.toString(result2));

        int[] nums3 = {0, 1, 2, 2, 5, 7};
        int[] result3 = solution.maxXOR(nums3, 3);
        System.out.println(Arrays.toString(result3));
    }
}