```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.assertEquals;
import java.util.Arrays;

public class DescriptionOnlyTest {

    @Test
    public void testAnagramSteps() {
        String s = "leetcode";
        String t = "practice";
        int steps = minSteps(s, t);
        assertEquals(5, steps);
    }

    @Test
    public void testAnagramSteps2() {
        String s = "ab";
        String t = "ba";
        int steps = minSteps(s, t);
        assertEquals(1, steps);
    }

    @Test
    public void testAnagramSteps3() {
        String s = "abc";
        String t = "bac";
        int steps = minSteps(s, t);
        assertEquals(2, steps);
    }

    @Test
    public void testAnagramSteps4() {
        String s = "aabbcc";
        String t = "abbcac";
        int steps = minSteps(s, t);
        assertEquals(3, steps);
    }

    @Test
    public void testAnagramSteps5() {
        String s = "abcde";
        String t = "aceed";
        int steps = minSteps(s, t);
        assertEquals(3, steps);
    }
}

public class Solution {

    public int minSteps(String s, String t) {
        int[] countS = new int[26];
        int[] countT = new int[26];

        for (char c : s.toCharArray()) {
            countS[c - 'a']++;
        }

        for (char c : t.toCharArray()) {
            countT[c - 'a']++;
        }

        int steps = 0;
        for (int i = 0; i < 26; i++) {
            if (countS[i] > countT[i]) {
                steps += countS[i] - countT[i];
            }
        }

        return steps;
    }
}
```