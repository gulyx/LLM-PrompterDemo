```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class DescriptionExampleTest {

    @Test
    public void testAnagramSteps() {
        String s = "bab";
        String t = "aba";
        int expectedOutput = 1;
        assertEquals(expectedOutput, minStepsToAnagram(s, t));
    }

    @Test
    public void testAnagramSteps2() {
        String s = "leetcode";
        String t = "practice";
        int expectedOutput = 5;
        assertEquals(expectedOutput, minStepsToAnagram(s, t));
    }

    @Test
    public void testAnagramSteps3() {
        String s = "anagram";
        String t = "mangaar";
        int expectedOutput = 0;
        assertEquals(expectedOutput, minStepsToAnagram(s, t));
    }

    @Test
    public void testAnagramSteps4() {
        String s = "hello";
        String t = "world";
        int expectedOutput = 4;
        assertEquals(expectedOutput, minStepsToAnagram(s, t));
    }

    @Test
    public void testAnagramSteps5() {
        String s = "abcde";
        String t = "aceed";
        int expectedOutput = 3;
        assertEquals(expectedOutput, minStepsToAnagram(s, t));
    }
}

public class Solution {

    public int minStepsToAnagram(String s, String t) {
        int[] countS = new int[26];
        int[] countT = new int[26];

        for (char c : s.toCharArray()) {
            countS[c - 'a']++;
        }

        for (char c : t.toCharArray()) {
            countT[c - 'a']++;
        }

        int steps = 0;
        for (int i = 0; i < 26; i++) {
            if (countS[i] != countT[i]) {
                steps += Math.abs(countS[i] - countT[i]);
            }
        }

        return steps / 2;
    }
}
```