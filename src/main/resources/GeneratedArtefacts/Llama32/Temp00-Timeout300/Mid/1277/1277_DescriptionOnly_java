package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.1277;

public class Solution {
    public int countSquares(int[][] matrix) {
        if (matrix == null || matrix.length == 0 || matrix[0].length == 0) return 0;
        int rows = matrix.length, cols = matrix[0].length;
        int[][] dp = new int[rows][cols];
        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < cols; j++) {
                if (matrix[i][j] == 1) {
                    if (i > 0 && matrix[i - 1][j] == 1) dp[i][j] += dp[i - 1][j];
                    if (j > 0 && matrix[i][j - 1] == 1) dp[i][j] += dp[i][j - 1];
                }
                dp[i][j]++;
            }
        }
        int ans = 0;
        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < cols; j++) {
                if (matrix[i][j] == 1) {
                    ans += Math.min(dp[i][j], dp[i + 1][j], dp[i][j + 1]) - Math.min(Math.min(dp[i + 1][j], dp[i][j + 1]), dp[i + 1][j + 1]);
                }
            }
        }
        return ans;
    }
}