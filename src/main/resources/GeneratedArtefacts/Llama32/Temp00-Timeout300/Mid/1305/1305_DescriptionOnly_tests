package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.1305;

import it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.1305.Solution;
import org.junit.Test;
import static org.junit.Assert.*;

public class 1305_DescriptionOnly_testsTest {

    @Test
    public void test1() {
        Solution solution = new Solution();
        TreeNode root1 = new TreeNode(7);
        root1.left = new TreeNode(3);
        root1.right = new TreeNode(15);
        root1.left.left = new TreeNode(2);
        root1.left.right = new TreeNode(5);
        root1.right.left = new TreeNode(10);
        root1.right.right = new TreeNode(20);

        TreeNode root2 = new TreeNode(0);
        root2.right = new TreeNode(1);

        int[] result = solution.inorderTraversal(root1);
        int[] expected = { 0, 2, 3, 5, 7, 10, 15, 20 };
        assertArrayEquals(expected, result);
    }

    @Test
    public void test2() {
        Solution solution = new Solution();
        TreeNode root1 = new TreeNode(1);
        root1.left = new TreeNode(0);

        TreeNode root2 = new TreeNode(2);

        int[] result = solution.inorderTraversal(root1);
        int[] expected = { 0, 1, 2 };
        assertArrayEquals(expected, result);
    }

    @Test
    public void test3() {
        Solution solution = new Solution();
        TreeNode root1 = new TreeNode(5);

        TreeNode root2 = new TreeNode(4);
        root2.left = new TreeNode(3);
        root2.right = new TreeNode(6);
        root2.left.left = new TreeNode(2);
        root2.left.right = new TreeNode(8);

        int[] result = solution.inorderTraversal(root1);
        int[] expected = { 2, 3, 4, 5, 6, 8 };
        assertArrayEquals(expected, result);
    }

    @Test
    public void test4() {
        Solution solution = new Solution();
        TreeNode root1 = new TreeNode(9);

        TreeNode root2 = new TreeNode(5);
        root2.left = new TreeNode(3);
        root2.right = new TreeNode(7);
        root2.left.left = new TreeNode(2);
        root2.left.right = new TreeNode(4);
        root2.right.left = new TreeNode(6);
        root2.right.right = new TreeNode(8);

        int[] result = solution.inorderTraversal(root1);
        int[] expected = { 2, 3, 4, 5, 6, 7, 8, 9 };
        assertArrayEquals(expected, result);
    }

    @Test
    public void test5() {
        Solution solution = new Solution();
        TreeNode root1 = null;

        TreeNode root2 = new TreeNode(0);

        int[] result = solution.inorderTraversal(root1);
        int[] expected = { 0 };
        assertArrayEquals(expected, result);
    }
}