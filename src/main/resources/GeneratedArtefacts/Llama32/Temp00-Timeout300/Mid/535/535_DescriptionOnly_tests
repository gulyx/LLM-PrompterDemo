package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.535;

import it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.535.Solution;
import org.junit.Test;
import static org.junit.Assert.*;

public class 535_DescriptionOnly_testsTest {

    @Test
    public void testEncodeDecode() {
        Solution solution = new Solution();
        String longUrl = "https://leetcode.com/problems/design-tinyurl";
        String shortUrl = solution.encode(longUrl);
        assertEquals(longUrl, solution.decode(shortUrl));
    }

    @Test
    public void testEncodeDecodeWithDifferentLongUrls() {
        Solution solution = new Solution();
        String longUrl1 = "https://leetcode.com/problems/design-tinyurl";
        String longUrl2 = "https://leetcode.com/problems/design-tinyurl2";
        String shortUrl1 = solution.encode(longUrl1);
        String shortUrl2 = solution.encode(longUrl2);
        assertEquals(longUrl1, solution.decode(shortUrl1));
        assertEquals(longUrl2, solution.decode(shortUrl2));
    }

    @Test
    public void testEncodeDecodeWithSameShortUrls() {
        Solution solution = new Solution();
        String longUrl = "https://leetcode.com/problems/design-tinyurl";
        String shortUrl = solution.encode(longUrl);
        assertEquals(longUrl, solution.decode(shortUrl));
        assertEquals(longUrl, solution.decode(shortUrl));
    }

    @Test
    public void testEncodeDecodeWithDifferentLengths() {
        Solution solution = new Solution();
        String longUrl1 = "https://leetcode.com/problems/design-tinyurl";
        String longUrl2 = "https://leetcode.com/problems/design-tinyurl";
        String shortUrl1 = solution.encode(longUrl1);
        String shortUrl2 = solution.encode(longUrl2);
        assertEquals(longUrl1, solution.decode(shortUrl1));
        assertEquals(longUrl2, solution.decode(shortUrl2));
    }

    @Test
    public void testEncodeDecodeWithEmptyString() {
        Solution solution = new Solution();
        String longUrl = "";
        String shortUrl = solution.encode(longUrl);
        assertEquals(longUrl, solution.decode(shortUrl));
    }
}