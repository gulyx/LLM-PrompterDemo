package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;

public class Solution {
    private String shortUrlMap = "";

    public Solution() {

    }

    @Test
    public void testEncodeDecode() {
        Solution solution = new Solution();
        String longUrl = "https://leetcode.com/problems/design-tinyurl";
        String shortUrl = solution.encode(longUrl);
        assertEquals("http://tinyurl.com/" + shortUrlMap, shortUrl);
        String decodedUrl = solution.decode(shortUrl);
        assertEquals(longUrl, decodedUrl);
    }

    @Test
    public void testEncodeDecodeWithLongerUrl() {
        Solution solution = new Solution();
        String longUrl = "https://leetcode.com/problems/design-tinyurl";
        String shortUrl = solution.encode(longUrl);
        assertEquals("http://tinyurl.com/" + shortUrlMap, shortUrl);
        String decodedUrl = solution.decode(shortUrl);
        assertEquals(longUrl, decodedUrl);
    }

    @Test
    public void testEncodeDecodeWithDifferentLongUrl() {
        Solution solution = new Solution();
        String longUrl1 = "https://leetcode.com/problems/design-tinyurl";
        String shortUrl1 = solution.encode(longUrl1);
        String longUrl2 = "https://leetcode.com/problems/design-tinyurl2";
        String shortUrl2 = solution.encode(longUrl2);
        assertEquals("http://tinyurl.com/" + shortUrlMap, shortUrl1);
        assertEquals("http://tinyurl.com/" + (shortUrlMap+1), shortUrl2);
        String decodedUrl1 = solution.decode(shortUrl1);
        String decodedUrl2 = solution.decode(shortUrl2);
        assertEquals(longUrl1, decodedUrl1);
        assertEquals(longUrl2, decodedUrl2);
    }

    @Test
    public void testEncodeDecodeWithEmptyLongUrl() {
        Solution solution = new Solution();
        String longUrl = "";
        try {
            solution.encode(longUrl);
            fail("Expected exception");
        } catch (Exception e) {

        }
    }

    @Test
    public void testEncodeDecodeWithNullLongUrl() {
        Solution solution = new Solution();
        String longUrl = null;
        try {
            solution.encode(longUrl);
            fail("Expected exception");
        } catch (NullPointerException e) {

        }
    }
}