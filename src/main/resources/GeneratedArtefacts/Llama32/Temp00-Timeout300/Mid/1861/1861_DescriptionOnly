package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;

public class 1861_DescriptionOnly {

    @Test
    public void test_0() {
        char[][] boxGrid = {{"#",".","."},{".","*","."}};
        char[][] expected = {{".",".","*"},{".",".","."}};
        assertArrayEquals(expected, rotateTheBox(boxGrid));
    }

    @Test
    public void test_1() {
        char[][] boxGrid = {{"#",".","."},{".",".","."}};
        char[][] expected = {{".",".","."},{"#",".","."}};
        assertArrayEquals(expected, rotateTheBox(boxGrid));
    }

    @Test
    public void test_2() {
        char[][] boxGrid = {{"#",".","*"},{".",".","."}};
        char[][] expected = {{".",".","*"},{".",".","."}};
        assertArrayEquals(expected, rotateTheBox(boxGrid));
    }

    @Test
    public void test_3() {
        char[][] boxGrid = {{"#",".","."},{".",".","."},{".","*","."}};
        char[][] expected = {{".",".","*"},{".",".","."},{".",".","."}};
        assertArrayEquals(expected, rotateTheBox(boxGrid));
    }

    @Test
    public void test_4() {
        char[][] boxGrid = {{"#",".",".","."},{".",".",".","."},{".","*","."},{".",".","."}};
        char[][] expected = {{".",".",".","."},{".",".",".","."},{".","*","."},{".",".","."}};
        assertArrayEquals(expected, rotateTheBox(boxGrid));
    }

    public char[][] rotateTheBox(char[][] boxGrid) {
        int m = boxGrid.length;
        int n = boxGrid[0].length;
        char[][] result = new char[n][m];
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                if (boxGrid[j][n - i - 1] == '.') {
                    result[j][i] = '.';
                } else if (boxGrid[j][n - i - 1] == '*') {
                    result[j][i] = '*';
                } else {
                    result[j][i] = '#';
                }
            }
        }
        return result;
    }

}