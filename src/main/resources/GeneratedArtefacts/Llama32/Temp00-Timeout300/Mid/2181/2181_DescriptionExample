```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;

public class 2181_DescriptionExample {

    public ListNode mergeNodes(ListNode head) {
        ListNode dummy = new ListNode(0);
        dummy.next = head;
        ListNode prev = dummy, curr = head;
        int sum = 0;
        while (curr != null) {
            if (curr.val == 0 && prev.next != null) {
                sum += prev.next.val;
                prev.next.val = sum;
                prev = prev.next;
            }
            curr = curr.next;
        }
        ListNode result = dummy.next;
        while (result.next != null && result.next.val == 0)
            result = result.next;
        return result;
    }

    @Test
    public void testMergeNodes() {
        ListNode head = new ListNode(0);
        head.next = new ListNode(3);
        head.next.next = new ListNode(1);
        head.next.next.next = new ListNode(0);
        head.next.next.next.next = new ListNode(4);
        head.next.next.next.next.next = new ListNode(5);
        head.next.next.next.next.next.next = new ListNode(2);
        head.next.next.next.next.next.next.next = new ListNode(0);

        ListNode result = mergeNodes(head);
        ListNode expected = new ListNode(4);
        expected.next = new ListNode(11);
        assertEquals(expected, result);
    }

    @Test
    public void testMergeNodes_2() {
        ListNode head = new ListNode(0);
        head.next = new ListNode(1);
        head.next.next = new ListNode(0);
        head.next.next.next = new ListNode(3);
        head.next.next.next.next = new ListNode(0);
        head.next.next.next.next.next = new ListNode(2);
        head.next.next.next.next.next.next = new ListNode(2);

        ListNode result = mergeNodes(head);
        ListNode expected = new ListNode(1);
        expected.next = new ListNode(3);
        expected.next.next = new ListNode(4);
        assertEquals(expected, result);
    }

    @Test
    public void testMergeNodes_3() {
        ListNode head = new ListNode(0);
        head.next = new ListNode(0);
        head.next.next = new ListNode(1);

        ListNode result = mergeNodes(head);
        ListNode expected = new ListNode(1);
        assertEquals(expected, result);
    }

    @Test
    public void testMergeNodes_4() {
        ListNode head = new ListNode(0);
        head.next = new ListNode(0);
        head.next.next = new ListNode(0);

        ListNode result = mergeNodes(head);
        ListNode expected = null;
        assertEquals(expected, result);
    }

    @Test
    public void testMergeNodes_5() {
        ListNode head = new ListNode(1);

        ListNode result = mergeNodes(head);
        ListNode expected = new ListNode(1);
        assertEquals(expected, result);
    }
}
```