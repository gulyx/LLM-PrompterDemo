package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;

public class 2181_DescriptionOnlyTest {

    @Test
    public void testMergeNodes() {
        ListNode head = new ListNode(0);
        head.next = new ListNode(1);
        head.next.next = new ListNode(0);
        head.next.next.next = new ListNode(2);
        head.next.next.next.next = new ListNode(0);
        head.next.next.next.next.next = new ListNode(5);
        head.next.next.next.next.next.next = new ListNode(0);
        head.next.next.next.next.next.next.next = new ListNode(3);

        mergeNodes(head);
        ListNode expectedHead = new ListNode(6);
        expectedHead.next = new ListNode(1);
        expectedHead.next.next = new ListNode(6);
        expectedHead.next.next.next = new ListNode(5);
        expectedHead.next.next.next.next = new ListNode(7);

        assertEquals(expectedHead, head);
    }

    @Test
    public void testMergeNodes_SingleZero() {
        ListNode head = new ListNode(0);
        head.next = new ListNode(1);
        mergeNodes(head);
        ListNode expectedHead = new ListNode(1);

        assertEquals(expectedHead, head);
    }

    @Test
    public void testMergeNodes_NoZeros() {
        ListNode head = new ListNode(1);
        head.next = new ListNode(2);
        head.next.next = new ListNode(3);
        mergeNodes(head);
        ListNode expectedHead = new ListNode(6);

        assertEquals(expectedHead, head);
    }

    @Test
    public void testMergeNodes_MultipleZeros() {
        ListNode head = new ListNode(0);
        head.next = new ListNode(0);
        head.next.next = new ListNode(1);
        head.next.next.next = new ListNode(2);
        mergeNodes(head);
        ListNode expectedHead = new ListNode(3);

        assertEquals(expectedHead, head);
    }

    @Test
    public void testMergeNodes_EmptyList() {
        ListNode head = null;
        mergeNodes(head);
        assertNull(head);
    }
}