```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;

public class 2181_DescriptionExampleTest {

    public ListNode mergeNodes(ListNode head) {
        ListNode dummy = new ListNode(0);
        dummy.next = head;
        ListNode prev = dummy, curr = head;
        int sum = 0;
        while (curr != null) {
            if (curr.val == 0 && prev.next != null) {
                prev.next.val += sum;
                if (prev.next.next != null) {
                    prev.next.next.prev = prev.next;
                }
                if (curr.next != null) {
                    prev.next.next = curr.next;
                }
                prev = prev.next;
                sum = 0;
            } else {
                sum += curr.val;
            }
            curr = curr.next;
        }
        return dummy.next;
    }

    @Test
    public void testMergeNodes() {
        ListNode head = new ListNode(0);
        head.next = new ListNode(3);
        head.next.next = new ListNode(1);
        head.next.next.next = new ListNode(0);
        head.next.next.next.next = new ListNode(4);
        head.next.next.next.next.next = new ListNode(5);
        head.next.next.next.next.next.next = new ListNode(2);
        head.next.next.next.next.next.next.next = new ListNode(0);

        ListNode result = mergeNodes(head);
        assertEquals(new ListNode(4), result.next);
        assertEquals(new ListNode(11), result.next.next);
    }

    @Test
    public void testMergeNodes2() {
        ListNode head = new ListNode(0);
        head.next = new ListNode(1);
        head.next.next = new ListNode(0);
        head.next.next.next = new ListNode(3);
        head.next.next.next.next = new ListNode(0);
        head.next.next.next.next.next = new ListNode(2);
        head.next.next.next.next.next.next = new ListNode(2);

        ListNode result = mergeNodes(head);
        assertEquals(new ListNode(1), result.next);
        assertEquals(new ListNode(3), result.next.next);
        assertEquals(new ListNode(4), result.next.next.next);
    }

    @Test
    public void testMergeNodes3() {
        ListNode head = new ListNode(0);
        head.next = new ListNode(0);
        head.next.next = new ListNode(1);

        ListNode result = mergeNodes(head);
        assertEquals(new ListNode(1), result.next);
    }

    @Test
    public void testMergeNodes4() {
        ListNode head = new ListNode(0);
        head.next = new ListNode(0);
        head.next.next = new ListNode(0);

        ListNode result = mergeNodes(head);
        assertEquals(null, result.next);
    }
}
```