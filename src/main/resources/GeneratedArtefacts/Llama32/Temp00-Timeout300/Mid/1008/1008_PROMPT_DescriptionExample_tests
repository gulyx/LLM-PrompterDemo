As a professional Software Tester, generate a complete Junit test-class (name the test-class as: '1008_DescriptionExample_testsTest', and use as first line the declaration: 'package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.1008;') with 5 different JUnit tests for a Java class-under-test (you can assume the class-under-test is named: Solution, and import it as: 'import it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.1008.Solution;'). The class-under-test implements the following description in natural language with examples. Specifically below the description, each example is introduced by the keyword [--Example XX--] (where XX is a number), and it is composed by an input tuple and an expected output. Emit only the Java code, without any other tag or text.  Here is the description for the class-under-test: 
Given an array of integers preorder, which represents the preorder traversal of a BST (i.e., binary search tree), construct the tree and return its root.

It is guaranteed that there is always possible to find a binary search tree with the given requirements for the given test cases.

A binary search tree is a binary tree where for every node, any descendant of "Node.left" has a value strictly less than "Node.val", and any descendant of "Node.right" has a value strictly greater than "Node.val".

A preorder traversal of a binary tree displays the value of the node first, then traverses "Node.left", then traverses "Node.right".

[--Example 1--]
Input: preorder = [8,5,1,7,10,12]
Output: [8,5,10,1,7,null,12]
[--Example 2--]
Input: preorder = [1,3]
Output: [1,null,3]