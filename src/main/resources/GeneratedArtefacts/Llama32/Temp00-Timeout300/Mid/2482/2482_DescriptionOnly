package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;

public class 2482_DescriptionOnlyTest {

    @Test
    public void testDiffMatrix() {
        int[][] grid = {{1,0,1},{1,1,0}};
        int[][] diff = new int[2][3];
        int m = 2;
        int n = 3;
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                diff[i][j] = calculateDiff(grid, i, j, m, n);
            }
        }
        assertArrayEquals(diff, new int[][]{{2,1,0},{1,2,1}});
    }

    @Test
    public void testDiffMatrix_2() {
        int[][] grid = {{1,1,1},{0,0,0}};
        int[][] diff = new int[2][3];
        int m = 2;
        int n = 3;
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                diff[i][j] = calculateDiff(grid, i, j, m, n);
            }
        }
        assertArrayEquals(diff, new int[][]{{3,2,1},{1,1,1}});
    }

    @Test
    public void testDiffMatrix_3() {
        int[][] grid = {{0,0,0},{0,0,0}};
        int[][] diff = new int[2][3];
        int m = 2;
        int n = 3;
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                diff[i][j] = calculateDiff(grid, i, j, m, n);
            }
        }
        assertArrayEquals(diff, new int[][]{{1,2,3},{1,2,3}});
    }

    @Test
    public void testDiffMatrix_4() {
        int[][] grid = {{0,1,0},{1,0,1}};
        int[][] diff = new int[2][3];
        int m = 2;
        int n = 3;
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                diff[i][j] = calculateDiff(grid, i, j, m, n);
            }
        }
        assertArrayEquals(diff, new int[][]{{1,2,1},{2,1,2}});
    }

    @Test
    public void testDiffMatrix_5() {
        int[][] grid = {{0,0,0},{0,0,0}};
        int[][] diff = new int[2][3];
        int m = 2;
        int n = 3;
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                diff[i][j] = calculateDiff(grid, i, j, m, n);
            }
        }
        assertArrayEquals(diff, new int[][]{{1,2,3},{1,2,3}});
    }

    private int calculateDiff(int[][] grid, int i, int j, int m, int n) {
        int onesRow = 0;
        int zerosRow = 0;
        for (int k = 0; k < n; k++) {
            if (grid[i][k] == 1) {
                onesRow++;
            } else {
                zerosRow++;
            }
        }

        int onesCol = 0;
        int zerosCol = 0;
        for (int k = 0; k < m; k++) {
            if (grid[k][j] == 1) {
                onesCol++;
            } else {
                zerosCol++;
            }
        }

        return onesRow + onesCol - zerosRow - zerosCol;
    }
}