package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.2482;

import it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.2482.Solution;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.assertEquals;

public class 2482_DescriptionOnly_testsTest {

    @Test
    public void test1() {
        Solution solution = new Solution();
        int[][] grid = {{0,1},{1,0}};
        int[][] expected = {{1,1},{1,1}};
        int[][] result = solution.diff(grid);
        for (int i = 0; i < result.length; i++) {
            for (int j = 0; j < result[0].length; j++) {
                assertEquals(expected[i][j], result[i][j]);
            }
        }
    }

    @Test
    public void test2() {
        Solution solution = new Solution();
        int[][] grid = {{1,1},{1,1}};
        int[][] expected = {{2,2},{2,2}};
        int[][] result = solution.diff(grid);
        for (int i = 0; i < result.length; i++) {
            for (int j = 0; j < result[0].length; j++) {
                assertEquals(expected[i][j], result[i][j]);
            }
        }
    }

    @Test
    public void test3() {
        Solution solution = new Solution();
        int[][] grid = {{1,0},{0,1}};
        int[][] expected = {{2,1},{1,2}};
        int[][] result = solution.diff(grid);
        for (int i = 0; i < result.length; i++) {
            for (int j = 0; j < result[0].length; j++) {
                assertEquals(expected[i][j], result[i][j]);
            }
        }
    }

    @Test
    public void test4() {
        Solution solution = new Solution();
        int[][] grid = {{1,1,1},{1,1,1}};
        int[][] expected = {{3,2,2},{2,3,2},{2,2,3}};
        int[][] result = solution.diff(grid);
        for (int i = 0; i < result.length; i++) {
            for (int j = 0; j < result[0].length; j++) {
                assertEquals(expected[i][j], result[i][j]);
            }
        }
    }

    @Test
    public void test5() {
        Solution solution = new Solution();
        int[][] grid = {{1,0},{0,1}};
        int[][] expected = {{2,1},{1,2}};
        int[][] result = solution.diff(grid);
        for (int i = 0; i < result.length; i++) {
            for (int j = 0; j < result[0].length; j++) {
                assertEquals(expected[i][j], result[i][j]);
            }
        }
    }

}