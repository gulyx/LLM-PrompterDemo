package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.885;

import java.util.*;

public class Solution {
    public int[][] spiralMatrix(int rows, int cols) {
        List<int[]> result = new ArrayList<>();
        boolean right = true;
        int[] currentDir = {0, 1};
        int x = 0, y = 0;
        while (result.size() < rows * cols) {
            result.add(new int[]{x, y});
            int nextX = x + currentDir[0];
            int nextY = y + currentDir[1];
            if (nextX < 0 || nextX >= cols || nextY < 0 || nextY >= rows || result.contains(new int[] {nextX, nextY})) {
                boolean temp = right;
                right = !right;
                currentDir = new int[]{currentDir[1], -currentDir[0]};
                if (temp) {
                    nextX = x + currentDir[0];
                    nextY = y + currentDir[1];
                }
            } else {
                x += currentDir[0];
                y += currentDir[1];
            }
        }
        int[][] res = new int[result.size()][2];
        for (int i = 0; i < result.size(); i++) {
            res[i][0] = result.get(i)[0];
            res[i][1] = result.get(i)[1];
        }
        return res;
    }
}