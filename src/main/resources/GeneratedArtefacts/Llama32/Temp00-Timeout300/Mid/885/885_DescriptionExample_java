package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.885;

import java.util.*;

public class Solution {
    public int[][] spiralMatrix(int rows, int cols, int rStart, int cStart) {
        List<int[]> result = new ArrayList<>();
        int[] directions = {0, 1, 0, -1, 0};
        int dirIndex = 0;
        int r = rStart, c = cStart;

        while (result.size() < rows * cols) {
            result.add(new int[]{r, c});

            int nextR = r + directions[dirIndex];
            int nextC = c + directions[(dirIndex + 1) % 4];

            if (nextR >= 0 && nextR < rows && nextC >= 0 && nextC < cols && !result.contains(new int[]{nextR, nextC})) {
                r = nextR;
                c = nextC;
            } else {
                dirIndex = (dirIndex + 1) % 4;
                r += directions[dirIndex];
                c += directions[(dirIndex + 1) % 4];
            }
        }

        int[][] res = new int[result.size()][2];
        for (int i = 0; i < result.size(); i++) {
            res[i] = result.get(i);
        }
        return res;
    }

    public static void main(String[] args) {
        Solution solution = new Solution();
        int[][] result1 = solution.spiralMatrix(1, 4, 0, 0);
        for (int[] row : result1) {
            System.out.println(Arrays.toString(row));
        }
        int[][] result2 = solution.spiralMatrix(5, 6, 1, 4);
        for (int[] row : result2) {
            System.out.println(Arrays.toString(row));
        }
    }
}