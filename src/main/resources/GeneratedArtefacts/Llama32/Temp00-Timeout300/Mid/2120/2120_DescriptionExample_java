package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.2120;

import java.util.*;

public class Solution {
    public int[] executeInstructions(int n, int[] startPos, String s) {
        int[][] directions = {{-1, 0}, {1, 0}, {0, -1}, {0, 1}};
        int[][] visited = new int[n][n];
        int[][] answer = new int[s.length()];
        for (int i = 0; i < s.length(); i++) {
            int row = startPos[0], col = startPos[1];
            if (i == 0) {
                row += directions[s.charAt(i) - 'L'][0];
                col += directions[s.charAt(i) - 'L'][1];
                visited[row][col] = 1;
            }
            answer[i] = 0;
            for (int j = i + 1; j < s.length(); j++) {
                int newRow = row + directions[s.charAt(j) - 'D'][0];
                int newCol = col + directions[s.charAt(j) - 'D'][1];
                if (newRow >= 0 && newRow < n && newCol >= 0 && newCol < n && visited[newRow][newCol] == 0) {
                    row = newRow;
                    col = newCol;
                    answer[j]++;
                    visited[row][col] = 1;
                } else {
                    break;
                }
            }
        }
        return answer;
    }

}