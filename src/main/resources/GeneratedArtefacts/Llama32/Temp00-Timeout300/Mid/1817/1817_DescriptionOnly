package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import java.util.*;

public class DescriptionOnlyTest {

    public static void main(String[] args) {
        System.out.println(Arrays.toString(new Solution().findDifferentUsersPerMinute(new int[][]{{1, 0}, {2, 1}, {3, 2}}, 5)));
        System.out.println(Arrays.toString(new Solution().findDifferentUsersPerMinute(new int[][]{{4, 3}, {5, 3}, {7, 6}}, 5)));
        System.out.println(Arrays.toString(new Solution().findDifferentUsersPerMinute(new int[][]{{1, 0}, {2, 1}, {3, 2}, {4, 3}}, 5)));
        System.out.println(Arrays.toString(new Solution().findDifferentUsersPerMinute(new int[][]{{1, 0}, {2, 1}, {3, 2}, {4, 3}, {5, 4}}, 5)));
        System.out.println(Arrays.toString(new Solution().findDifferentUsersPerMinute(new int[][]{{1, 0}, {2, 1}, {3, 2}, {4, 3}, {5, 4}, {6, 5}}, 5)));
    }
}

class Solution {

    public int[] findDifferentUsersPerMinute(int[][] logs, int k) {
        Map<Integer, Set<Integer>> map = new HashMap<>();
        for (int i = 0; i < logs.length; i++) {
            map.computeIfAbsent(logs[i][1], key -> new HashSet<>()).add(logs[i][0]);
        }
        List<Integer> list = new ArrayList<>(map.values());
        Collections.sort(list, Comparator.comparingInt(a -> a.size()));
        int[] answer = new int[k];
        for (int i = 0; i < k; i++) {
            answer[i] = list.get(i).size();
        }
        return answer;
    }

}