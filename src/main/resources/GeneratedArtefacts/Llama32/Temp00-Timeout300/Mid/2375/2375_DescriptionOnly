package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;

public class 2375_DescriptionOnlyTest {

    @Test
    public void test_1() {
        String pattern = "ID";
        String num = "1239";
        assertEquals(num, getSmallestNumber(pattern));
    }

    @Test
    public void test_2() {
        String pattern = "DD";
        String num = "98";
        assertEquals(num, getSmallestNumber(pattern));
    }

    @Test
    public void test_3() {
        String pattern = "II";
        String num = "12";
        assertEquals(num, getSmallestNumber(pattern));
    }

    @Test
    public void test_4() {
        String pattern = "IDD";
        String num = "1239";
        assertEquals(num, getSmallestNumber(pattern));
    }

    @Test
    public void test_5() {
        String pattern = "DDI";
        String num = "98";
        assertEquals(num, getSmallestNumber(pattern));
    }
}

public class Solution {

    public String getSmallestNumber(String pattern) {
        int n = pattern.length();
        char[] digits = new char[n + 1];
        for (int i = 0; i < n; i++) {
            if (pattern.charAt(i) == 'I') {
                for (char c = '9'; c >= '1'; c--) {
                    if (digits[i] != c && (i == 0 || digits[i - 1] > c)) {
                        digits[i] = c;
                        break;
                    }
                }
            } else {
                for (char c = '0'; c <= '8'; c++) {
                    if (digits[i] != c && (i == 0 || digits[i - 1] < c)) {
                        digits[i] = c;
                        break;
                    }
                }
            }
        }
        return new String(digits);
    }
}