package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.1415;

public class Solution {
    public String getHappyString(int n, int k) {
        StringBuilder sb = new StringBuilder();
        char[] chars = new char[n];
        for (int i = 0; i < n; i++) {
            chars[i] = 'a';
        }
        List<String> list = new ArrayList<>();
        while (k > 0 && !isHappyString(chars, list)) {
            k--;
            swap(chars);
        }
        if (k == 0) return "";
        for (int i = 0; i < n - 1; i++) {
            sb.append(chars[i]);
            if (chars[i] != 'c') {
                break;
            }
        }
        return sb.toString();
    }

    private boolean isHappyString(char[] chars, List<String> list) {
        for (int i = 0; i < chars.length - 1; i++) {
            if (chars[i] == chars[i + 1]) {
                return false;
            }
        }
        return true;
    }

    private void swap(char[] chars) {
        char temp = 'a';
        for (int i = 0; i < chars.length / 2; i++) {
            char temp2 = chars[i];
            chars[i] = chars[chars.length - i - 1];
            chars[chars.length - i - 1] = temp2;
            if (temp == 'c') {
                temp = 'b';
            } else if (temp == 'b') {
                temp = 'a';
            }
        }
    }
}