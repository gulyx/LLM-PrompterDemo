```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class DescriptionExample {

    @Test
    public void testPartitionString() {
        String s = "abacaba";
        int expectedOutput = 4;
        assertEquals(expectedOutput, partitionString(s));
    }

    @Test
    public void testPartitionString2() {
        String s = "ssssss";
        int expectedOutput = 6;
        assertEquals(expectedOutput, partitionString(s));
    }

    @Test
    public void testPartitionString3() {
        String s = "abcde";
        int expectedOutput = 5;
        assertEquals(expectedOutput, partitionString(s));
    }

    @Test
    public void testPartitionString4() {
        String s = "";
        int expectedOutput = 0;
        assertEquals(expectedOutput, partitionString(s));
    }

    @Test
    public void testPartitionString5() {
        String s = "a";
        int expectedOutput = 1;
        assertEquals(expectedOutput, partitionString(s));
    }
}

public class Solution {

    public int partitionString(String s) {
        int n = s.length();
        boolean[] used = new boolean[26];
        int res = 0;

        for (int i = 0; i < n; ++i) {
            int idx = s.charAt(i) - 'a';
            if (used[idx]) {
                used = reset(used);
                ++res;
            }
            else
                used[idx] = true;
        }

        return res + 1;
    }

    private boolean[] reset(boolean[] used) {
        for (int i = 0; i < used.length; ++i)
            used[i] = false;
        return used;
    }
}
```