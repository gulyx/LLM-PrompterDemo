As a professional Software Tester, generate a complete Junit test-class (name the test-class as: '2415_DescriptionExample_testsTest', and use as first line the declaration: 'package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.2415;') with 5 different JUnit tests for a Java class-under-test (you can assume the class-under-test is named: Solution, and import it as: 'import it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen.2415.Solution;'). The class-under-test implements the following description in natural language with examples. Specifically below the description, each example is introduced by the keyword [--Example XX--] (where XX is a number), and it is composed by an input tuple and an expected output. Emit only the Java code, without any other tag or text.  Here is the description for the class-under-test: 
Given the "root" of a "perfect" binary tree, reverse the node values at each "odd" level of the tree.
Return the root of the reversed tree.
A binary tree is "perfect" if all parent nodes have two children and all leaves are on the same level.
The "level" of a node is the number of edges along the path between it and the root node.

[--Example 1--]
Input: root = [2,3,5,8,13,21,34]
Output: [2,5,3,8,13,21,34]
[--Example 2--]
Input: root = [7,13,11] 
Output: [7,11,13]
[--Example 3--]
Input: root = [0,1,2,0,0,0,0,1,1,1,1,2,2,2,2]
Output: [0,2,1,0,0,0,0,2,2,2,2,1,1,1,1]