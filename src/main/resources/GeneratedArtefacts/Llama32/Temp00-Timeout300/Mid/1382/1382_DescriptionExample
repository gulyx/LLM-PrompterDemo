```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;

public class DescriptionExample {

    @Test
    public void testBalancedBST() {
        TreeNode root = new TreeNode(1);
        root.left = new TreeNode(2);
        root.right = new TreeNode(3);

        TreeNode expectedRoot = new TreeNode(2);
        expectedRoot.left = new TreeNode(1);
        expectedRoot.right = new TreeNode(3);

        TreeNode actualRoot = balanceBST(root);
        assertEquals(expectedRoot, actualRoot);
    }

    @Test
    public void testBalancedBSTWithNull() {
        TreeNode root = new TreeNode(1);
        root.left = null;
        root.right = new TreeNode(2);

        TreeNode expectedRoot = new TreeNode(2);
        expectedRoot.right = new TreeNode(1);

        TreeNode actualRoot = balanceBST(root);
        assertEquals(expectedRoot, actualRoot);
    }

    @Test
    public void testBalancedBSTWithMultipleNodes() {
        TreeNode root = new TreeNode(2);
        root.left = new TreeNode(1);
        root.right = new TreeNode(3);

        TreeNode expectedRoot = new TreeNode(2);
        expectedRoot.left = new TreeNode(1);
        expectedRoot.right = new TreeNode(3);

        TreeNode actualRoot = balanceBST(root);
        assertEquals(expectedRoot, actualRoot);
    }

    @Test
    public void testBalancedBSTWithSingleNode() {
        TreeNode root = new TreeNode(2);

        TreeNode expectedRoot = new TreeNode(2);

        TreeNode actualRoot = balanceBST(root);
        assertEquals(expectedRoot, actualRoot);
    }

    @Test
    public void testBalancedBSTWithEmptyTree() {
        TreeNode root = null;

        TreeNode expectedRoot = null;

        TreeNode actualRoot = balanceBST(root);
        assertEquals(expectedRoot, actualRoot);
    }
}

class TreeNode {
    int val;
    TreeNode left;
    TreeNode right;
    TreeNode(int x) { val = x; }
}
```