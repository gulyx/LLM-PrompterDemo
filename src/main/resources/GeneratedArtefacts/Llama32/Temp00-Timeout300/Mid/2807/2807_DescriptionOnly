package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.*;

public class 2807_DescriptionOnly {

    @Test
    public void test_GivenEmptyList_ReturnsEmptyList() {
        ListNode head = new ListNode(1);
        head.next = null;
        head = insertGCD(head, 2);
        head = insertGCD(head, 3);
        head = insertGCD(head, 4);
        head = insertGCD(head, 5);
        assertEquals(null, head.next);
    }

    @Test
    public void test_GivenListWithOneNode_ReturnsListWithTwoNodes() {
        ListNode head = new ListNode(1);
        head.next = null;
        head = insertGCD(head, 2);
        head = insertGCD(head, 3);
        head = insertGCD(head, 4);
        head = insertGCD(head, 5);
        assertEquals(new ListNode(1), head);
        assertEquals(new ListNode(1), head.next);
    }

    @Test
    public void test_GivenListWithTwoNodes_ReturnsListWithThreeNodes() {
        ListNode head = new ListNode(2);
        head.next = new ListNode(3);
        head = insertGCD(head, 4);
        head = insertGCD(head, 5);
        assertEquals(new ListNode(1), head);
        assertEquals(new ListNode(1), head.next);
        assertEquals(new ListNode(1), head.next.next);
    }

    @Test
    public void test_GivenListWithThreeNodes_ReturnsListWithFourNodes() {
        ListNode head = new ListNode(2);
        head.next = new ListNode(3);
        head.next.next = new ListNode(4);
        head = insertGCD(head, 5);
        assertEquals(new ListNode(1), head);
        assertEquals(new ListNode(1), head.next);
        assertEquals(new ListNode(1), head.next.next);
        assertEquals(new ListNode(1), head.next.next.next);
    }

    @Test
    public void test_GivenListWithFourNodes_ReturnsListWithFiveNodes() {
        ListNode head = new ListNode(2);
        head.next = new ListNode(3);
        head.next.next = new ListNode(4);
        head.next.next.next = new ListNode(5);
        head = insertGCD(head, 6);
        assertEquals(new ListNode(1), head);
        assertEquals(new ListNode(1), head.next);
        assertEquals(new ListNode(1), head.next.next);
        assertEquals(new ListNode(1), head.next.next.next);
        assertEquals(new ListNode(1), head.next.next.next.next);
    }
}

class ListNode {
    int val;
    ListNode next;
    ListNode(int x) { val = x; }
}