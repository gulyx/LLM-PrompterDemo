```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;

public class 2807_DescriptionExample {

    public ListNode insertGreatestCommonDivisor(ListNode head) {
        ListNode dummy = new ListNode(0);
        dummy.next = head;
        ListNode prev = dummy;
        while (prev.next != null && prev.next.next != null) {
            int gcd = getGCD(prev.next.val, prev.next.next.val);
            ListNode newNode = new ListNode(gcd);
            newNode.next = prev.next.next;
            prev.next.next = newNode;
            prev.next = newNode;
        }
        return dummy.next;
    }

    private int getGCD(int a, int b) {
        while (b != 0) {
            int temp = b;
            b = a % b;
            a = temp;
        }
        return Math.abs(a);
    }

    @Test
    public void testInsertGreatestCommonDivisor() {
        ListNode head = new ListNode(18);
        head.next = new ListNode(6);
        head.next.next = new ListNode(10);
        head.next.next.next = new ListNode(3);

        ListNode result = insertGreatestCommonDivisor(head);
        while (result != null) {
            System.out.print(result.val + " ");
            result = result.next;
        }
    }

    @Test
    public void testInsertGreatestCommonDivisor_SingleNode() {
        ListNode head = new ListNode(7);

        ListNode result = insertGreatestCommonDivisor(head);
        while (result != null) {
            System.out.print(result.val + " ");
            result = result.next;
        }
    }

    @Test
    public void testInsertGreatestCommonDivisor_EmptyList() {
        ListNode head = null;

        ListNode result = insertGreatestCommonDivisor(head);
        assert(result == null);
    }

    @Test
    public void testInsertGreatestCommonDivisor_TwoNode() {
        ListNode head = new ListNode(12);
        head.next = new ListNode(24);

        ListNode result = insertGreatestCommonDivisor(head);
        while (result != null) {
            System.out.print(result.val + " ");
            result = result.next;
        }
    }

    @Test
    public void testInsertGreatestCommonDivisor_ThreeNode() {
        ListNode head = new ListNode(12);
        head.next = new ListNode(24);
        head.next.next = new ListNode(36);

        ListNode result = insertGreatestCommonDivisor(head);
        while (result != null) {
            System.out.print(result.val + " ");
            result = result.next;
        }
    }

}
```