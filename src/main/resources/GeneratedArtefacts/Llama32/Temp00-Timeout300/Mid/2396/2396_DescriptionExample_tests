```java
package it.cnr.iasi.saks.llmPrompter.leetCodeDemo.gen;

import org.junit.Test;
import static org.junit.Assert.*;

public class DescriptionExampleTest {

    @Test
    public void testNotStrictlyPalindromic() {
        int n = 9;
        boolean result = isStrictlyPalindromic(n);
        assertFalse(result);
    }

    @Test
    public void testNotStrictlyPalindromic2() {
        int n = 4;
        boolean result = isStrictlyPalindromic(n);
        assertFalse(result);
    }

    @Test
    public void testStrictlyPalindromic() {
        int n = 1;
        boolean result = isStrictlyPalindromic(n);
        assertTrue(result);
    }

    @Test
    public void testStrictlyPalindromic2() {
        int n = 2;
        boolean result = isStrictlyPalindromic(n);
        assertTrue(result);
    }

    @Test
    public void testStrictlyPalindromic3() {
        int n = 9;
        boolean result = isStrictlyPalindromic(n);
        assertTrue(result);
    }
}

public class Solution {

    public boolean isStrictlyPalindromic(int n) {
        for (int b = 2; b < n - 1; b++) {
            String strN = Integer.toString(n, b);
            if (!isPalindrome(strN)) {
                return false;
            }
        }
        return true;
    }

    private boolean isPalindrome(String s) {
        int left = 0;
        int right = s.length() - 1;
        while (left < right) {
            if (s.charAt(left) != s.charAt(right)) {
                return false;
            }
            left++;
            right--;
        }
        return true;
    }
}
```